{"ast":null,"code":"var _jsxFileName = \"/Users/germangurov/projects/wax_bot/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport _ from 'lodash';\nimport { useCallback, useEffect, useState } from 'react';\nimport { wax } from './core/wax';\nimport { startBot, stopBot } from './bot/bot';\nimport ECONOMY_VALUES from './novopangea/consts/ECONOMY_VALUES';\n\n// UPGRADE_WORKERS_TO_LVL: 4,\n// // maximum external land price bot will agree to\n// MAX_LAND_RENT_PRICE_OBSD: 0.00000331,\n// // minimum building level to be placed to a land\n// MIN_RENT_BUILDING_LEVELS: {\n//     rest: 3,\n//     materials: 4,\n//     food: 4,\n//     energy: 4,\n// },\n// // minimum wage your workers agree to work\n// JOB_MIN_PROFITS_OBSD: [\n//     // level 1\n//     2,\n//     // level 2\n//     4.39400,\n//     // level 3\n//     6.59100,\n//     // level 4\n//     7.69000,\n//     // level 5\n//     8.72000,\n// ],\n// // maximum cost your workers agree to rest\n// REST_MAX_COST_OBSD: [\n//     // level 1\n//     1.1,\n//     // level 2\n//     1.510,\n//     // level 3\n//     1.873,\n//     // level 4\n//     2.055,\n//     // level 5\n//     2.237,\n// ],\n// // control values\n// ENABLE_WORKER_UPGRADES: true,\n// ENABLE_RENT_EXTERNAL_LANDS: true,\n// ENABLE_RENEW_RENT_LANDS: true,\n// ENABLE_REST_SKILLED_WORKERS: true,\n// ENABLE_REST_UNSKILLED_WORKERS: true,\n// ENABLE_SHIFT_SKILLED_WORKERS: true,\n// ENABLE_SHIFT_UNSKILLED_WORKERS: true,\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [allBotSettings, setAllBotSettings] = useState([]);\n  useEffect(() => {\n    const allBotSettings = localStorage.getItem('allBotSettings');\n    if (allBotSettings == null) {\n      const nextAllBotSettigns = [{\n        key: 'claimwax',\n        name: 'Claim Wax',\n        enabled: false\n      }, {\n        key: 'novopangea',\n        name: 'Novopangea',\n        enabled: false,\n        params: ECONOMY_VALUES\n      }];\n      localStorage.setItem('allBotSettings', JSON.stringify(nextAllBotSettigns));\n      setAllBotSettings(nextAllBotSettigns);\n    } else {\n      setAllBotSettings(JSON.parse(allBotSettings));\n    }\n  }, []);\n  const login = useCallback(async () => {\n    try {\n      const userAccount = await wax.login();\n      const pubKeys = wax.pubKeys;\n      console.log(`AutoLogin enabled for account: ${userAccount}`);\n      console.log(`Active: ${pubKeys[0]} Owner: ${pubKeys[1]}`);\n    } catch (err) {\n      console.log(err);\n      console.log(err.message);\n    }\n  }, []);\n  const [isBotStarted, setIsBotStarted] = useState(false);\n  const _startBot = useCallback(async () => {\n    startBot();\n    setIsBotStarted(true);\n  }, []);\n  const _stopBot = useCallback(async () => {\n    stopBot();\n    setIsBotStarted(false);\n  }, []);\n  const toggleBot = useCallback(({\n    botSettings\n  }) => {\n    botSettings.enabled = !botSettings.enabled;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '12px 24px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hi there, this page contains WAX bots. You assume all possible risks start using this bot, please check terms and condition of each WAX project if bots allowed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), isBotStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: _stopBot,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: _startBot,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), allBotSettings.map(botSettings => {\n      const enableCheckboxId = `enable-checkbox-${botSettings.key}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-settings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: botSettings.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), botSettings.key === 'claimwax' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Visit WAX wallet \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://wallet.wax.io/staking-rewards\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"staking page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 37\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Visit novopangea game \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://novopangea.io/\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 42\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: enableCheckboxId,\n          type: \"checkbox\",\n          checked: botSettings.enabled,\n          onClick: () => {\n            toggleBot({\n              botSettings\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: enableCheckboxId,\n          children: \"Enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, botSettings.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IcAKWw9dpmFU0aPbLYN5EwvhJUs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_","useCallback","useEffect","useState","wax","startBot","stopBot","ECONOMY_VALUES","jsxDEV","_jsxDEV","App","_s","allBotSettings","setAllBotSettings","localStorage","getItem","nextAllBotSettigns","key","name","enabled","params","setItem","JSON","stringify","parse","login","userAccount","pubKeys","console","log","err","message","isBotStarted","setIsBotStarted","_startBot","_stopBot","toggleBot","botSettings","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","enableCheckboxId","className","href","target","rel","id","type","checked","for","_c","$RefreshReg$"],"sources":["/Users/germangurov/projects/wax_bot/src/App.js"],"sourcesContent":["import './App.css';\nimport _ from 'lodash';\nimport { useCallback, useEffect, useState } from 'react';\nimport { wax } from './core/wax';\nimport { startBot, stopBot } from './bot/bot';\nimport ECONOMY_VALUES from './novopangea/consts/ECONOMY_VALUES';\n\n    // UPGRADE_WORKERS_TO_LVL: 4,\n    // // maximum external land price bot will agree to\n    // MAX_LAND_RENT_PRICE_OBSD: 0.00000331,\n    // // minimum building level to be placed to a land\n    // MIN_RENT_BUILDING_LEVELS: {\n    //     rest: 3,\n    //     materials: 4,\n    //     food: 4,\n    //     energy: 4,\n    // },\n    // // minimum wage your workers agree to work\n    // JOB_MIN_PROFITS_OBSD: [\n    //     // level 1\n    //     2,\n    //     // level 2\n    //     4.39400,\n    //     // level 3\n    //     6.59100,\n    //     // level 4\n    //     7.69000,\n    //     // level 5\n    //     8.72000,\n    // ],\n    // // maximum cost your workers agree to rest\n    // REST_MAX_COST_OBSD: [\n    //     // level 1\n    //     1.1,\n    //     // level 2\n    //     1.510,\n    //     // level 3\n    //     1.873,\n    //     // level 4\n    //     2.055,\n    //     // level 5\n    //     2.237,\n    // ],\n    // // control values\n    // ENABLE_WORKER_UPGRADES: true,\n    // ENABLE_RENT_EXTERNAL_LANDS: true,\n    // ENABLE_RENEW_RENT_LANDS: true,\n    // ENABLE_REST_SKILLED_WORKERS: true,\n    // ENABLE_REST_UNSKILLED_WORKERS: true,\n    // ENABLE_SHIFT_SKILLED_WORKERS: true,\n    // ENABLE_SHIFT_UNSKILLED_WORKERS: true,\n\nfunction App() {\n  const [allBotSettings, setAllBotSettings] = useState([]);\n  useEffect(() => {\n    const allBotSettings = localStorage.getItem('allBotSettings');\n    if (allBotSettings == null) {\n      const nextAllBotSettigns = [\n        {\n          key: 'claimwax',\n          name: 'Claim Wax',\n          enabled: false,\n        },\n        {\n          key: 'novopangea',\n          name: 'Novopangea',\n          enabled: false,\n          params: ECONOMY_VALUES,\n        },\n      ];\n      localStorage.setItem('allBotSettings', JSON.stringify(nextAllBotSettigns));\n      setAllBotSettings(nextAllBotSettigns);\n    } else {\n      setAllBotSettings(JSON.parse(allBotSettings));\n    }\n  }, []);\n  const login = useCallback(async () => {\n    try {\n      const userAccount = await wax.login();\n      const pubKeys = wax.pubKeys;\n      console.log(`AutoLogin enabled for account: ${userAccount}`);\n      console.log(`Active: ${pubKeys[0]} Owner: ${pubKeys[1]}`);\n    } catch (err) {\n      console.log(err);\n      console.log(err.message);\n    }\n  }, []);\n\n  const [isBotStarted, setIsBotStarted] = useState(false);\n  const _startBot = useCallback(async () => {\n    startBot();\n    setIsBotStarted(true);\n  }, []);\n\n  const _stopBot = useCallback(async () => {\n    stopBot();\n    setIsBotStarted(false);\n  }, []);\n\n  const toggleBot = useCallback(({\n    botSettings,\n  }) => {\n    botSettings.enabled = !botSettings.enabled;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n\n  return (\n    <div\n      style={{\n        padding: '12px 24px',\n      }}\n    >\n      <div>Hi there, this page contains WAX bots. You assume all possible risks start using this bot, please check terms and condition of each WAX project if bots allowed.</div>\n      <br />\n      {isBotStarted ? (\n        <button onClick={_stopBot}>Stop</button>\n      ) : (\n        <button onClick={_startBot}>Run</button>\n      )}\n      <button onClick={login}>Login</button>\n      <br />\n      <br />\n      {allBotSettings.map(botSettings => {\n        const enableCheckboxId = `enable-checkbox-${botSettings.key}`;\n        return <div key={botSettings.key} className='bot-settings'>\n          <h3>{botSettings.name}</h3>\n          {botSettings.key === 'claimwax'\n            ? <div>Visit WAX wallet <a href=\"https://wallet.wax.io/staking-rewards\" target='_blank' rel=\"noreferrer\" >staking page</a>.</div>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <div>Visit novopangea game <a href=\"https://novopangea.io/\" target='_blank' rel=\"noreferrer\" >website</a>.</div>\n            : null\n          }\n          <br/>\n          <input id={enableCheckboxId} type='checkbox' checked={botSettings.enabled} onClick={() => {\n            toggleBot({\n              botSettings\n            });\n          }}/>\n          <label for={enableCheckboxId}>Enabled</label>\n        </div>;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}