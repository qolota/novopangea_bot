{"ast":null,"code":"const _ = require('lodash');\nconst fetchAssets = require('../atomicassets/api/fetchAssets');\nconst repairVehicle = require('./actions/repairVehicle');\nconst repairVehiclesCalcNextAction = async ({\n  accountName\n}) => {\n  let actions = _(await fetchAssets({\n    params: {\n      owner: accountName,\n      collection_name: 'novarallywax',\n      schema_name: 'vehicles'\n    },\n    customProcessor: ({\n      asset\n    }) => ({\n      isDamaged: asset.data['Damaged'] === '1' ? true : false\n    })\n  })).filter(vehicle => vehicle.isDamaged).map(vehicle => repairVehicle({\n    accountName,\n    vehicleId: vehicle.id\n  })).flatten().value();\n  if (actions.length > 0) {\n    return {\n      action: 'repair_vehicles',\n      actions\n    };\n  }\n  return {\n    action: 'wait',\n    message: 'No damaged vehicles'\n  };\n};\nmodule.exports = repairVehiclesCalcNextAction;","map":{"version":3,"names":["_","require","fetchAssets","repairVehicle","repairVehiclesCalcNextAction","accountName","actions","params","owner","collection_name","schema_name","customProcessor","asset","isDamaged","data","filter","vehicle","map","vehicleId","id","flatten","value","length","action","message","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novarallywax/repairVehiclesCalcNextAction.js"],"sourcesContent":["const _ = require('lodash');\nconst fetchAssets = require('../atomicassets/api/fetchAssets');\nconst repairVehicle = require('./actions/repairVehicle');\n\nconst repairVehiclesCalcNextAction = async ({\n    accountName,\n}) => {\n    let actions = _(await fetchAssets({\n        params: {\n            owner: accountName,\n            collection_name: 'novarallywax',\n            schema_name: 'vehicles',\n        },\n        customProcessor: ({asset}) => ({\n            isDamaged: asset.data['Damaged'] === '1'\n                ? true\n                : false,\n        }),\n    }))\n        .filter(vehicle => vehicle.isDamaged)\n        .map(vehicle => repairVehicle({\n            accountName,\n            vehicleId: vehicle.id,\n        }))\n        .flatten()\n        .value();\n\n    if (actions.length > 0) {\n        return {\n            action: 'repair_vehicles',\n            actions,\n        };\n    }\n\n    return {\n        action: 'wait',\n        message: 'No damaged vehicles',\n    };\n    \n};\n\nmodule.exports = repairVehiclesCalcNextAction;"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,WAAW,GAAGD,OAAO,CAAC,iCAAiC,CAAC;AAC9D,MAAME,aAAa,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAExD,MAAMG,4BAA4B,GAAG,MAAAA,CAAO;EACxCC;AACJ,CAAC,KAAK;EACF,IAAIC,OAAO,GAAGN,CAAC,CAAC,MAAME,WAAW,CAAC;IAC9BK,MAAM,EAAE;MACJC,KAAK,EAAEH,WAAW;MAClBI,eAAe,EAAE,cAAc;MAC/BC,WAAW,EAAE;IACjB,CAAC;IACDC,eAAe,EAAEA,CAAC;MAACC;IAAK,CAAC,MAAM;MAC3BC,SAAS,EAAED,KAAK,CAACE,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,GAClC,IAAI,GACJ;IACV,CAAC;EACL,CAAC,CAAC,CAAC,CACEC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACH,SAAS,CAAC,CACpCI,GAAG,CAACD,OAAO,IAAIb,aAAa,CAAC;IAC1BE,WAAW;IACXa,SAAS,EAAEF,OAAO,CAACG;EACvB,CAAC,CAAC,CAAC,CACFC,OAAO,CAAC,CAAC,CACTC,KAAK,CAAC,CAAC;EAEZ,IAAIf,OAAO,CAACgB,MAAM,GAAG,CAAC,EAAE;IACpB,OAAO;MACHC,MAAM,EAAE,iBAAiB;MACzBjB;IACJ,CAAC;EACL;EAEA,OAAO;IACHiB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;EACb,CAAC;AAEL,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGtB,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}