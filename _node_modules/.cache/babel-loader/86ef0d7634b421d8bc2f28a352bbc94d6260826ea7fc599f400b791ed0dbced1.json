{"ast":null,"code":"function extractDomainWithProtocol(url) {\n  // Remove www subdomain if present\n  let domain = url.replace(/^(https?:\\/\\/)?(www\\.)?/, '');\n\n  // Remove path and query string\n  domain = domain.replace(/\\/(.|\\n)*$/, '');\n\n  // Remove subdomains except for the first one\n  domain = domain.split('.').slice(-2).join('.');\n\n  // Add the protocol back to the domain\n  domain = url.match(/^(https?:\\/\\/)/)[0] + domain;\n  return domain;\n}\nmodule.exports = extractDomainWithProtocol;","map":{"version":3,"names":["extractDomainWithProtocol","url","domain","replace","split","slice","join","match","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/utils/extractDomainWithProtocol.js"],"sourcesContent":["function extractDomainWithProtocol(url) {\n    // Remove www subdomain if present\n    let domain = url.replace(/^(https?:\\/\\/)?(www\\.)?/, '');\n  \n    // Remove path and query string\n    domain = domain.replace(/\\/(.|\\n)*$/, '');\n  \n    // Remove subdomains except for the first one\n    domain = domain.split('.').slice(-2).join('.');\n  \n    // Add the protocol back to the domain\n    domain = url.match(/^(https?:\\/\\/)/)[0] + domain;\n  \n    return domain;\n}\n\nmodule.exports = extractDomainWithProtocol;"],"mappings":"AAAA,SAASA,yBAAyBA,CAACC,GAAG,EAAE;EACpC;EACA,IAAIC,MAAM,GAAGD,GAAG,CAACE,OAAO,CAAC,yBAAyB,EAAE,EAAE,CAAC;;EAEvD;EACAD,MAAM,GAAGA,MAAM,CAACC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;;EAEzC;EACAD,MAAM,GAAGA,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;;EAE9C;EACAJ,MAAM,GAAGD,GAAG,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAGL,MAAM;EAEhD,OAAOA,MAAM;AACjB;AAEAM,MAAM,CAACC,OAAO,GAAGT,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}