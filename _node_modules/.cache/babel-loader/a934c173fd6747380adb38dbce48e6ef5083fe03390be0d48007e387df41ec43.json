{"ast":null,"code":"const fetchExchange = require('./fetchExchange');\nconst fetchNovoPrice = require('./fetchNovoPrice');\nconst fetchAccountBuildings = require('./fetchAccountBuildings');\nconst fetchAccountWorkers = require('./fetchAccountWorkers');\nconst fetchBuildings = require('./fetchBuildings');\nconst fetchWorkerConfigs = require('./fetchWorkerConfigs');\nconst fetchDistricts = require('./fetchDistricts');\nconst fetchRealms = require('./fetchRealms');\nconst fetchBuildingConfigs = require('./fetchBuildingConfigs');\nconst fetchLands = require('./fetchLands');\nconst fetchLandConfigs = require('./fetchLandConfigs');\nconst fetchSpeedupConfigs = require('./fetchSpeedupConfigs');\nconst fetchAccountTransfers = require('./fetchAccountTransfers');\nconst fetchAccounts = require('./fetchAccounts');\nconst fetchWorkers = require('./fetchWorkers');\nconst fetchAccountLands = require('./fetchAccountLands');\nconst fetchOngoingUpgrades = require('./fetchOngoingUpgrades');\nconst fetchUpgradeConfigs = require('./fetchUpgradeConfigs');\nconst fetchAllGameData = async ({\n  accountName\n}) => {\n  // tokens\n  const exchange = await fetchExchange();\n  const novoPrice = await fetchNovoPrice();\n\n  // accounts\n  const accounts = await fetchAccounts({\n    cache: {\n      exchange,\n      novoPrice\n    }\n  });\n  const account = accounts.find(account => account.accountName === accountName);\n\n  // configs\n  const landConfigs = await fetchLandConfigs({\n    cache: {\n      exchange,\n      novoPrice\n    }\n  });\n  const buildingConfigs = await fetchBuildingConfigs({\n    cache: {\n      exchange,\n      novoPrice\n    }\n  });\n  const workerConfigs = await fetchWorkerConfigs({\n    cache: {\n      exchange,\n      novoPrice\n    }\n  });\n  const speedupConfigs = await fetchSpeedupConfigs();\n\n  // assets staked in game\n  const accountTransfers = await fetchAccountTransfers({\n    accountName,\n    cache: {\n      workerConfigs,\n      buildingConfigs,\n      speedupConfigs\n    }\n  });\n\n  // map\n  const realms = await fetchRealms();\n  const districts = await fetchDistricts({\n    cache: {\n      realms\n    }\n  });\n\n  // upgrades\n  const upgradeConfigs = await fetchUpgradeConfigs({\n    cache: {\n      exchange,\n      novoPrice,\n      realms\n    }\n  });\n  const upgrades = await fetchOngoingUpgrades({\n    cache: {\n      upgradeConfigs\n    }\n  });\n\n  // lands\n  const lands = await fetchLands({\n    cache: {\n      exchange,\n      novoPrice,\n      realms,\n      districts,\n      landConfigs\n    }\n  });\n  const accountLands = await fetchAccountLands({\n    accountName,\n    cache: {\n      lands\n    }\n  });\n\n  // buildings\n  const buildings = await fetchBuildings({\n    cache: {\n      exchange,\n      novoPrice,\n      buildingConfigs,\n      workerConfigs,\n      landConfigs,\n      districts,\n      lands,\n      accounts\n    }\n  });\n  const accountBuildings = await fetchAccountBuildings({\n    accountName,\n    cache: {\n      buildings,\n      workerConfigs\n    }\n  });\n\n  // workers\n  const workers = await fetchWorkers({\n    cache: {\n      buildingConfigs,\n      workerConfigs,\n      districts,\n      buildings\n    }\n  });\n  const accountWorkers = await fetchAccountWorkers({\n    accountName,\n    cache: {\n      workers,\n      buildings,\n      districts,\n      workerConfigs,\n      buildingConfigs,\n      speedupConfigs,\n      accountTransfers,\n      upgrades\n    }\n  });\n  return {\n    exchange,\n    novoPrice,\n    accounts,\n    account,\n    landConfigs,\n    buildingConfigs,\n    workerConfigs,\n    speedupConfigs,\n    realms,\n    districts,\n    lands,\n    buildings,\n    workers,\n    accountTransfers,\n    accountLands,\n    accountBuildings,\n    accountWorkers,\n    upgradeConfigs,\n    upgrades\n  };\n};\nmodule.exports = fetchAllGameData;","map":{"version":3,"names":["fetchExchange","require","fetchNovoPrice","fetchAccountBuildings","fetchAccountWorkers","fetchBuildings","fetchWorkerConfigs","fetchDistricts","fetchRealms","fetchBuildingConfigs","fetchLands","fetchLandConfigs","fetchSpeedupConfigs","fetchAccountTransfers","fetchAccounts","fetchWorkers","fetchAccountLands","fetchOngoingUpgrades","fetchUpgradeConfigs","fetchAllGameData","accountName","exchange","novoPrice","accounts","cache","account","find","landConfigs","buildingConfigs","workerConfigs","speedupConfigs","accountTransfers","realms","districts","upgradeConfigs","upgrades","lands","accountLands","buildings","accountBuildings","workers","accountWorkers","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novopangea/api/fetchAllGameData.js"],"sourcesContent":["const fetchExchange = require('./fetchExchange');\nconst fetchNovoPrice = require('./fetchNovoPrice');\nconst fetchAccountBuildings = require('./fetchAccountBuildings');\nconst fetchAccountWorkers = require('./fetchAccountWorkers');\nconst fetchBuildings = require('./fetchBuildings');\nconst fetchWorkerConfigs = require('./fetchWorkerConfigs');\nconst fetchDistricts = require('./fetchDistricts');\nconst fetchRealms = require('./fetchRealms');\nconst fetchBuildingConfigs = require('./fetchBuildingConfigs');\nconst fetchLands = require('./fetchLands');\nconst fetchLandConfigs = require('./fetchLandConfigs');\nconst fetchSpeedupConfigs = require('./fetchSpeedupConfigs');\nconst fetchAccountTransfers = require('./fetchAccountTransfers');\nconst fetchAccounts = require('./fetchAccounts');\nconst fetchWorkers = require('./fetchWorkers');\nconst fetchAccountLands = require('./fetchAccountLands');\nconst fetchOngoingUpgrades = require('./fetchOngoingUpgrades');\nconst fetchUpgradeConfigs = require('./fetchUpgradeConfigs');\n\nconst fetchAllGameData = async ({\n    accountName,\n}) => {\n    // tokens\n    const exchange = await fetchExchange();\n    const novoPrice = await fetchNovoPrice();\n\n    // accounts\n    const accounts = await fetchAccounts({\n        cache: {\n            exchange,\n            novoPrice,\n        },\n    });\n    const account = accounts.find(account => account.accountName === accountName);\n\n    // configs\n    const landConfigs = await fetchLandConfigs({\n        cache: {\n            exchange,\n            novoPrice,\n        },\n    })\n    const buildingConfigs = await fetchBuildingConfigs({\n        cache: {\n            exchange,\n            novoPrice,\n        },\n    });\n    const workerConfigs = await fetchWorkerConfigs({\n        cache: {\n            exchange,\n            novoPrice,\n        },\n    });\n    const speedupConfigs = await fetchSpeedupConfigs();\n\n    // assets staked in game\n    const accountTransfers = await fetchAccountTransfers({\n        accountName,\n        cache: {\n            workerConfigs,\n            buildingConfigs,\n            speedupConfigs,\n        },\n    });\n\n    // map\n    const realms = await fetchRealms();\n    const districts = await fetchDistricts({\n        cache: {\n            realms,\n        },\n    });\n\n    // upgrades\n    const upgradeConfigs = await fetchUpgradeConfigs({\n        cache: {\n            exchange,\n            novoPrice,\n            realms,\n        },\n    });\n    const upgrades = await fetchOngoingUpgrades({\n        cache: {\n            upgradeConfigs,\n        }\n    });\n\n    // lands\n    const lands = await fetchLands({\n        cache: {\n            exchange,\n            novoPrice,\n            realms,\n            districts,\n            landConfigs,\n        },\n    });\n    const accountLands = await fetchAccountLands({\n        accountName,\n        cache: {\n            lands,\n        },\n    });\n\n    // buildings\n    const buildings = await fetchBuildings({\n        cache: {\n            exchange,\n            novoPrice,\n            buildingConfigs,\n            workerConfigs,\n            landConfigs,\n            districts,\n            lands,\n            accounts,\n        },\n    });\n    const accountBuildings = await fetchAccountBuildings({\n        accountName,\n        cache: {\n            buildings,\n            workerConfigs,\n        },\n    });\n\n    // workers\n    const workers = await fetchWorkers({\n        cache: {\n            buildingConfigs,\n            workerConfigs,\n            districts,\n            buildings,\n        },\n    });\n    const accountWorkers = await fetchAccountWorkers({\n        accountName,\n        cache: {\n            workers,\n            buildings,\n            districts,\n            workerConfigs,\n            buildingConfigs,\n            speedupConfigs,\n            accountTransfers,\n            upgrades,\n        },\n    });\n\n    return {\n        exchange,\n        novoPrice,\n        accounts,\n        account,\n        landConfigs,\n        buildingConfigs,\n        workerConfigs,\n        speedupConfigs,\n        realms,\n        districts,\n        lands,\n        buildings,\n        workers,\n        accountTransfers,\n        accountLands,\n        accountBuildings,\n        accountWorkers,\n        upgradeConfigs,\n        upgrades,\n    };\n};\n\nmodule.exports = fetchAllGameData;\n"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAChD,MAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAME,qBAAqB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAMG,mBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AAC5D,MAAMI,cAAc,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAMK,kBAAkB,GAAGL,OAAO,CAAC,sBAAsB,CAAC;AAC1D,MAAMM,cAAc,GAAGN,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAMO,WAAW,GAAGP,OAAO,CAAC,eAAe,CAAC;AAC5C,MAAMQ,oBAAoB,GAAGR,OAAO,CAAC,wBAAwB,CAAC;AAC9D,MAAMS,UAAU,GAAGT,OAAO,CAAC,cAAc,CAAC;AAC1C,MAAMU,gBAAgB,GAAGV,OAAO,CAAC,oBAAoB,CAAC;AACtD,MAAMW,mBAAmB,GAAGX,OAAO,CAAC,uBAAuB,CAAC;AAC5D,MAAMY,qBAAqB,GAAGZ,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAMa,aAAa,GAAGb,OAAO,CAAC,iBAAiB,CAAC;AAChD,MAAMc,YAAY,GAAGd,OAAO,CAAC,gBAAgB,CAAC;AAC9C,MAAMe,iBAAiB,GAAGf,OAAO,CAAC,qBAAqB,CAAC;AACxD,MAAMgB,oBAAoB,GAAGhB,OAAO,CAAC,wBAAwB,CAAC;AAC9D,MAAMiB,mBAAmB,GAAGjB,OAAO,CAAC,uBAAuB,CAAC;AAE5D,MAAMkB,gBAAgB,GAAG,MAAAA,CAAO;EAC5BC;AACJ,CAAC,KAAK;EACF;EACA,MAAMC,QAAQ,GAAG,MAAMrB,aAAa,CAAC,CAAC;EACtC,MAAMsB,SAAS,GAAG,MAAMpB,cAAc,CAAC,CAAC;;EAExC;EACA,MAAMqB,QAAQ,GAAG,MAAMT,aAAa,CAAC;IACjCU,KAAK,EAAE;MACHH,QAAQ;MACRC;IACJ;EACJ,CAAC,CAAC;EACF,MAAMG,OAAO,GAAGF,QAAQ,CAACG,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACL,WAAW,KAAKA,WAAW,CAAC;;EAE7E;EACA,MAAMO,WAAW,GAAG,MAAMhB,gBAAgB,CAAC;IACvCa,KAAK,EAAE;MACHH,QAAQ;MACRC;IACJ;EACJ,CAAC,CAAC;EACF,MAAMM,eAAe,GAAG,MAAMnB,oBAAoB,CAAC;IAC/Ce,KAAK,EAAE;MACHH,QAAQ;MACRC;IACJ;EACJ,CAAC,CAAC;EACF,MAAMO,aAAa,GAAG,MAAMvB,kBAAkB,CAAC;IAC3CkB,KAAK,EAAE;MACHH,QAAQ;MACRC;IACJ;EACJ,CAAC,CAAC;EACF,MAAMQ,cAAc,GAAG,MAAMlB,mBAAmB,CAAC,CAAC;;EAElD;EACA,MAAMmB,gBAAgB,GAAG,MAAMlB,qBAAqB,CAAC;IACjDO,WAAW;IACXI,KAAK,EAAE;MACHK,aAAa;MACbD,eAAe;MACfE;IACJ;EACJ,CAAC,CAAC;;EAEF;EACA,MAAME,MAAM,GAAG,MAAMxB,WAAW,CAAC,CAAC;EAClC,MAAMyB,SAAS,GAAG,MAAM1B,cAAc,CAAC;IACnCiB,KAAK,EAAE;MACHQ;IACJ;EACJ,CAAC,CAAC;;EAEF;EACA,MAAME,cAAc,GAAG,MAAMhB,mBAAmB,CAAC;IAC7CM,KAAK,EAAE;MACHH,QAAQ;MACRC,SAAS;MACTU;IACJ;EACJ,CAAC,CAAC;EACF,MAAMG,QAAQ,GAAG,MAAMlB,oBAAoB,CAAC;IACxCO,KAAK,EAAE;MACHU;IACJ;EACJ,CAAC,CAAC;;EAEF;EACA,MAAME,KAAK,GAAG,MAAM1B,UAAU,CAAC;IAC3Bc,KAAK,EAAE;MACHH,QAAQ;MACRC,SAAS;MACTU,MAAM;MACNC,SAAS;MACTN;IACJ;EACJ,CAAC,CAAC;EACF,MAAMU,YAAY,GAAG,MAAMrB,iBAAiB,CAAC;IACzCI,WAAW;IACXI,KAAK,EAAE;MACHY;IACJ;EACJ,CAAC,CAAC;;EAEF;EACA,MAAME,SAAS,GAAG,MAAMjC,cAAc,CAAC;IACnCmB,KAAK,EAAE;MACHH,QAAQ;MACRC,SAAS;MACTM,eAAe;MACfC,aAAa;MACbF,WAAW;MACXM,SAAS;MACTG,KAAK;MACLb;IACJ;EACJ,CAAC,CAAC;EACF,MAAMgB,gBAAgB,GAAG,MAAMpC,qBAAqB,CAAC;IACjDiB,WAAW;IACXI,KAAK,EAAE;MACHc,SAAS;MACTT;IACJ;EACJ,CAAC,CAAC;;EAEF;EACA,MAAMW,OAAO,GAAG,MAAMzB,YAAY,CAAC;IAC/BS,KAAK,EAAE;MACHI,eAAe;MACfC,aAAa;MACbI,SAAS;MACTK;IACJ;EACJ,CAAC,CAAC;EACF,MAAMG,cAAc,GAAG,MAAMrC,mBAAmB,CAAC;IAC7CgB,WAAW;IACXI,KAAK,EAAE;MACHgB,OAAO;MACPF,SAAS;MACTL,SAAS;MACTJ,aAAa;MACbD,eAAe;MACfE,cAAc;MACdC,gBAAgB;MAChBI;IACJ;EACJ,CAAC,CAAC;EAEF,OAAO;IACHd,QAAQ;IACRC,SAAS;IACTC,QAAQ;IACRE,OAAO;IACPE,WAAW;IACXC,eAAe;IACfC,aAAa;IACbC,cAAc;IACdE,MAAM;IACNC,SAAS;IACTG,KAAK;IACLE,SAAS;IACTE,OAAO;IACPT,gBAAgB;IAChBM,YAAY;IACZE,gBAAgB;IAChBE,cAAc;IACdP,cAAc;IACdC;EACJ,CAAC;AACL,CAAC;AAEDO,MAAM,CAACC,OAAO,GAAGxB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}