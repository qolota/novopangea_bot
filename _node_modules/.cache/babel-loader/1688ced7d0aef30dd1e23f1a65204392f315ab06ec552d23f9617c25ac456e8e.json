{"ast":null,"code":"var _jsxFileName = \"/Users/germangurov/projects/wax_bot/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useCallback, useEffect, useState } from 'react';\nimport { wax } from './core/wax';\nimport { startBot, stopBot } from './bot/bot';\nimport { setEconomyValues, ECONOMY_VALUES } from './novopangea/consts/ECONOMY_VALUES';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getInitParams = () => [{\n  key: 'claimwax',\n  name: 'Claim Wax',\n  enabled: false\n}, {\n  key: 'novopangea',\n  name: 'Novopangea',\n  enabled: false,\n  params: ECONOMY_VALUES\n}];\nfunction App() {\n  _s();\n  const [allBotSettings, setAllBotSettings] = useState([]);\n  useEffect(() => {\n    let allBotSettings = localStorage.getItem('allBotSettings');\n    if (allBotSettings == null) {\n      allBotSettings = JSON.stringify(getInitParams());\n      localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    }\n    setEconomyValues({\n      economyValues: JSON.parse(allBotSettings).find(botSettings => botSettings.key === 'novopangea').params\n    });\n    setAllBotSettings(JSON.parse(allBotSettings));\n  }, []);\n  const login = useCallback(async () => {\n    try {\n      const userAccount = await wax.login();\n      console.log(`AutoLogin enabled for account: ${userAccount}`);\n    } catch (err) {\n      console.log(err);\n      console.log(err.message);\n    }\n  }, []);\n  const [isBotStarted, setIsBotStarted] = useState(false);\n  const _startBot = useCallback(async () => {\n    startBot();\n    setIsBotStarted(true);\n  }, []);\n  const _stopBot = useCallback(async () => {\n    stopBot();\n    setIsBotStarted(false);\n  }, []);\n  const toggleBot = useCallback(({\n    botSettings\n  }) => {\n    botSettings.enabled = !botSettings.enabled;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings.find(botSettings => botSettings.key === 'novopangea').params\n    });\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  const resetSettings = useCallback(() => {\n    const nextAllBotSettigns = getInitParams();\n    localStorage.setItem('allBotSettings', JSON.stringify(nextAllBotSettigns));\n    setEconomyValues({\n      economyValues: nextAllBotSettigns.find(botSettings => botSettings.key === 'novopangea').params\n    });\n    setAllBotSettings(nextAllBotSettigns);\n  }, [setAllBotSettings]);\n  const npSetJobProfit = useCallback(({\n    botSettings,\n    index,\n    newProfit\n  }) => {\n    botSettings.params.JOB_MIN_PROFITS_OBSD[index] = newProfit;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings.find(botSettings => botSettings.key === 'novopangea').params\n    });\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  const npSetRestCost = useCallback(({\n    botSettings,\n    index,\n    newCost\n  }) => {\n    botSettings.params.REST_MAX_COST_OBSD[index] = newCost;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings.find(botSettings => botSettings.key === 'novopangea').params\n    });\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  const toggleActivity = useCallback(({\n    botSettings,\n    activity\n  }) => {\n    botSettings.params[activity.key] = !botSettings.params[activity.key];\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings.find(botSettings => botSettings.key === 'novopangea').params\n    });\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  const npSetMaxLandRentPrice = useCallback(({\n    botSettings,\n    newPrice\n  }) => {\n    botSettings.params.MAX_LAND_RENT_PRICE_OBSD = newPrice;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings.find(botSettings => botSettings.key === 'novopangea').params\n    });\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  const npSetUpgradeWorkersToLevel = useCallback(({\n    botSettings,\n    newLevel\n  }) => {\n    botSettings.params.UPGRADE_WORKERS_TO_LVL = newLevel;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings.find(botSettings => botSettings.key === 'novopangea').params\n    });\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '12px 24px',\n      maxWidth: '600px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hi there, this page contains WAX bots. You assume all possible risks start using this bot, please check terms and condition of each WAX project if bots allowed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Open a browser developer console on the bot page `localhost:3000`. You can use `Option + \\u2318 + J` (on macOS), or `Shift + CTRL + J` (on Windows/Linux) in Chrome browser.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uD83C\\uDF84 Wishing you a Merry Christmas and a joyful holiday season! \\uD83C\\uDF85 May your days be filled with warmth, laughter, and the love of family and friends. \\uD83C\\uDF81 Let the \\u2744\\uFE0F snowflakes bring magic to your days and the spirit of the season fill your heart with happiness. \\u26C4 Have a wonderful time, and may the \\uD83D\\uDD6F\\uFE0F light of peace and goodwill shine upon you. Happy holidays! \\uD83E\\uDD8C\\uD83D\\uDD14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"If you'd like the bot please support me by sending crypto or assets to my wallet: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://atomichub.io/profile/wax-mainnet/ete2o.c.wam\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"ete2o.c.wam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 96\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), isBotStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: _stopBot,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: _startBot,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetSettings,\n      children: \"Reset Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"All changed settings applied immediately!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), allBotSettings.map(botSettings => {\n      const enableCheckboxId = `enable-checkbox-${botSettings.key}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-settings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: botSettings.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), botSettings.key === 'claimwax' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Visit WAX wallet \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://wallet.wax.io/staking-rewards\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"staking page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 37\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Visit novopangea game \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://novopangea.io/\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 42\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: enableCheckboxId,\n          type: \"checkbox\",\n          checked: botSettings.enabled,\n          onChange: () => {\n            toggleBot({\n              botSettings\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: enableCheckboxId,\n          children: \"Enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Bot Activities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), [{\n            key: 'ENABLE_SHIFT_SKILLED_WORKERS',\n            name: 'Start Skilled Workers shift in own or other buildings'\n          }, {\n            key: 'ENABLE_REST_SKILLED_WORKERS',\n            name: 'Rest Skilled Workers in own or other buildings'\n          }, {\n            key: 'ENABLE_SHIFT_UNSKILLED_WORKERS',\n            name: 'Start Unskilled Workers shift in own or other buildings'\n          }, {\n            key: 'ENABLE_REST_UNSKILLED_WORKERS',\n            name: 'Rest Unskilled Workers in own or other buildings'\n          }, {\n            key: 'ENABLE_WORKER_UPGRADES',\n            name: 'Upgrage workers'\n          }, {\n            key: 'ENABLE_RENEW_RENT_LANDS',\n            name: 'Prepare and renew own lands'\n          }, {\n            key: 'ENABLE_RENT_EXTERNAL_LANDS',\n            name: 'Rent external lands'\n          }].map(activity => {\n            const botActivityCheckboxId = `np-bot-activities-checkbox-id-${activity.key}`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: botActivityCheckboxId,\n                checked: botSettings.params[activity.key],\n                onChange: () => {\n                  toggleActivity({\n                    botSettings,\n                    activity\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: botActivityCheckboxId,\n                children: activity.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), ' ']\n            }, activity.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 24\n            }, this);\n          })]\n        }, void 0, true) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Job Min Profits (OBSD)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), botSettings.params.JOB_MIN_PROFITS_OBSD.map((minProfit, index) => {\n            const minProfitInputId = `min-profit-input-id-${index}`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: minProfitInputId,\n                children: [\"Level \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: minProfitInputId,\n                value: minProfit,\n                onChange: event => {\n                  npSetJobProfit({\n                    botSettings,\n                    index,\n                    newProfit: Number(event.target.value)\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 24\n            }, this);\n          })]\n        }, void 0, true) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Rest Max Cost (OBSD)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Food you spend for resting should be included in this price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), botSettings.params.REST_MAX_COST_OBSD.map((maxCost, index) => {\n            const maxRestCostInputId = `rest-max-cost-input-id-${index}`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: maxRestCostInputId,\n                children: [\"Level \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: maxRestCostInputId,\n                value: maxCost,\n                onChange: event => {\n                  npSetRestCost({\n                    botSettings,\n                    index,\n                    newCost: Number(event.target.value)\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 24\n            }, this);\n          })]\n        }, void 0, true) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Max Land Rent Price (OBSD/sec)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Only applied for lands owned by other players\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: botSettings.params.MAX_LAND_RENT_PRICE_OBSD,\n            onChange: event => {\n              npSetMaxLandRentPrice({\n                botSettings,\n                newPrice: Number(event.target.value)\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Upgrage Skilled Workers to Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"If not enough resources for upgrade, workers will start shifts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: botSettings.params.UPGRADE_WORKERS_TO_LVL,\n            onChange: event => {\n              npSetUpgradeWorkersToLevel({\n                botSettings,\n                newLevel: Number(event.target.value)\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null]\n      }, botSettings.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CAhGuA1/ZHberLCfKQg3Hw6r7Lg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useEffect","useState","wax","startBot","stopBot","setEconomyValues","ECONOMY_VALUES","jsxDEV","_jsxDEV","Fragment","_Fragment","getInitParams","key","name","enabled","params","App","_s","allBotSettings","setAllBotSettings","localStorage","getItem","JSON","stringify","setItem","economyValues","parse","find","botSettings","login","userAccount","console","log","err","message","isBotStarted","setIsBotStarted","_startBot","_stopBot","toggleBot","resetSettings","nextAllBotSettigns","npSetJobProfit","index","newProfit","JOB_MIN_PROFITS_OBSD","npSetRestCost","newCost","REST_MAX_COST_OBSD","toggleActivity","activity","npSetMaxLandRentPrice","newPrice","MAX_LAND_RENT_PRICE_OBSD","npSetUpgradeWorkersToLevel","newLevel","UPGRADE_WORKERS_TO_LVL","style","padding","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","onClick","map","enableCheckboxId","className","id","type","checked","onChange","htmlFor","botActivityCheckboxId","minProfit","minProfitInputId","value","event","Number","maxCost","maxRestCostInputId","_c","$RefreshReg$"],"sources":["/Users/germangurov/projects/wax_bot/src/App.js"],"sourcesContent":["import './App.css';\nimport { useCallback, useEffect, useState } from 'react';\nimport { wax } from './core/wax';\nimport { startBot, stopBot } from './bot/bot';\nimport {\n  setEconomyValues,\n  ECONOMY_VALUES,\n} from './novopangea/consts/ECONOMY_VALUES';\n\nconst getInitParams = () => ([\n  {\n    key: 'claimwax',\n    name: 'Claim Wax',\n    enabled: false,\n  },\n  {\n    key: 'novopangea',\n    name: 'Novopangea',\n    enabled: false,\n    params: ECONOMY_VALUES,\n  },\n]);\n\nfunction App() {\n  const [allBotSettings, setAllBotSettings] = useState([]);\n  useEffect(() => {\n    let allBotSettings = localStorage.getItem('allBotSettings');\n    if (allBotSettings == null) {\n      allBotSettings = JSON.stringify(getInitParams());\n      localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    }\n\n    setEconomyValues({\n      economyValues: JSON.parse(allBotSettings)\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings(JSON.parse(allBotSettings));\n  }, []);\n  const login = useCallback(async () => {\n    try {\n      const userAccount = await wax.login();\n      console.log(`AutoLogin enabled for account: ${userAccount}`);\n    } catch (err) {\n      console.log(err);\n      console.log(err.message);\n    }\n  }, []);\n\n  const [isBotStarted, setIsBotStarted] = useState(false);\n  const _startBot = useCallback(async () => {\n    startBot();\n    setIsBotStarted(true);\n  }, []);\n\n  const _stopBot = useCallback(async () => {\n    stopBot();\n    setIsBotStarted(false);\n  }, []);\n\n  const toggleBot = useCallback(({\n    botSettings,\n  }) => {\n    botSettings.enabled = !botSettings.enabled;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n\n  const resetSettings = useCallback(() => {\n    const nextAllBotSettigns = getInitParams();\n    localStorage.setItem('allBotSettings', JSON.stringify(nextAllBotSettigns));\n    setEconomyValues({\n      economyValues: nextAllBotSettigns\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings(nextAllBotSettigns);\n  }, [setAllBotSettings]);\n\n  const npSetJobProfit = useCallback(({\n    botSettings,\n    index,\n    newProfit,\n  }) => {\n    botSettings.params.JOB_MIN_PROFITS_OBSD[index] = newProfit;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  },[allBotSettings, setAllBotSettings]);\n\n  const npSetRestCost = useCallback(({\n    botSettings,\n    index,\n    newCost,\n  }) => {\n    botSettings.params.REST_MAX_COST_OBSD[index] = newCost;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  },[allBotSettings, setAllBotSettings]);\n  \n  const toggleActivity = useCallback(({\n    botSettings,\n    activity,\n  }) => {\n    botSettings.params[activity.key] = !botSettings.params[activity.key];\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n\n  const npSetMaxLandRentPrice = useCallback(({\n    botSettings,\n    newPrice,\n  }) => {\n    botSettings.params.MAX_LAND_RENT_PRICE_OBSD = newPrice;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n  \n  const npSetUpgradeWorkersToLevel = useCallback(({\n    botSettings,\n    newLevel,\n  }) => {\n    botSettings.params.UPGRADE_WORKERS_TO_LVL = newLevel;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n\n  return (\n    <div\n      style={{\n        padding: '12px 24px',\n        maxWidth: '600px',\n      }}\n    >\n      <div>Hi there, this page contains WAX bots. You assume all possible risks start using this bot, please check terms and condition of each WAX project if bots allowed.</div>\n      \n      <br />\n      <br/>\n      <div>\n        Open a browser developer console on the bot page `localhost:3000`. You can use `Option + ⌘ + J` (on macOS), or `Shift + CTRL + J` (on Windows/Linux) in Chrome browser.\n      </div>\n      <br/>\n      <br/>\n      <div>\n        <div>🎄 Wishing you a Merry Christmas and a joyful holiday season! 🎅 May your days be filled with warmth, laughter, and the love of family and friends. 🎁 Let the ❄️ snowflakes bring magic to your days and the spirit of the season fill your heart with happiness. ⛄ Have a wonderful time, and may the 🕯️ light of peace and goodwill shine upon you. Happy holidays! 🦌🔔</div>\n        <div>If you'd like the bot please support me by sending crypto or assets to my wallet: <a href=\"https://atomichub.io/profile/wax-mainnet/ete2o.c.wam\"  target='_blank' rel=\"noreferrer\">ete2o.c.wam</a></div>\n      </div>\n      \n      {isBotStarted ? (\n        <button onClick={_stopBot}>Stop</button>\n      ) : (\n        <button onClick={_startBot}>Run</button>\n      )}\n      <button onClick={login}>Login</button>\n      <br />\n      <br />\n      <button onClick={resetSettings}>Reset Settings</button>\n      <div><b>All changed settings applied immediately!!!</b></div>\n      <br />\n      <br />\n      {allBotSettings.map(botSettings => {\n        const enableCheckboxId = `enable-checkbox-${botSettings.key}`;\n        return <div key={botSettings.key} className='bot-settings'>\n          <h2>{botSettings.name}</h2>\n          {botSettings.key === 'claimwax'\n            ? <div>Visit WAX wallet <a href=\"https://wallet.wax.io/staking-rewards\" target='_blank' rel=\"noreferrer\">staking page</a>.</div>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <div>Visit novopangea game <a href=\"https://novopangea.io/\" target='_blank' rel=\"noreferrer\">website</a>.</div>\n            : null\n          }\n          <br/>\n          <input id={enableCheckboxId} type='checkbox' checked={botSettings.enabled} onChange={() => {\n            toggleBot({\n              botSettings,\n            });\n          }}/>\n          <label htmlFor={enableCheckboxId}>Enabled</label>\n          {botSettings.key === 'novopangea'\n            ? <>\n              <hr />\n              <h3>Settings</h3>\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Bot Activities</h4>\n              {[\n                {key: 'ENABLE_SHIFT_SKILLED_WORKERS', name: 'Start Skilled Workers shift in own or other buildings',},\n                {key: 'ENABLE_REST_SKILLED_WORKERS', name: 'Rest Skilled Workers in own or other buildings',},\n                {key: 'ENABLE_SHIFT_UNSKILLED_WORKERS', name: 'Start Unskilled Workers shift in own or other buildings',},\n                {key: 'ENABLE_REST_UNSKILLED_WORKERS', name: 'Rest Unskilled Workers in own or other buildings',},\n                {key: 'ENABLE_WORKER_UPGRADES', name: 'Upgrage workers',},\n                {key: 'ENABLE_RENEW_RENT_LANDS', name: 'Prepare and renew own lands',},\n                {key: 'ENABLE_RENT_EXTERNAL_LANDS', name: 'Rent external lands',},\n              ].map((activity) => {\n                const botActivityCheckboxId = `np-bot-activities-checkbox-id-${activity.key}`;\n                return <div key={activity.key}>\n                  <input type=\"checkbox\" id={botActivityCheckboxId} checked={botSettings.params[activity.key]} onChange={() => {\n                    toggleActivity({\n                      botSettings,\n                      activity,\n                    });\n                  }}/>\n                  <label htmlFor={botActivityCheckboxId}>{activity.name}</label>{' '}\n                </div>\n              })}\n            </>\n            : null\n          }\n\n          \n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Job Min Profits (OBSD)</h4>\n              {botSettings.params.JOB_MIN_PROFITS_OBSD.map((minProfit, index) => {\n                const minProfitInputId = `min-profit-input-id-${index}`;\n                return <div key={index}>\n                  <label htmlFor={minProfitInputId}>Level {index + 1}</label>{' '}\n                  <input type=\"number\" id={minProfitInputId} value={minProfit} onChange={(event) => {\n                    npSetJobProfit({\n                      botSettings,\n                      index,\n                      newProfit: Number(event.target.value),\n                    });\n                  }}/>\n                </div>\n              })}\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Rest Max Cost (OBSD)</h4>\n              <div>Food you spend for resting should be included in this price</div>\n              {botSettings.params.REST_MAX_COST_OBSD.map((maxCost, index) => {\n                const maxRestCostInputId = `rest-max-cost-input-id-${index}`;\n                return <div key={index}>\n                  <label htmlFor={maxRestCostInputId}>Level {index + 1}</label>{' '}\n                  <input type=\"number\" id={maxRestCostInputId} value={maxCost} onChange={(event) => {\n                    npSetRestCost({\n                      botSettings,\n                      index,\n                      newCost: Number(event.target.value),\n                    });\n                  }}/>\n                </div>\n              })}\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Max Land Rent Price (OBSD/sec)</h4>\n              <div>Only applied for lands owned by other players</div>\n              <input type=\"number\" value={botSettings.params.MAX_LAND_RENT_PRICE_OBSD} onChange={(event) => {\n                npSetMaxLandRentPrice({\n                  botSettings,\n                  newPrice: Number(event.target.value),\n                });\n              }}/>\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Upgrage Skilled Workers to Level</h4>\n              <div>If not enough resources for upgrade, workers will start shifts</div>\n              <input type=\"number\" value={botSettings.params.UPGRADE_WORKERS_TO_LVL} onChange={(event) => {\n                npSetUpgradeWorkersToLevel({\n                  botSettings,\n                  newLevel: Number(event.target.value),\n                });\n              }}/>\n            </>\n            : null\n          }\n\n\n\n{/* MIN_RENT_BUILDING_LEVELS */}\n        </div>;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}