{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signatureToString = exports.stringToSignature = exports.privateKeyToString = exports.privateKeyToLegacyString = exports.stringToPrivateKey = exports.convertLegacyPublicKeys = exports.convertLegacyPublicKey = exports.publicKeyToString = exports.publicKeyToLegacyString = exports.stringToPublicKey = exports.signatureDataSize = exports.privateKeyDataSize = exports.publicKeyDataSize = exports.KeyType = exports.base64ToBinary = exports.binaryToBase58 = exports.base58ToBinary = exports.signedBinaryToDecimal = exports.binaryToDecimal = exports.signedDecimalToBinary = exports.decimalToBinary = exports.negate = exports.isNegative = void 0;\n/**\n * @module Numeric\n */\nvar hash_js_1 = require(\"hash.js\");\n// copyright defined in eosjs/LICENSE.txt\nvar ripemd160 = require('./ripemd').RIPEMD160.hash;\nvar base58Chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nvar base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nvar create_base58_map = function create_base58_map() {\n  var base58M = Array(256).fill(-1);\n  for (var i = 0; i < base58Chars.length; ++i) {\n    base58M[base58Chars.charCodeAt(i)] = i;\n  }\n  return base58M;\n};\nvar base58Map = create_base58_map();\nvar create_base64_map = function create_base64_map() {\n  var base64M = Array(256).fill(-1);\n  for (var i = 0; i < base64Chars.length; ++i) {\n    base64M[base64Chars.charCodeAt(i)] = i;\n  }\n  base64M['='.charCodeAt(0)] = 0;\n  return base64M;\n};\nvar base64Map = create_base64_map();\n/** Is `bignum` a negative number? */\nvar isNegative = function isNegative(bignum) {\n  return (bignum[bignum.length - 1] & 0x80) !== 0;\n};\nexports.isNegative = isNegative;\n/** Negate `bignum` */\nvar negate = function negate(bignum) {\n  var carry = 1;\n  for (var i = 0; i < bignum.length; ++i) {\n    var x = (~bignum[i] & 0xff) + carry;\n    bignum[i] = x;\n    carry = x >> 8;\n  }\n};\nexports.negate = negate;\n/**\n * Convert an unsigned decimal number in `s` to a bignum\n *\n * @param size bignum size (bytes)\n */\nvar decimalToBinary = function decimalToBinary(size, s) {\n  var result = new Uint8Array(size);\n  for (var i = 0; i < s.length; ++i) {\n    var srcDigit = s.charCodeAt(i);\n    if (srcDigit < '0'.charCodeAt(0) || srcDigit > '9'.charCodeAt(0)) {\n      throw new Error('invalid number');\n    }\n    var carry = srcDigit - '0'.charCodeAt(0);\n    for (var j = 0; j < size; ++j) {\n      var x = result[j] * 10 + carry;\n      result[j] = x;\n      carry = x >> 8;\n    }\n    if (carry) {\n      throw new Error('number is out of range');\n    }\n  }\n  return result;\n};\nexports.decimalToBinary = decimalToBinary;\n/**\n * Convert a signed decimal number in `s` to a bignum\n *\n * @param size bignum size (bytes)\n */\nvar signedDecimalToBinary = function signedDecimalToBinary(size, s) {\n  var negative = s[0] === '-';\n  if (negative) {\n    s = s.substr(1);\n  }\n  var result = exports.decimalToBinary(size, s);\n  if (negative) {\n    exports.negate(result);\n    if (!exports.isNegative(result)) {\n      throw new Error('number is out of range');\n    }\n  } else if (exports.isNegative(result)) {\n    throw new Error('number is out of range');\n  }\n  return result;\n};\nexports.signedDecimalToBinary = signedDecimalToBinary;\n/**\n * Convert `bignum` to an unsigned decimal number\n *\n * @param minDigits 0-pad result to this many digits\n */\nvar binaryToDecimal = function binaryToDecimal(bignum, minDigits) {\n  if (minDigits === void 0) {\n    minDigits = 1;\n  }\n  var result = Array(minDigits).fill('0'.charCodeAt(0));\n  for (var i = bignum.length - 1; i >= 0; --i) {\n    var carry = bignum[i];\n    for (var j = 0; j < result.length; ++j) {\n      var x = (result[j] - '0'.charCodeAt(0) << 8) + carry;\n      result[j] = '0'.charCodeAt(0) + x % 10;\n      carry = x / 10 | 0;\n    }\n    while (carry) {\n      result.push('0'.charCodeAt(0) + carry % 10);\n      carry = carry / 10 | 0;\n    }\n  }\n  result.reverse();\n  return String.fromCharCode.apply(String, __spreadArray([], __read(result)));\n};\nexports.binaryToDecimal = binaryToDecimal;\n/**\n * Convert `bignum` to a signed decimal number\n *\n * @param minDigits 0-pad result to this many digits\n */\nvar signedBinaryToDecimal = function signedBinaryToDecimal(bignum, minDigits) {\n  if (minDigits === void 0) {\n    minDigits = 1;\n  }\n  if (exports.isNegative(bignum)) {\n    var x = bignum.slice();\n    exports.negate(x);\n    return '-' + exports.binaryToDecimal(x, minDigits);\n  }\n  return exports.binaryToDecimal(bignum, minDigits);\n};\nexports.signedBinaryToDecimal = signedBinaryToDecimal;\nvar base58ToBinaryVarSize = function base58ToBinaryVarSize(s) {\n  var e_1, _a;\n  var result = [];\n  for (var i = 0; i < s.length; ++i) {\n    var carry = base58Map[s.charCodeAt(i)];\n    if (carry < 0) {\n      throw new Error('invalid base-58 value');\n    }\n    for (var j = 0; j < result.length; ++j) {\n      var x = result[j] * 58 + carry;\n      result[j] = x & 0xff;\n      carry = x >> 8;\n    }\n    if (carry) {\n      result.push(carry);\n    }\n  }\n  try {\n    for (var s_1 = __values(s), s_1_1 = s_1.next(); !s_1_1.done; s_1_1 = s_1.next()) {\n      var ch = s_1_1.value;\n      if (ch === '1') {\n        result.push(0);\n      } else {\n        break;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (s_1_1 && !s_1_1.done && (_a = s_1.return)) _a.call(s_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  result.reverse();\n  return new Uint8Array(result);\n};\n/**\n * Convert an unsigned base-58 number in `s` to a bignum\n *\n * @param size bignum size (bytes)\n */\nvar base58ToBinary = function base58ToBinary(size, s) {\n  if (!size) {\n    return base58ToBinaryVarSize(s);\n  }\n  var result = new Uint8Array(size);\n  for (var i = 0; i < s.length; ++i) {\n    var carry = base58Map[s.charCodeAt(i)];\n    if (carry < 0) {\n      throw new Error('invalid base-58 value');\n    }\n    for (var j = 0; j < size; ++j) {\n      var x = result[j] * 58 + carry;\n      result[j] = x;\n      carry = x >> 8;\n    }\n    if (carry) {\n      throw new Error('base-58 value is out of range');\n    }\n  }\n  result.reverse();\n  return result;\n};\nexports.base58ToBinary = base58ToBinary;\n/**\n * Convert `bignum` to a base-58 number\n *\n * @param minDigits 0-pad result to this many digits\n */\nvar binaryToBase58 = function binaryToBase58(bignum, minDigits) {\n  var e_2, _a, e_3, _b;\n  if (minDigits === void 0) {\n    minDigits = 1;\n  }\n  var result = [];\n  try {\n    for (var bignum_1 = __values(bignum), bignum_1_1 = bignum_1.next(); !bignum_1_1.done; bignum_1_1 = bignum_1.next()) {\n      var byte = bignum_1_1.value;\n      var carry = byte;\n      for (var j = 0; j < result.length; ++j) {\n        var x = (base58Map[result[j]] << 8) + carry;\n        result[j] = base58Chars.charCodeAt(x % 58);\n        carry = x / 58 | 0;\n      }\n      while (carry) {\n        result.push(base58Chars.charCodeAt(carry % 58));\n        carry = carry / 58 | 0;\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (bignum_1_1 && !bignum_1_1.done && (_a = bignum_1.return)) _a.call(bignum_1);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n  try {\n    for (var bignum_2 = __values(bignum), bignum_2_1 = bignum_2.next(); !bignum_2_1.done; bignum_2_1 = bignum_2.next()) {\n      var byte = bignum_2_1.value;\n      if (byte) {\n        break;\n      } else {\n        result.push('1'.charCodeAt(0));\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (bignum_2_1 && !bignum_2_1.done && (_b = bignum_2.return)) _b.call(bignum_2);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n  result.reverse();\n  return String.fromCharCode.apply(String, __spreadArray([], __read(result)));\n};\nexports.binaryToBase58 = binaryToBase58;\n/** Convert an unsigned base-64 number in `s` to a bignum */\nvar base64ToBinary = function base64ToBinary(s) {\n  var len = s.length;\n  if ((len & 3) === 1 && s[len - 1] === '=') {\n    len -= 1;\n  } // fc appends an extra '='\n  if ((len & 3) !== 0) {\n    throw new Error('base-64 value is not padded correctly');\n  }\n  var groups = len >> 2;\n  var bytes = groups * 3;\n  if (len > 0 && s[len - 1] === '=') {\n    if (s[len - 2] === '=') {\n      bytes -= 2;\n    } else {\n      bytes -= 1;\n    }\n  }\n  var result = new Uint8Array(bytes);\n  for (var group = 0; group < groups; ++group) {\n    var digit0 = base64Map[s.charCodeAt(group * 4 + 0)];\n    var digit1 = base64Map[s.charCodeAt(group * 4 + 1)];\n    var digit2 = base64Map[s.charCodeAt(group * 4 + 2)];\n    var digit3 = base64Map[s.charCodeAt(group * 4 + 3)];\n    result[group * 3 + 0] = digit0 << 2 | digit1 >> 4;\n    if (group * 3 + 1 < bytes) {\n      result[group * 3 + 1] = (digit1 & 15) << 4 | digit2 >> 2;\n    }\n    if (group * 3 + 2 < bytes) {\n      result[group * 3 + 2] = (digit2 & 3) << 6 | digit3;\n    }\n  }\n  return result;\n};\nexports.base64ToBinary = base64ToBinary;\n/** Key types this library supports */\nvar KeyType;\n(function (KeyType) {\n  KeyType[KeyType[\"k1\"] = 0] = \"k1\";\n  KeyType[KeyType[\"r1\"] = 1] = \"r1\";\n  KeyType[KeyType[\"wa\"] = 2] = \"wa\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\n/** Public key data size, excluding type field */\nexports.publicKeyDataSize = 33;\n/** Private key data size, excluding type field */\nexports.privateKeyDataSize = 32;\n/** Signature data size, excluding type field */\nexports.signatureDataSize = 65;\nvar digestSuffixRipemd160 = function digestSuffixRipemd160(data, suffix) {\n  var d = new Uint8Array(data.length + suffix.length);\n  for (var i = 0; i < data.length; ++i) {\n    d[i] = data[i];\n  }\n  for (var i = 0; i < suffix.length; ++i) {\n    d[data.length + i] = suffix.charCodeAt(i);\n  }\n  return ripemd160(d);\n};\nvar stringToKey = function stringToKey(s, type, size, suffix) {\n  var whole = exports.base58ToBinary(size ? size + 4 : 0, s);\n  var result = {\n    type: type,\n    data: new Uint8Array(whole.buffer, 0, whole.length - 4)\n  };\n  var digest = new Uint8Array(digestSuffixRipemd160(result.data, suffix));\n  if (digest[0] !== whole[whole.length - 4] || digest[1] !== whole[whole.length - 3] || digest[2] !== whole[whole.length - 2] || digest[3] !== whole[whole.length - 1]) {\n    throw new Error('checksum doesn\\'t match');\n  }\n  return result;\n};\nvar keyToString = function keyToString(key, suffix, prefix) {\n  var digest = new Uint8Array(digestSuffixRipemd160(key.data, suffix));\n  var whole = new Uint8Array(key.data.length + 4);\n  for (var i = 0; i < key.data.length; ++i) {\n    whole[i] = key.data[i];\n  }\n  for (var i = 0; i < 4; ++i) {\n    whole[i + key.data.length] = digest[i];\n  }\n  return prefix + exports.binaryToBase58(whole);\n};\n/** Convert key in `s` to binary form */\nvar stringToPublicKey = function stringToPublicKey(s) {\n  if (typeof s !== 'string') {\n    throw new Error('expected string containing public key');\n  }\n  if (s.substr(0, 3) === 'EOS') {\n    var whole = exports.base58ToBinary(exports.publicKeyDataSize + 4, s.substr(3));\n    var key = {\n      type: KeyType.k1,\n      data: new Uint8Array(exports.publicKeyDataSize)\n    };\n    for (var i = 0; i < exports.publicKeyDataSize; ++i) {\n      key.data[i] = whole[i];\n    }\n    var digest = new Uint8Array(ripemd160(key.data));\n    if (digest[0] !== whole[exports.publicKeyDataSize] || digest[1] !== whole[34] || digest[2] !== whole[35] || digest[3] !== whole[36]) {\n      throw new Error('checksum doesn\\'t match');\n    }\n    return key;\n  } else if (s.substr(0, 7) === 'PUB_K1_') {\n    return stringToKey(s.substr(7), KeyType.k1, exports.publicKeyDataSize, 'K1');\n  } else if (s.substr(0, 7) === 'PUB_R1_') {\n    return stringToKey(s.substr(7), KeyType.r1, exports.publicKeyDataSize, 'R1');\n  } else if (s.substr(0, 7) === 'PUB_WA_') {\n    return stringToKey(s.substr(7), KeyType.wa, 0, 'WA');\n  } else {\n    throw new Error('unrecognized public key format');\n  }\n};\nexports.stringToPublicKey = stringToPublicKey;\n/** Convert public `key` to legacy string (base-58) form */\nvar publicKeyToLegacyString = function publicKeyToLegacyString(key) {\n  if (key.type === KeyType.k1 && key.data.length === exports.publicKeyDataSize) {\n    return keyToString(key, '', 'EOS');\n  } else if (key.type === KeyType.r1 || key.type === KeyType.wa) {\n    throw new Error('Key format not supported in legacy conversion');\n  } else {\n    throw new Error('unrecognized public key format');\n  }\n};\nexports.publicKeyToLegacyString = publicKeyToLegacyString;\n/** Convert `key` to string (base-58) form */\nvar publicKeyToString = function publicKeyToString(key) {\n  if (key.type === KeyType.k1 && key.data.length === exports.publicKeyDataSize) {\n    return keyToString(key, 'K1', 'PUB_K1_');\n  } else if (key.type === KeyType.r1 && key.data.length === exports.publicKeyDataSize) {\n    return keyToString(key, 'R1', 'PUB_R1_');\n  } else if (key.type === KeyType.wa) {\n    return keyToString(key, 'WA', 'PUB_WA_');\n  } else {\n    throw new Error('unrecognized public key format');\n  }\n};\nexports.publicKeyToString = publicKeyToString;\n/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).\n * Leaves other formats untouched\n */\nvar convertLegacyPublicKey = function convertLegacyPublicKey(s) {\n  if (s.substr(0, 3) === 'EOS') {\n    return exports.publicKeyToString(exports.stringToPublicKey(s));\n  }\n  return s;\n};\nexports.convertLegacyPublicKey = convertLegacyPublicKey;\n/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).\n * Leaves other formats untouched\n */\nvar convertLegacyPublicKeys = function convertLegacyPublicKeys(keys) {\n  return keys.map(exports.convertLegacyPublicKey);\n};\nexports.convertLegacyPublicKeys = convertLegacyPublicKeys;\n/** Convert key in `s` to binary form */\nvar stringToPrivateKey = function stringToPrivateKey(s) {\n  if (typeof s !== 'string') {\n    throw new Error('expected string containing private key');\n  }\n  if (s.substr(0, 7) === 'PVT_R1_') {\n    return stringToKey(s.substr(7), KeyType.r1, exports.privateKeyDataSize, 'R1');\n  } else if (s.substr(0, 7) === 'PVT_K1_') {\n    return stringToKey(s.substr(7), KeyType.k1, exports.privateKeyDataSize, 'K1');\n  } else {\n    // todo: Verify checksum: sha256(sha256(key.data)).\n    //       Not critical since a bad key will fail to produce a\n    //       valid signature anyway.\n    var whole = exports.base58ToBinary(exports.privateKeyDataSize + 5, s);\n    var key = {\n      type: KeyType.k1,\n      data: new Uint8Array(exports.privateKeyDataSize)\n    };\n    if (whole[0] !== 0x80) {\n      throw new Error('unrecognized private key type');\n    }\n    for (var i = 0; i < exports.privateKeyDataSize; ++i) {\n      key.data[i] = whole[i + 1];\n    }\n    return key;\n  }\n};\nexports.stringToPrivateKey = stringToPrivateKey;\n/** Convert private `key` to legacy string (base-58) form */\nvar privateKeyToLegacyString = function privateKeyToLegacyString(key) {\n  if (key.type === KeyType.k1 && key.data.length === exports.privateKeyDataSize) {\n    var whole_1 = [];\n    whole_1.push(128);\n    key.data.forEach(function (byte) {\n      return whole_1.push(byte);\n    });\n    var digest = new Uint8Array(hash_js_1.sha256().update(hash_js_1.sha256().update(whole_1).digest()).digest());\n    var result = new Uint8Array(exports.privateKeyDataSize + 5);\n    for (var i = 0; i < whole_1.length; i++) {\n      result[i] = whole_1[i];\n    }\n    for (var i = 0; i < 4; i++) {\n      result[i + whole_1.length] = digest[i];\n    }\n    return exports.binaryToBase58(result);\n  } else if (key.type === KeyType.r1 || key.type === KeyType.wa) {\n    throw new Error('Key format not supported in legacy conversion');\n  } else {\n    throw new Error('unrecognized public key format');\n  }\n};\nexports.privateKeyToLegacyString = privateKeyToLegacyString;\n/** Convert `key` to string (base-58) form */\nvar privateKeyToString = function privateKeyToString(key) {\n  if (key.type === KeyType.r1) {\n    return keyToString(key, 'R1', 'PVT_R1_');\n  } else if (key.type === KeyType.k1) {\n    return keyToString(key, 'K1', 'PVT_K1_');\n  } else {\n    throw new Error('unrecognized private key format');\n  }\n};\nexports.privateKeyToString = privateKeyToString;\n/** Convert key in `s` to binary form */\nvar stringToSignature = function stringToSignature(s) {\n  if (typeof s !== 'string') {\n    throw new Error('expected string containing signature');\n  }\n  if (s.substr(0, 7) === 'SIG_K1_') {\n    return stringToKey(s.substr(7), KeyType.k1, exports.signatureDataSize, 'K1');\n  } else if (s.substr(0, 7) === 'SIG_R1_') {\n    return stringToKey(s.substr(7), KeyType.r1, exports.signatureDataSize, 'R1');\n  } else if (s.substr(0, 7) === 'SIG_WA_') {\n    return stringToKey(s.substr(7), KeyType.wa, 0, 'WA');\n  } else {\n    throw new Error('unrecognized signature format');\n  }\n};\nexports.stringToSignature = stringToSignature;\n/** Convert `signature` to string (base-58) form */\nvar signatureToString = function signatureToString(signature) {\n  if (signature.type === KeyType.k1) {\n    return keyToString(signature, 'K1', 'SIG_K1_');\n  } else if (signature.type === KeyType.r1) {\n    return keyToString(signature, 'R1', 'SIG_R1_');\n  } else if (signature.type === KeyType.wa) {\n    return keyToString(signature, 'WA', 'SIG_WA_');\n  } else {\n    throw new Error('unrecognized signature format');\n  }\n};\nexports.signatureToString = signatureToString;","map":{"version":3,"names":["hash_js_1","require","ripemd160","RIPEMD160","hash","base58Chars","base64Chars","create_base58_map","base58M","Array","fill","i","length","charCodeAt","base58Map","create_base64_map","base64M","base64Map","isNegative","bignum","exports","negate","carry","x","decimalToBinary","size","s","result","Uint8Array","srcDigit","Error","j","signedDecimalToBinary","negative","substr","binaryToDecimal","minDigits","push","reverse","String","fromCharCode","apply","__spreadArray","__read","signedBinaryToDecimal","slice","base58ToBinaryVarSize","s_1","__values","s_1_1","next","done","ch","value","base58ToBinary","binaryToBase58","bignum_1","bignum_1_1","byte","bignum_2","bignum_2_1","base64ToBinary","len","groups","bytes","group","digit0","digit1","digit2","digit3","KeyType","publicKeyDataSize","privateKeyDataSize","signatureDataSize","digestSuffixRipemd160","data","suffix","d","stringToKey","type","whole","buffer","digest","keyToString","key","prefix","stringToPublicKey","k1","r1","wa","publicKeyToLegacyString","publicKeyToString","convertLegacyPublicKey","convertLegacyPublicKeys","keys","map","stringToPrivateKey","privateKeyToLegacyString","whole_1","forEach","sha256","update","privateKeyToString","stringToSignature","signatureToString","signature"],"sources":["../src/eosjs-numeric.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}