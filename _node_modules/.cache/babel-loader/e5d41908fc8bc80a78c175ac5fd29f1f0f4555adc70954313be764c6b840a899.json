{"ast":null,"code":"const fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst convertAllCosts = require('../utils/convertAllCosts');\nconst fetchExchange = require('./fetchExchange');\nconst fetchNovoPrice = require('./fetchNovoPrice');\nconst fetchWorkerConfigs = async ({\n  cache = {}\n}) => {\n  const exchange = cache.exchange || (await fetchExchange());\n  const novoPrice = cache.novoPrice || (await fetchNovoPrice());\n  const workerConfigs = await fetchAllWaxData2({\n    params: {\n      code: CONTRACTS.GAME,\n      scope: CONTRACTS.GAME,\n      table: \"workercfg\"\n    },\n    customProcessor: ({\n      row\n    }) => {\n      return {\n        id: row.id,\n        shiftTime: row.shift_time,\n        restTime: row.rest_time,\n        level: row.level,\n        yieldMultiplier: Number(row.yield_multiplier),\n        wageMultiplier: Number(row.wage_multiplier),\n        shiftCost: convertAllCosts({\n          costs: row.shift_cost,\n          exchange,\n          novoPrice\n        }),\n        foodCost: convertAllCosts({\n          costs: [row.food_cost],\n          exchange,\n          novoPrice\n        }),\n        totalShiftCost: convertAllCosts({\n          costs: [...row.shift_cost, row.food_cost],\n          exchange,\n          novoPrice\n        })\n      };\n    }\n  });\n  return workerConfigs;\n};\nmodule.exports = fetchWorkerConfigs;","map":{"version":3,"names":["fetchAllWaxData2","require","CONTRACTS","convertAllCosts","fetchExchange","fetchNovoPrice","fetchWorkerConfigs","cache","exchange","novoPrice","workerConfigs","params","code","GAME","scope","table","customProcessor","row","id","shiftTime","shift_time","restTime","rest_time","level","yieldMultiplier","Number","yield_multiplier","wageMultiplier","wage_multiplier","shiftCost","costs","shift_cost","foodCost","food_cost","totalShiftCost","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novopangea/api/fetchWorkerConfigs.js"],"sourcesContent":["const fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst convertAllCosts = require('../utils/convertAllCosts');\nconst fetchExchange = require('./fetchExchange');\nconst fetchNovoPrice = require('./fetchNovoPrice');\n\nconst fetchWorkerConfigs = async ({\n    cache = {},\n}) => {\n    const exchange = cache.exchange || await fetchExchange();\n    const novoPrice = cache.novoPrice || await fetchNovoPrice();\n    const workerConfigs = await fetchAllWaxData2({\n        params: {\n            code: CONTRACTS.GAME,\n            scope: CONTRACTS.GAME,\n            table: \"workercfg\",\n        },\n        customProcessor: ({row}) => {\n            return {\n                id: row.id,\n                shiftTime: row.shift_time,\n                restTime: row.rest_time,\n                level: row.level,\n                yieldMultiplier: Number(row.yield_multiplier),\n                wageMultiplier: Number(row.wage_multiplier),\n                shiftCost: convertAllCosts({\n                    costs: row.shift_cost,\n                    exchange,\n                    novoPrice,\n                }),\n                foodCost: convertAllCosts({\n                    costs: [row.food_cost],\n                    exchange,\n                    novoPrice,\n                }),\n                totalShiftCost: convertAllCosts({\n                    costs: [\n                        ...row.shift_cost,\n                        row.food_cost,\n                    ],\n                    exchange,\n                    novoPrice,\n                }),\n            };\n        },\n    });\n\n    return workerConfigs;\n};\n\nmodule.exports = fetchWorkerConfigs;"],"mappings":"AAAA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,6BAA6B,CAAC;AAC/D,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAME,eAAe,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAC3D,MAAMG,aAAa,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAChD,MAAMI,cAAc,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;AAElD,MAAMK,kBAAkB,GAAG,MAAAA,CAAO;EAC9BC,KAAK,GAAG,CAAC;AACb,CAAC,KAAK;EACF,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAQ,KAAI,MAAMJ,aAAa,CAAC,CAAC;EACxD,MAAMK,SAAS,GAAGF,KAAK,CAACE,SAAS,KAAI,MAAMJ,cAAc,CAAC,CAAC;EAC3D,MAAMK,aAAa,GAAG,MAAMV,gBAAgB,CAAC;IACzCW,MAAM,EAAE;MACJC,IAAI,EAAEV,SAAS,CAACW,IAAI;MACpBC,KAAK,EAAEZ,SAAS,CAACW,IAAI;MACrBE,KAAK,EAAE;IACX,CAAC;IACDC,eAAe,EAAEA,CAAC;MAACC;IAAG,CAAC,KAAK;MACxB,OAAO;QACHC,EAAE,EAAED,GAAG,CAACC,EAAE;QACVC,SAAS,EAAEF,GAAG,CAACG,UAAU;QACzBC,QAAQ,EAAEJ,GAAG,CAACK,SAAS;QACvBC,KAAK,EAAEN,GAAG,CAACM,KAAK;QAChBC,eAAe,EAAEC,MAAM,CAACR,GAAG,CAACS,gBAAgB,CAAC;QAC7CC,cAAc,EAAEF,MAAM,CAACR,GAAG,CAACW,eAAe,CAAC;QAC3CC,SAAS,EAAE1B,eAAe,CAAC;UACvB2B,KAAK,EAAEb,GAAG,CAACc,UAAU;UACrBvB,QAAQ;UACRC;QACJ,CAAC,CAAC;QACFuB,QAAQ,EAAE7B,eAAe,CAAC;UACtB2B,KAAK,EAAE,CAACb,GAAG,CAACgB,SAAS,CAAC;UACtBzB,QAAQ;UACRC;QACJ,CAAC,CAAC;QACFyB,cAAc,EAAE/B,eAAe,CAAC;UAC5B2B,KAAK,EAAE,CACH,GAAGb,GAAG,CAACc,UAAU,EACjBd,GAAG,CAACgB,SAAS,CAChB;UACDzB,QAAQ;UACRC;QACJ,CAAC;MACL,CAAC;IACL;EACJ,CAAC,CAAC;EAEF,OAAOC,aAAa;AACxB,CAAC;AAEDyB,MAAM,CAACC,OAAO,GAAG9B,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}