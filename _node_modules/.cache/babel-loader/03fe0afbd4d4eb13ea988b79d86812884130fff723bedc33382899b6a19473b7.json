{"ast":null,"code":"const _ = require('lodash');\nconst {\n  getCache,\n  writeCache\n} = require('./cache');\nconst {\n  WAX_BLOCKS_PROVIDER\n} = require('../configs/ENDPOINTS');\nconst CACHE_WAX_ACCOUNT_KEY = 'wax_account';\nconst CACHE_WAX_ACCOUNT_DURATION = 10 * 1000;\nconst fetchWaxAccount = async settings => {\n  if (getCache(CACHE_WAX_ACCOUNT_KEY) != null) {\n    return getCache(CACHE_WAX_ACCOUNT_KEY);\n  }\n  const res = await fetch(`${WAX_BLOCKS_PROVIDER}/v1/chain/get_account`, {\n    headers: {\n      accept: '*/*'\n    },\n    body: JSON.stringify({\n      account_name: settings.accountName\n    }),\n    method: 'POST'\n  });\n  const data = await res.json();\n  const account = {\n    cpu: data.cpu_limit,\n    net: data.net_limit,\n    cpuLoad: data.cpu_limit.used / data.cpu_limit.max\n  };\n  writeCache(account, CACHE_WAX_ACCOUNT_KEY, CACHE_WAX_ACCOUNT_DURATION);\n  return account;\n};\nmodule.exports = fetchWaxAccount;","map":{"version":3,"names":["_","require","getCache","writeCache","WAX_BLOCKS_PROVIDER","CACHE_WAX_ACCOUNT_KEY","CACHE_WAX_ACCOUNT_DURATION","fetchWaxAccount","settings","res","fetch","headers","accept","body","JSON","stringify","account_name","accountName","method","data","json","account","cpu","cpu_limit","net","net_limit","cpuLoad","used","max","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/core/fetchWaxAccount.js"],"sourcesContent":["const _ = require('lodash');\nconst {getCache, writeCache} = require('./cache');\nconst {WAX_BLOCKS_PROVIDER} = require('../configs/ENDPOINTS');\n\nconst CACHE_WAX_ACCOUNT_KEY = 'wax_account';\nconst CACHE_WAX_ACCOUNT_DURATION = 10 * 1000;\n\nconst fetchWaxAccount = async (settings) => {\n  if (getCache(CACHE_WAX_ACCOUNT_KEY) != null) {\n    return getCache(CACHE_WAX_ACCOUNT_KEY);\n  }\n  const res = await fetch(`${WAX_BLOCKS_PROVIDER}/v1/chain/get_account`, {\n    headers: {\n      accept: '*/*',\n    },\n    body: JSON.stringify({\n      account_name: settings.accountName,\n    }),\n    method: 'POST',\n  });\n\n  const data = await res.json();\n  const account = {\n    cpu: data.cpu_limit,\n    net: data.net_limit,\n    cpuLoad: data.cpu_limit.used / data.cpu_limit.max,\n  };\n\n  writeCache(account, CACHE_WAX_ACCOUNT_KEY, CACHE_WAX_ACCOUNT_DURATION);\n  return account;\n};\n\nmodule.exports = fetchWaxAccount;\n"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAM;EAACC,QAAQ;EAAEC;AAAU,CAAC,GAAGF,OAAO,CAAC,SAAS,CAAC;AACjD,MAAM;EAACG;AAAmB,CAAC,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAE7D,MAAMI,qBAAqB,GAAG,aAAa;AAC3C,MAAMC,0BAA0B,GAAG,EAAE,GAAG,IAAI;AAE5C,MAAMC,eAAe,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAIN,QAAQ,CAACG,qBAAqB,CAAC,IAAI,IAAI,EAAE;IAC3C,OAAOH,QAAQ,CAACG,qBAAqB,CAAC;EACxC;EACA,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,mBAAoB,uBAAsB,EAAE;IACrEO,OAAO,EAAE;MACPC,MAAM,EAAE;IACV,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,YAAY,EAAER,QAAQ,CAACS;IACzB,CAAC,CAAC;IACFC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;EAC7B,MAAMC,OAAO,GAAG;IACdC,GAAG,EAAEH,IAAI,CAACI,SAAS;IACnBC,GAAG,EAAEL,IAAI,CAACM,SAAS;IACnBC,OAAO,EAAEP,IAAI,CAACI,SAAS,CAACI,IAAI,GAAGR,IAAI,CAACI,SAAS,CAACK;EAChD,CAAC;EAEDzB,UAAU,CAACkB,OAAO,EAAEhB,qBAAqB,EAAEC,0BAA0B,CAAC;EACtE,OAAOe,OAAO;AAChB,CAAC;AAEDQ,MAAM,CAACC,OAAO,GAAGvB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}