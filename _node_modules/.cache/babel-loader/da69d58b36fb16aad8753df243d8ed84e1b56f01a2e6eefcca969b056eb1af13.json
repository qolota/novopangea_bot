{"ast":null,"code":"const _ = require('lodash');\nconst ECONOMY_VALUES = {\n  // set this value if you'd like to ugrage workers to a particular level\n  UPGRADE_WORKERS_TO_LVL: 4,\n  // maximum external land price bot will agree to\n  MAX_LAND_RENT_PRICE_OBSD: 0.00000331,\n  // minimum building level to be placed to a land\n  MIN_RENT_BUILDING_LEVELS: {\n    rest: 3,\n    materials: 4,\n    food: 4,\n    energy: 4\n  },\n  // minimum wage your workers agree to work\n  JOB_MIN_PROFITS_OBSD: [\n  // level 1\n  2,\n  // level 2\n  4.39400,\n  // level 3\n  6.59100,\n  // level 4\n  7.69000,\n  // level 5\n  8.72000],\n  // maximum cost your workers agree to rest\n  REST_MAX_COST_OBSD: [\n  // level 1\n  1.1,\n  // level 2\n  1.510,\n  // level 3\n  1.873,\n  // level 4\n  2.055,\n  // level 5\n  2.237],\n  // control values\n  ENABLE_WORKER_UPGRADES: true,\n  ENABLE_RENT_EXTERNAL_LANDS: true,\n  ENABLE_RENEW_RENT_LANDS: true,\n  ENABLE_REST_SKILLED_WORKERS: true,\n  ENABLE_REST_UNSKILLED_WORKERS: true,\n  ENABLE_SHIFT_SKILLED_WORKERS: true,\n  ENABLE_SHIFT_UNSKILLED_WORKERS: true,\n  BUSY_SKILLED_WORKERS_AMOUNT: {\n    Space: 40,\n    Time: 40,\n    Water: 40,\n    Light: 40,\n    Earth: 40,\n    Shadow: 40\n  }\n};\nconst currentEconomyValues = _.cloneDeep(ECONOMY_VALUES);\nconst setEconomyValues = ({\n  economyValues\n}) => {\n  currentEconomyValues = _.cloneDeep(economyValues);\n};\nconst getEconomyValues = () => _.cloneDeep(currentEconomyValues);\nmodule.exports = {\n  setEconomyValues,\n  getEconomyValues,\n  ECONOMY_VALUES\n};","map":{"version":3,"names":["_","require","ECONOMY_VALUES","UPGRADE_WORKERS_TO_LVL","MAX_LAND_RENT_PRICE_OBSD","MIN_RENT_BUILDING_LEVELS","rest","materials","food","energy","JOB_MIN_PROFITS_OBSD","REST_MAX_COST_OBSD","ENABLE_WORKER_UPGRADES","ENABLE_RENT_EXTERNAL_LANDS","ENABLE_RENEW_RENT_LANDS","ENABLE_REST_SKILLED_WORKERS","ENABLE_REST_UNSKILLED_WORKERS","ENABLE_SHIFT_SKILLED_WORKERS","ENABLE_SHIFT_UNSKILLED_WORKERS","BUSY_SKILLED_WORKERS_AMOUNT","Space","Time","Water","Light","Earth","Shadow","currentEconomyValues","cloneDeep","setEconomyValues","economyValues","getEconomyValues","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novopangea/consts/ECONOMY_VALUES.js"],"sourcesContent":["const _ = require('lodash');\nconst ECONOMY_VALUES = {\n    // set this value if you'd like to ugrage workers to a particular level\n    UPGRADE_WORKERS_TO_LVL: 4,\n    // maximum external land price bot will agree to\n    MAX_LAND_RENT_PRICE_OBSD: 0.00000331,\n    // minimum building level to be placed to a land\n    MIN_RENT_BUILDING_LEVELS: {\n        rest: 3,\n        materials: 4,\n        food: 4,\n        energy: 4,\n    },\n    // minimum wage your workers agree to work\n    JOB_MIN_PROFITS_OBSD: [\n        // level 1\n        2,\n        // level 2\n        4.39400,\n        // level 3\n        6.59100,\n        // level 4\n        7.69000,\n        // level 5\n        8.72000,\n    ],\n    // maximum cost your workers agree to rest\n    REST_MAX_COST_OBSD: [\n        // level 1\n        1.1,\n        // level 2\n        1.510,\n        // level 3\n        1.873,\n        // level 4\n        2.055,\n        // level 5\n        2.237,\n    ],\n    // control values\n    ENABLE_WORKER_UPGRADES: true,\n    ENABLE_RENT_EXTERNAL_LANDS: true,\n    ENABLE_RENEW_RENT_LANDS: true,\n    ENABLE_REST_SKILLED_WORKERS: true,\n    ENABLE_REST_UNSKILLED_WORKERS: true,\n    ENABLE_SHIFT_SKILLED_WORKERS: true,\n    ENABLE_SHIFT_UNSKILLED_WORKERS: true,\n    BUSY_SKILLED_WORKERS_AMOUNT: {\n        Space: 40,\n        Time: 40,\n        Water: 40,\n        Light: 40,\n        Earth: 40,\n        Shadow: 40,\n    },\n};\n\nconst currentEconomyValues = _.cloneDeep(ECONOMY_VALUES);\n\nconst setEconomyValues = ({\n    economyValues,\n}) => {\n    currentEconomyValues = _.cloneDeep(economyValues);\n};\n\nconst getEconomyValues = () => _.cloneDeep(currentEconomyValues);\n\nmodule.exports = {\n    setEconomyValues,\n    getEconomyValues,\n    ECONOMY_VALUES,\n};\n"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,cAAc,GAAG;EACnB;EACAC,sBAAsB,EAAE,CAAC;EACzB;EACAC,wBAAwB,EAAE,UAAU;EACpC;EACAC,wBAAwB,EAAE;IACtBC,IAAI,EAAE,CAAC;IACPC,SAAS,EAAE,CAAC;IACZC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE;EACZ,CAAC;EACD;EACAC,oBAAoB,EAAE;EAClB;EACA,CAAC;EACD;EACA,OAAO;EACP;EACA,OAAO;EACP;EACA,OAAO;EACP;EACA,OAAO,CACV;EACD;EACAC,kBAAkB,EAAE;EAChB;EACA,GAAG;EACH;EACA,KAAK;EACL;EACA,KAAK;EACL;EACA,KAAK;EACL;EACA,KAAK,CACR;EACD;EACAC,sBAAsB,EAAE,IAAI;EAC5BC,0BAA0B,EAAE,IAAI;EAChCC,uBAAuB,EAAE,IAAI;EAC7BC,2BAA2B,EAAE,IAAI;EACjCC,6BAA6B,EAAE,IAAI;EACnCC,4BAA4B,EAAE,IAAI;EAClCC,8BAA8B,EAAE,IAAI;EACpCC,2BAA2B,EAAE;IACzBC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACZ;AACJ,CAAC;AAED,MAAMC,oBAAoB,GAAG1B,CAAC,CAAC2B,SAAS,CAACzB,cAAc,CAAC;AAExD,MAAM0B,gBAAgB,GAAGA,CAAC;EACtBC;AACJ,CAAC,KAAK;EACFH,oBAAoB,GAAG1B,CAAC,CAAC2B,SAAS,CAACE,aAAa,CAAC;AACrD,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM9B,CAAC,CAAC2B,SAAS,CAACD,oBAAoB,CAAC;AAEhEK,MAAM,CAACC,OAAO,GAAG;EACbJ,gBAAgB;EAChBE,gBAAgB;EAChB5B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}