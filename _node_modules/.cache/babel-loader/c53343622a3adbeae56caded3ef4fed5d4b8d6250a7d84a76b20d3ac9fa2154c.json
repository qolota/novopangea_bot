{"ast":null,"code":"import _toConsumableArray from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import{useCallback,useEffect,useState}from'react';import{wax}from'./core/wax';import{startBot,stopBot}from'./bot/bot';import{setEconomyValues,ECONOMY_VALUES}from'./novopangea/consts/ECONOMY_VALUES';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var getInitParams=function getInitParams(){return[{key:'claimwax',name:'Claim Wax',enabled:false},{key:'novopangea',name:'Novopangea',enabled:false,params:ECONOMY_VALUES}];};function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),allBotSettings=_useState2[0],setAllBotSettings=_useState2[1];useEffect(function(){var allBotSettings=localStorage.getItem('allBotSettings');if(allBotSettings==null){allBotSettings=JSON.stringify(getInitParams());localStorage.setItem('allBotSettings',JSON.stringify(allBotSettings));}setEconomyValues({economyValues:JSON.parse(allBotSettings).find(function(botSettings){return botSettings.key==='novopangea';}).params});setAllBotSettings(JSON.parse(allBotSettings));},[]);var login=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var userAccount;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return wax.login();case 3:userAccount=_context.sent;console.log(\"AutoLogin enabled for account: \".concat(userAccount));_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);console.log(_context.t0.message);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,7]]);})),[]);var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isBotStarted=_useState4[0],setIsBotStarted=_useState4[1];var _startBot=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:startBot();setIsBotStarted(true);case 2:case\"end\":return _context2.stop();}},_callee2);})),[]);var _stopBot=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:stopBot();setIsBotStarted(false);case 2:case\"end\":return _context3.stop();}},_callee3);})),[]);var toggleBot=useCallback(function(_ref4){var botSettings=_ref4.botSettings;botSettings.enabled=!botSettings.enabled;localStorage.setItem('allBotSettings',JSON.stringify(allBotSettings));setEconomyValues({economyValues:allBotSettings.find(function(botSettings){return botSettings.key==='novopangea';}).params});setAllBotSettings(_toConsumableArray(allBotSettings));},[allBotSettings,setAllBotSettings]);var resetSettings=useCallback(function(){var nextAllBotSettigns=getInitParams();localStorage.setItem('allBotSettings',JSON.stringify(nextAllBotSettigns));setEconomyValues({economyValues:nextAllBotSettigns.find(function(botSettings){return botSettings.key==='novopangea';}).params});setAllBotSettings(nextAllBotSettigns);},[setAllBotSettings]);var npSetJobProfit=useCallback(function(_ref5){var botSettings=_ref5.botSettings,index=_ref5.index,newProfit=_ref5.newProfit;botSettings.params.JOB_MIN_PROFITS_OBSD[index]=newProfit;localStorage.setItem('allBotSettings',JSON.stringify(allBotSettings));setEconomyValues({economyValues:allBotSettings.find(function(botSettings){return botSettings.key==='novopangea';}).params});setAllBotSettings(_toConsumableArray(allBotSettings));},[allBotSettings,setAllBotSettings]);var npSetRestCost=useCallback(function(_ref6){var botSettings=_ref6.botSettings,index=_ref6.index,newCost=_ref6.newCost;botSettings.params.REST_MAX_COST_OBSD[index]=newCost;localStorage.setItem('allBotSettings',JSON.stringify(allBotSettings));setEconomyValues({economyValues:allBotSettings.find(function(botSettings){return botSettings.key==='novopangea';}).params});setAllBotSettings(_toConsumableArray(allBotSettings));},[allBotSettings,setAllBotSettings]);var toggleActivity=useCallback(function(_ref7){var botSettings=_ref7.botSettings,activity=_ref7.activity;botSettings.params[activity.key]=!botSettings.params[activity.key];localStorage.setItem('allBotSettings',JSON.stringify(allBotSettings));setEconomyValues({economyValues:allBotSettings.find(function(botSettings){return botSettings.key==='novopangea';}).params});setAllBotSettings(_toConsumableArray(allBotSettings));},[allBotSettings,setAllBotSettings]);var npSetMaxLandRentPrice=useCallback(function(_ref8){var botSettings=_ref8.botSettings,newPrice=_ref8.newPrice;botSettings.params.MAX_LAND_RENT_PRICE_OBSD=newPrice;localStorage.setItem('allBotSettings',JSON.stringify(allBotSettings));setEconomyValues({economyValues:allBotSettings.find(function(botSettings){return botSettings.key==='novopangea';}).params});setAllBotSettings(_toConsumableArray(allBotSettings));},[allBotSettings,setAllBotSettings]);var npSetUpgradeWorkersToLevel=useCallback(function(_ref9){var botSettings=_ref9.botSettings,newLevel=_ref9.newLevel;botSettings.params.UPGRADE_WORKERS_TO_LVL=newLevel;localStorage.setItem('allBotSettings',JSON.stringify(allBotSettings));setEconomyValues({economyValues:allBotSettings.find(function(botSettings){return botSettings.key==='novopangea';}).params});setAllBotSettings(_toConsumableArray(allBotSettings));},[allBotSettings,setAllBotSettings]);return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'12px 24px',maxWidth:'600px'},children:[/*#__PURE__*/_jsx(\"div\",{children:\"Hi there, this page contains WAX bots. You assume all possible risks start using this bot, please check terms and condition of each WAX project if bots allowed.\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"All changed settings applied immediately!!!\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:\"Open a browser developer console on the bot page `localhost:3000`. You can use `Option + \\u2318 + J` (on macOS), or `Shift + CTRL + J` (on Windows/Linux) in Chrome browser.\"}),isBotStarted?/*#__PURE__*/_jsx(\"button\",{onClick:_stopBot,children:\"Stop\"}):/*#__PURE__*/_jsx(\"button\",{onClick:_startBot,children:\"Run\"}),/*#__PURE__*/_jsx(\"button\",{onClick:login,children:\"Login\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:resetSettings,children:\"Reset Settings\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),allBotSettings.map(function(botSettings){var enableCheckboxId=\"enable-checkbox-\".concat(botSettings.key);return/*#__PURE__*/_jsxs(\"div\",{className:\"bot-settings\",children:[/*#__PURE__*/_jsx(\"h2\",{children:botSettings.name}),botSettings.key==='claimwax'?/*#__PURE__*/_jsxs(\"div\",{children:[\"Visit WAX wallet \",/*#__PURE__*/_jsx(\"a\",{href:\"https://wallet.wax.io/staking-rewards\",target:\"_blank\",rel:\"noreferrer\",children:\"staking page\"}),\".\"]}):null,botSettings.key==='novopangea'?/*#__PURE__*/_jsxs(\"div\",{children:[\"Visit novopangea game \",/*#__PURE__*/_jsx(\"a\",{href:\"https://novopangea.io/\",target:\"_blank\",rel:\"noreferrer\",children:\"website\"}),\".\"]}):null,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{id:enableCheckboxId,type:\"checkbox\",checked:botSettings.enabled,onChange:function onChange(){toggleBot({botSettings:botSettings});}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:enableCheckboxId,children:\"Enabled\"}),botSettings.key==='novopangea'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h3\",{children:\"Settings\"})]}):null,botSettings.key==='novopangea'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Bot Activities\"}),[{key:'ENABLE_SHIFT_SKILLED_WORKERS',name:'Start Skilled Workers shift in own or other buildings'},{key:'ENABLE_REST_SKILLED_WORKERS',name:'Rest Skilled Workers in own or other buildings'},{key:'ENABLE_SHIFT_UNSKILLED_WORKERS',name:'Start Unskilled Workers shift in own or other buildings'},{key:'ENABLE_REST_UNSKILLED_WORKERS',name:'Rest Unskilled Workers in own or other buildings'},{key:'ENABLE_WORKER_UPGRADES',name:'Upgrage workers'},{key:'ENABLE_RENEW_RENT_LANDS',name:'Prepare and renew own lands'},{key:'ENABLE_RENT_EXTERNAL_LANDS',name:'Rent external lands'}].map(function(activity){var botActivityCheckboxId=\"np-bot-activities-checkbox-id-\".concat(activity.key);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:botActivityCheckboxId,checked:botSettings.params[activity.key],onChange:function onChange(){toggleActivity({botSettings:botSettings,activity:activity});}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:botActivityCheckboxId,children:activity.name}),' ']},activity.key);})]}):null,botSettings.key==='novopangea'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Job Min Profits (OBSD)\"}),botSettings.params.JOB_MIN_PROFITS_OBSD.map(function(minProfit,index){var minProfitInputId=\"min-profit-input-id-\".concat(index);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:minProfitInputId,children:[\"Level \",index+1]}),' ',/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:minProfitInputId,value:minProfit,onChange:function onChange(event){npSetJobProfit({botSettings:botSettings,index:index,newProfit:Number(event.target.value)});}})]},index);})]}):null,botSettings.key==='novopangea'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Rest Max Cost (OBSD)\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Food you spend for resting should be included in this price\"}),botSettings.params.REST_MAX_COST_OBSD.map(function(maxCost,index){var maxRestCostInputId=\"rest-max-cost-input-id-\".concat(index);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:maxRestCostInputId,children:[\"Level \",index+1]}),' ',/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:maxRestCostInputId,value:maxCost,onChange:function onChange(event){npSetRestCost({botSettings:botSettings,index:index,newCost:Number(event.target.value)});}})]},index);})]}):null,botSettings.key==='novopangea'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Max Land Rent Price (OBSD/sec)\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Only applied for lands owned by other players\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:botSettings.params.MAX_LAND_RENT_PRICE_OBSD,onChange:function onChange(event){npSetMaxLandRentPrice({botSettings:botSettings,newPrice:Number(event.target.value)});}})]}):null,botSettings.key==='novopangea'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Upgrage Skilled Workers to Level\"}),/*#__PURE__*/_jsx(\"div\",{children:\"If not enough resources for upgrade, workers will start shifts\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:botSettings.params.UPGRADE_WORKERS_TO_LVL,onChange:function onChange(event){npSetUpgradeWorkersToLevel({botSettings:botSettings,newLevel:Number(event.target.value)});}})]}):null]},botSettings.key);})]});}export default App;","map":{"version":3,"names":["useCallback","useEffect","useState","wax","startBot","stopBot","setEconomyValues","ECONOMY_VALUES","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","getInitParams","key","name","enabled","params","App","_useState","_useState2","_slicedToArray","allBotSettings","setAllBotSettings","localStorage","getItem","JSON","stringify","setItem","economyValues","parse","find","botSettings","login","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userAccount","wrap","_callee$","_context","prev","next","sent","console","log","concat","t0","message","stop","_useState3","_useState4","isBotStarted","setIsBotStarted","_startBot","_callee2","_callee2$","_context2","_stopBot","_callee3","_callee3$","_context3","toggleBot","_ref4","_toConsumableArray","resetSettings","nextAllBotSettigns","npSetJobProfit","_ref5","index","newProfit","JOB_MIN_PROFITS_OBSD","npSetRestCost","_ref6","newCost","REST_MAX_COST_OBSD","toggleActivity","_ref7","activity","npSetMaxLandRentPrice","_ref8","newPrice","MAX_LAND_RENT_PRICE_OBSD","npSetUpgradeWorkersToLevel","_ref9","newLevel","UPGRADE_WORKERS_TO_LVL","style","padding","maxWidth","children","onClick","map","enableCheckboxId","className","href","target","rel","id","type","checked","onChange","htmlFor","botActivityCheckboxId","minProfit","minProfitInputId","value","event","Number","maxCost","maxRestCostInputId"],"sources":["/Users/germangurov/projects/wax_bot/src/App.js"],"sourcesContent":["import './App.css';\nimport { useCallback, useEffect, useState } from 'react';\nimport { wax } from './core/wax';\nimport { startBot, stopBot } from './bot/bot';\nimport {\n  setEconomyValues,\n  ECONOMY_VALUES,\n} from './novopangea/consts/ECONOMY_VALUES';\n\nconst getInitParams = () => ([\n  {\n    key: 'claimwax',\n    name: 'Claim Wax',\n    enabled: false,\n  },\n  {\n    key: 'novopangea',\n    name: 'Novopangea',\n    enabled: false,\n    params: ECONOMY_VALUES,\n  },\n]);\n\nfunction App() {\n  const [allBotSettings, setAllBotSettings] = useState([]);\n  useEffect(() => {\n    let allBotSettings = localStorage.getItem('allBotSettings');\n    if (allBotSettings == null) {\n      allBotSettings = JSON.stringify(getInitParams());\n      localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    }\n\n    setEconomyValues({\n      economyValues: JSON.parse(allBotSettings)\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings(JSON.parse(allBotSettings));\n  }, []);\n  const login = useCallback(async () => {\n    try {\n      const userAccount = await wax.login();\n      console.log(`AutoLogin enabled for account: ${userAccount}`);\n    } catch (err) {\n      console.log(err);\n      console.log(err.message);\n    }\n  }, []);\n\n  const [isBotStarted, setIsBotStarted] = useState(false);\n  const _startBot = useCallback(async () => {\n    startBot();\n    setIsBotStarted(true);\n  }, []);\n\n  const _stopBot = useCallback(async () => {\n    stopBot();\n    setIsBotStarted(false);\n  }, []);\n\n  const toggleBot = useCallback(({\n    botSettings,\n  }) => {\n    botSettings.enabled = !botSettings.enabled;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n\n  const resetSettings = useCallback(() => {\n    const nextAllBotSettigns = getInitParams();\n    localStorage.setItem('allBotSettings', JSON.stringify(nextAllBotSettigns));\n    setEconomyValues({\n      economyValues: nextAllBotSettigns\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings(nextAllBotSettigns);\n  }, [setAllBotSettings]);\n\n  const npSetJobProfit = useCallback(({\n    botSettings,\n    index,\n    newProfit,\n  }) => {\n    botSettings.params.JOB_MIN_PROFITS_OBSD[index] = newProfit;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  },[allBotSettings, setAllBotSettings]);\n\n  const npSetRestCost = useCallback(({\n    botSettings,\n    index,\n    newCost,\n  }) => {\n    botSettings.params.REST_MAX_COST_OBSD[index] = newCost;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  },[allBotSettings, setAllBotSettings]);\n  \n  const toggleActivity = useCallback(({\n    botSettings,\n    activity,\n  }) => {\n    botSettings.params[activity.key] = !botSettings.params[activity.key];\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n\n  const npSetMaxLandRentPrice = useCallback(({\n    botSettings,\n    newPrice,\n  }) => {\n    botSettings.params.MAX_LAND_RENT_PRICE_OBSD = newPrice;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n  \n  const npSetUpgradeWorkersToLevel = useCallback(({\n    botSettings,\n    newLevel,\n  }) => {\n    botSettings.params.UPGRADE_WORKERS_TO_LVL = newLevel;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    setEconomyValues({\n      economyValues: allBotSettings\n        .find(botSettings => botSettings.key === 'novopangea')\n        .params,\n    });\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n\n  return (\n    <div\n      style={{\n        padding: '12px 24px',\n        maxWidth: '600px',\n      }}\n    >\n      <div>Hi there, this page contains WAX bots. You assume all possible risks start using this bot, please check terms and condition of each WAX project if bots allowed.</div>\n      <div><b>All changed settings applied immediately!!!</b></div>\n      <br />\n      <br/>\n      <div>\n      Open a browser developer console on the bot page `localhost:3000`. You can use `Option + ⌘ + J` (on macOS), or `Shift + CTRL + J` (on Windows/Linux) in Chrome browser.\n      </div>\n      {isBotStarted ? (\n        <button onClick={_stopBot}>Stop</button>\n      ) : (\n        <button onClick={_startBot}>Run</button>\n      )}\n      <button onClick={login}>Login</button>\n      <br />\n      <br />\n      <button onClick={resetSettings}>Reset Settings</button>\n      <br />\n      <br />\n      {allBotSettings.map(botSettings => {\n        const enableCheckboxId = `enable-checkbox-${botSettings.key}`;\n        return <div key={botSettings.key} className='bot-settings'>\n          <h2>{botSettings.name}</h2>\n          {botSettings.key === 'claimwax'\n            ? <div>Visit WAX wallet <a href=\"https://wallet.wax.io/staking-rewards\" target='_blank' rel=\"noreferrer\" >staking page</a>.</div>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <div>Visit novopangea game <a href=\"https://novopangea.io/\" target='_blank' rel=\"noreferrer\" >website</a>.</div>\n            : null\n          }\n          <br/>\n          <input id={enableCheckboxId} type='checkbox' checked={botSettings.enabled} onChange={() => {\n            toggleBot({\n              botSettings,\n            });\n          }}/>\n          <label htmlFor={enableCheckboxId}>Enabled</label>\n          {botSettings.key === 'novopangea'\n            ? <>\n              <hr />\n              <h3>Settings</h3>\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Bot Activities</h4>\n              {[\n                {key: 'ENABLE_SHIFT_SKILLED_WORKERS', name: 'Start Skilled Workers shift in own or other buildings',},\n                {key: 'ENABLE_REST_SKILLED_WORKERS', name: 'Rest Skilled Workers in own or other buildings',},\n                {key: 'ENABLE_SHIFT_UNSKILLED_WORKERS', name: 'Start Unskilled Workers shift in own or other buildings',},\n                {key: 'ENABLE_REST_UNSKILLED_WORKERS', name: 'Rest Unskilled Workers in own or other buildings',},\n                {key: 'ENABLE_WORKER_UPGRADES', name: 'Upgrage workers',},\n                {key: 'ENABLE_RENEW_RENT_LANDS', name: 'Prepare and renew own lands',},\n                {key: 'ENABLE_RENT_EXTERNAL_LANDS', name: 'Rent external lands',},\n              ].map((activity) => {\n                const botActivityCheckboxId = `np-bot-activities-checkbox-id-${activity.key}`;\n                return <div key={activity.key}>\n                  <input type=\"checkbox\" id={botActivityCheckboxId} checked={botSettings.params[activity.key]} onChange={() => {\n                    toggleActivity({\n                      botSettings,\n                      activity,\n                    });\n                  }}/>\n                  <label htmlFor={botActivityCheckboxId}>{activity.name}</label>{' '}\n                </div>\n              })}\n            </>\n            : null\n          }\n\n          \n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Job Min Profits (OBSD)</h4>\n              {botSettings.params.JOB_MIN_PROFITS_OBSD.map((minProfit, index) => {\n                const minProfitInputId = `min-profit-input-id-${index}`;\n                return <div key={index}>\n                  <label htmlFor={minProfitInputId}>Level {index + 1}</label>{' '}\n                  <input type=\"number\" id={minProfitInputId} value={minProfit} onChange={(event) => {\n                    npSetJobProfit({\n                      botSettings,\n                      index,\n                      newProfit: Number(event.target.value),\n                    });\n                  }}/>\n                </div>\n              })}\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Rest Max Cost (OBSD)</h4>\n              <div>Food you spend for resting should be included in this price</div>\n              {botSettings.params.REST_MAX_COST_OBSD.map((maxCost, index) => {\n                const maxRestCostInputId = `rest-max-cost-input-id-${index}`;\n                return <div key={index}>\n                  <label htmlFor={maxRestCostInputId}>Level {index + 1}</label>{' '}\n                  <input type=\"number\" id={maxRestCostInputId} value={maxCost} onChange={(event) => {\n                    npSetRestCost({\n                      botSettings,\n                      index,\n                      newCost: Number(event.target.value),\n                    });\n                  }}/>\n                </div>\n              })}\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Max Land Rent Price (OBSD/sec)</h4>\n              <div>Only applied for lands owned by other players</div>\n              <input type=\"number\" value={botSettings.params.MAX_LAND_RENT_PRICE_OBSD} onChange={(event) => {\n                npSetMaxLandRentPrice({\n                  botSettings,\n                  newPrice: Number(event.target.value),\n                });\n              }}/>\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Upgrage Skilled Workers to Level</h4>\n              <div>If not enough resources for upgrade, workers will start shifts</div>\n              <input type=\"number\" value={botSettings.params.UPGRADE_WORKERS_TO_LVL} onChange={(event) => {\n                npSetUpgradeWorkersToLevel({\n                  botSettings,\n                  newLevel: Number(event.target.value),\n                });\n              }}/>\n            </>\n            : null\n          }\n\n\n\n{/* MIN_RENT_BUILDING_LEVELS */}\n        </div>;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}