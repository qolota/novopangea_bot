{"ast":null,"code":"const _ = require('lodash');\nconst fetchWaxData = require('../../core/fetchWaxData');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst getWeekStart = require('../utils/getWeekStart');\nconst RACES_LIMIT = 1000;\nconst fetchLastWeekWinRaces = async ({\n  winnerAccountName\n}) => {\n  const weekStartTime = getWeekStart();\n  let nextRaceId = null;\n  let races = [];\n  while (true) {\n    let nextRaces = _(await fetchWaxData({\n      code: CONTRACTS.APP_V2,\n      index_position: 1,\n      json: true,\n      key_type: \"\",\n      limit: RACES_LIMIT,\n      reverse: true,\n      scope: CONTRACTS.APP_V2,\n      show_payer: false,\n      table: \"races\",\n      lower_bound: \"\",\n      upper_bound: nextRaceId\n    })).map(race => ({\n      id: race.id,\n      launchTs: race.launch_ts * 1000,\n      winner: race.winner\n    })).value();\n    nextRaceId = nextRaces[nextRaces.length - 1].launchTs >= weekStartTime ? nextRaces[nextRaces.length - 1].id - 1 : null;\n    races = [...races, ..._(nextRaces).filter(race => race.launchTs >= weekStartTime).filter(race => race.winner === winnerAccountName).value()];\n    if (nextRaceId == null) {\n      break;\n    }\n  }\n  let nextPlayerRaceId = null;\n  let playerRaces = [];\n  while (races.length > 0) {\n    let nextPlayerRaces = _(await fetchWaxData({\n      code: CONTRACTS.APP_V2,\n      index_position: 1,\n      json: true,\n      key_type: \"\",\n      limit: RACES_LIMIT,\n      reverse: true,\n      scope: winnerAccountName,\n      show_payer: false,\n      table: \"playerraces\",\n      lower_bound: races[races.length - 1].id,\n      upper_bound: nextPlayerRaceId\n    })).map(race => ({\n      id: race.race_id,\n      vehicleAssetId: race.vehicle_asset_id,\n      position: race.position\n    })).value();\n    nextPlayerRaceId = nextPlayerRaces.length > 0 ? nextPlayerRaces[nextPlayerRaces.length - 1].id - 1 : null;\n    playerRaces = [...playerRaces, ..._(nextPlayerRaces).filter(race => race.position === 1).value()];\n    if (nextPlayerRaceId <= races[races.length - 1].id) {\n      break;\n    }\n  }\n  races = _(races).map(race => ({\n    ...race,\n    ...playerRaces.find(_race => _race.id === race.id)\n  })).value();\n  return races;\n};\nmodule.exports = fetchLastWeekWinRaces;","map":{"version":3,"names":["_","require","fetchWaxData","CONTRACTS","getWeekStart","RACES_LIMIT","fetchLastWeekWinRaces","winnerAccountName","weekStartTime","nextRaceId","races","nextRaces","code","APP_V2","index_position","json","key_type","limit","reverse","scope","show_payer","table","lower_bound","upper_bound","map","race","id","launchTs","launch_ts","winner","value","length","filter","nextPlayerRaceId","playerRaces","nextPlayerRaces","race_id","vehicleAssetId","vehicle_asset_id","position","find","_race","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novarallywax/api/fetchLastWeekWinRaces.js"],"sourcesContent":["const _ = require('lodash');\nconst fetchWaxData = require('../../core/fetchWaxData');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst getWeekStart = require('../utils/getWeekStart');\n\nconst RACES_LIMIT = 1000;\n\nconst fetchLastWeekWinRaces = async ({\n    winnerAccountName,\n}) => {\n    const weekStartTime = getWeekStart();\n    let nextRaceId = null;\n    let races = [];\n\n    while (true) {\n        let nextRaces = _(await fetchWaxData({\n            code: CONTRACTS.APP_V2,\n            index_position: 1,\n            json: true,\n            key_type: \"\",\n            limit: RACES_LIMIT,\n            reverse: true,\n            scope: CONTRACTS.APP_V2,\n            show_payer: false,\n            table: \"races\",\n            lower_bound: \"\",\n            upper_bound: nextRaceId,\n        }))\n            .map(race => ({\n                id: race.id,\n                launchTs: race.launch_ts * 1000,\n                winner: race.winner,\n            }))\n            .value();\n\n        nextRaceId = nextRaces[nextRaces.length - 1].launchTs >= weekStartTime\n            ? nextRaces[nextRaces.length - 1].id - 1\n            : null;\n\n        races = [\n            ...races,\n            ..._(nextRaces)\n                .filter(race => race.launchTs >= weekStartTime)\n                .filter(race => race.winner === winnerAccountName)\n                .value(),\n        ];\n        \n        if (nextRaceId == null) {\n            break;\n        }\n    }\n\n    let nextPlayerRaceId = null;\n    let playerRaces = [];\n    \n    while (races.length > 0) {\n        let nextPlayerRaces = _(await fetchWaxData({\n            code: CONTRACTS.APP_V2,\n            index_position: 1,\n            json: true,\n            key_type: \"\",\n            limit: RACES_LIMIT,\n            reverse: true,\n            scope: winnerAccountName,\n            show_payer: false,\n            table: \"playerraces\",\n            lower_bound: races[races.length - 1].id,\n            upper_bound: nextPlayerRaceId,\n        }))\n            .map(race => ({\n                id: race.race_id,\n                vehicleAssetId: race.vehicle_asset_id,\n                position: race.position,\n            }))\n            .value();\n\n        nextPlayerRaceId = nextPlayerRaces.length > 0\n            ? nextPlayerRaces[nextPlayerRaces.length - 1].id - 1\n            : null;\n        \n        playerRaces = [\n            ...playerRaces,\n            ..._(nextPlayerRaces)\n                .filter(race => race.position === 1)\n                .value(),\n        ];\n\n        if (nextPlayerRaceId <= races[races.length - 1].id) {\n            break;\n        }\n    }\n\n    races = _(races)\n        .map(race => ({\n            ...race,\n            ...playerRaces.find(_race => _race.id === race.id),\n        }))\n        .value();\n\n    return races;\n};\n\nmodule.exports = fetchLastWeekWinRaces;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}