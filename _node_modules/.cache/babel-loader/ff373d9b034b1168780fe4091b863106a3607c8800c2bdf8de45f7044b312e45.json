{"ast":null,"code":"import * as waxjs from \"@waxio/waxjs/dist\";\nimport log from '../utils/log';\nconst {\n  WAX_BLOCKS_PROVIDER\n} = require('../configs/ENDPOINTS');\nexport const wax = new waxjs.WaxJS({\n  rpcEndpoint: WAX_BLOCKS_PROVIDER\n});\nexport const checkIsAutoLogin = async () => {\n  const isAutoLoginAvailable = await wax.isAutoLoginAvailable();\n  if (isAutoLoginAvailable) {\n    console.log(`AutoLogin enabled for account: ${wax.userAccount}`);\n  }\n};\nexport const execTransaction = async ({\n  project,\n  actions\n}) => {\n  if (actions == null) {\n    return;\n  }\n  const result = await wax.api.transact({\n    actions: actions\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 1200\n  });\n  log({\n    project,\n    message: `Transaction submitted`,\n    info: result\n  });\n  return result;\n};\ncheckIsAutoLogin();","map":{"version":3,"names":["waxjs","log","WAX_BLOCKS_PROVIDER","require","wax","WaxJS","rpcEndpoint","checkIsAutoLogin","isAutoLoginAvailable","console","userAccount","execTransaction","project","actions","result","api","transact","blocksBehind","expireSeconds","message","info"],"sources":["/Users/germangurov/projects/wax_bot/src/core/wax.js"],"sourcesContent":["import * as waxjs from \"@waxio/waxjs/dist\";\nimport log from '../utils/log';\nconst {WAX_BLOCKS_PROVIDER} = require('../configs/ENDPOINTS');\n\nexport const wax = new waxjs.WaxJS({\n  rpcEndpoint: WAX_BLOCKS_PROVIDER,\n});\n\nexport const checkIsAutoLogin = async () => {\n  const isAutoLoginAvailable = await wax.isAutoLoginAvailable();\n  if (isAutoLoginAvailable) {\n    console.log(`AutoLogin enabled for account: ${wax.userAccount}`);\n  }\n};\n\nexport const execTransaction = async ({project, actions}) => {\n  if (actions == null) {\n    return;\n  }\n\n  const result = await wax.api.transact({\n    actions: actions,\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 1200,\n  });\n  log({\n    project,\n    message: `Transaction submitted`,\n    info: result,\n  });\n\n  return result;\n};\n\ncheckIsAutoLogin();\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,mBAAmB;AAC1C,OAAOC,GAAG,MAAM,cAAc;AAC9B,MAAM;EAACC;AAAmB,CAAC,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAE7D,OAAO,MAAMC,GAAG,GAAG,IAAIJ,KAAK,CAACK,KAAK,CAAC;EACjCC,WAAW,EAAEJ;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMC,oBAAoB,GAAG,MAAMJ,GAAG,CAACI,oBAAoB,CAAC,CAAC;EAC7D,IAAIA,oBAAoB,EAAE;IACxBC,OAAO,CAACR,GAAG,CAAE,kCAAiCG,GAAG,CAACM,WAAY,EAAC,CAAC;EAClE;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAO;EAACC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAC3D,IAAIA,OAAO,IAAI,IAAI,EAAE;IACnB;EACF;EAEA,MAAMC,MAAM,GAAG,MAAMV,GAAG,CAACW,GAAG,CAACC,QAAQ,CAAC;IACpCH,OAAO,EAAEA;EACX,CAAC,EAAE;IACDI,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE;EACjB,CAAC,CAAC;EACFjB,GAAG,CAAC;IACFW,OAAO;IACPO,OAAO,EAAG,uBAAsB;IAChCC,IAAI,EAAEN;EACR,CAAC,CAAC;EAEF,OAAOA,MAAM;AACf,CAAC;AAEDP,gBAAgB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}