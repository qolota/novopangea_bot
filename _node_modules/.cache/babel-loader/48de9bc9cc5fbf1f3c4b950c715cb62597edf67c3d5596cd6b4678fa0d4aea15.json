{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProofWaxRequiredKeys = void 0;\nvar getProofWaxRequiredKeys = function getProofWaxRequiredKeys(rpcUrl) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var response, responseData, _iterator, _step, perm;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"\".concat(rpcUrl, \"/v1/chain/get_account\"), {\n            body: JSON.stringify({\n              account_name: \"proof.wax\"\n            }),\n            method: \"POST\"\n          });\n        case 2:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 7;\n            break;\n          }\n          // Handle non-successful HTTP responses (e.g., 404 Not Found, 500 Internal Server Error)\n          console.error(\"HTTP error! Status: \".concat(response.status));\n          _context.next = 28;\n          break;\n        case 7:\n          _context.next = 9;\n          return response.json();\n        case 9:\n          responseData = _context.sent;\n          if (!responseData.permissions) {\n            _context.next = 28;\n            break;\n          }\n          _iterator = _createForOfIteratorHelper(responseData.permissions);\n          _context.prev = 12;\n          _iterator.s();\n        case 14:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 20;\n            break;\n          }\n          perm = _step.value;\n          if (!(perm.perm_name === \"active\")) {\n            _context.next = 18;\n            break;\n          }\n          return _context.abrupt(\"return\", perm.required_auth.keys[0].key);\n        case 18:\n          _context.next = 14;\n          break;\n        case 20:\n          _context.next = 25;\n          break;\n        case 22:\n          _context.prev = 22;\n          _context.t0 = _context[\"catch\"](12);\n          _iterator.e(_context.t0);\n        case 25:\n          _context.prev = 25;\n          _iterator.f();\n          return _context.finish(25);\n        case 28:\n          throw new Error('Unable to retrieve the WAX proof key for account verification');\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[12, 22, 25, 28]]);\n  }));\n};\nexports.getProofWaxRequiredKeys = getProofWaxRequiredKeys;","map":{"version":3,"names":["_regeneratorRuntime","require","default","_createForOfIteratorHelper","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","getProofWaxRequiredKeys","rpcUrl","mark","_callee","response","responseData","_iterator","_step","perm","wrap","_callee$","_context","prev","fetch","concat","body","JSON","stringify","account_name","method","sent","ok","console","error","status","json","permissions","s","n","perm_name","abrupt","required_auth","keys","key","t0","f","finish","Error","stop"],"sources":["/Users/germangurov/projects/wax_bot/node_modules/@waxio/waxjs/dist/helpers.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProofWaxRequiredKeys = void 0;\nconst getProofWaxRequiredKeys = (rpcUrl) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield fetch(`${rpcUrl}/v1/chain/get_account`, {\n        body: JSON.stringify({\n            account_name: \"proof.wax\",\n        }),\n        method: \"POST\",\n    });\n    if (!response.ok) {\n        // Handle non-successful HTTP responses (e.g., 404 Not Found, 500 Internal Server Error)\n        console.error(`HTTP error! Status: ${response.status}`);\n    }\n    else {\n        const responseData = yield response.json();\n        if (responseData.permissions) {\n            for (const perm of responseData.permissions) {\n                if (perm.perm_name === \"active\") {\n                    return perm.required_auth.keys[0].key;\n                }\n            }\n        }\n    }\n    throw (new Error('Unable to retrieve the WAX proof key for account verification'));\n});\nexports.getProofWaxRequiredKeys = getProofWaxRequiredKeys;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}