{"ast":null,"code":"const _ = require('lodash');\nconst fetchSeasons = async () => {\n  const res = await fetch('https://wax.greymass.com/v1/chain/get_table_rows', {\n    headers: {\n      accept: '*/*'\n    },\n    body: JSON.stringify({\n      code: 'beastharvest',\n      index_position: 1,\n      json: true,\n      key_type: '',\n      limit: '100',\n      lower_bound: null,\n      reverse: false,\n      scope: 'beastharvest',\n      show_payer: false,\n      table: 'seasons',\n      upper_bound: null\n    }),\n    method: 'POST'\n  });\n  const data = await res.json();\n  if (data.rows.length === 0) {\n    return [];\n  }\n  const seasons = _(data.rows).map(season => ({\n    id: season.season_id,\n    seasonName: season.season_name,\n    minTemp: season.min_temp,\n    maxTemp: season.max_temp,\n    nextSeasonId: season.next_season_id,\n    seasonDays: season.season_days\n  })).value();\n  return seasons;\n};\nmodule.exports = fetchSeasons;","map":{"version":3,"names":["_","require","fetchSeasons","res","fetch","headers","accept","body","JSON","stringify","code","index_position","json","key_type","limit","lower_bound","reverse","scope","show_payer","table","upper_bound","method","data","rows","length","seasons","map","season","id","season_id","seasonName","season_name","minTemp","min_temp","maxTemp","max_temp","nextSeasonId","next_season_id","seasonDays","season_days","value","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/beastgarden/plants/api/fetchSeasons.js"],"sourcesContent":["const _ = require('lodash');\n\nconst fetchSeasons = async () => {\n  const res = await fetch('https://wax.greymass.com/v1/chain/get_table_rows', {\n    headers: {\n      accept: '*/*',\n    },\n    body: JSON.stringify({\n      code: 'beastharvest',\n      index_position: 1,\n      json: true,\n      key_type: '',\n      limit: '100',\n      lower_bound: null,\n      reverse: false,\n      scope: 'beastharvest',\n      show_payer: false,\n      table: 'seasons',\n      upper_bound: null,\n    }),\n    method: 'POST',\n  });\n\n  const data = await res.json();\n\n  if (data.rows.length === 0) {\n    return [];\n  }\n\n  const seasons = _(data.rows)\n    .map((season) => ({\n      id: season.season_id,\n      seasonName: season.season_name,\n      minTemp: season.min_temp,\n      maxTemp: season.max_temp,\n      nextSeasonId: season.next_season_id,\n      seasonDays: season.season_days,\n    }))\n    .value();\n  return seasons;\n};\n\nmodule.exports = fetchSeasons;\n"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE3B,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kDAAkD,EAAE;IAC1EC,OAAO,EAAE;MACPC,MAAM,EAAE;IACV,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,IAAI,EAAE,cAAc;MACpBC,cAAc,EAAE,CAAC;MACjBC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,KAAK;MACZC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,cAAc;MACrBC,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE,SAAS;MAChBC,WAAW,EAAE;IACf,CAAC,CAAC;IACFC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMnB,GAAG,CAACS,IAAI,CAAC,CAAC;EAE7B,IAAIU,IAAI,CAACC,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAO,EAAE;EACX;EAEA,MAAMC,OAAO,GAAGzB,CAAC,CAACsB,IAAI,CAACC,IAAI,CAAC,CACzBG,GAAG,CAAEC,MAAM,KAAM;IAChBC,EAAE,EAAED,MAAM,CAACE,SAAS;IACpBC,UAAU,EAAEH,MAAM,CAACI,WAAW;IAC9BC,OAAO,EAAEL,MAAM,CAACM,QAAQ;IACxBC,OAAO,EAAEP,MAAM,CAACQ,QAAQ;IACxBC,YAAY,EAAET,MAAM,CAACU,cAAc;IACnCC,UAAU,EAAEX,MAAM,CAACY;EACrB,CAAC,CAAC,CAAC,CACFC,KAAK,CAAC,CAAC;EACV,OAAOf,OAAO;AAChB,CAAC;AAEDgB,MAAM,CAACC,OAAO,GAAGxC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}