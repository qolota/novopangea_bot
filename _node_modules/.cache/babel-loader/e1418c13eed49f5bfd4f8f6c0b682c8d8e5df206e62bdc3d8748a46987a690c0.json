{"ast":null,"code":"var _jsxFileName = \"/Users/germangurov/projects/wax_bot/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport _ from 'lodash';\nimport { useCallback, useEffect, useState } from 'react';\nimport { wax } from './core/wax';\nimport { startBot, stopBot } from './bot/bot';\nimport ECONOMY_VALUES from './novopangea/consts/ECONOMY_VALUES';\n\n// UPGRADE_WORKERS_TO_LVL: 4,\n// // maximum external land price bot will agree to\n// MAX_LAND_RENT_PRICE_OBSD: 0.00000331,\n// // minimum building level to be placed to a land\n// MIN_RENT_BUILDING_LEVELS: {\n//     rest: 3,\n//     materials: 4,\n//     food: 4,\n//     energy: 4,\n// },\n// // minimum wage your workers agree to work\n// JOB_MIN_PROFITS_OBSD: [\n//     // level 1\n//     2,\n//     // level 2\n//     4.39400,\n//     // level 3\n//     6.59100,\n//     // level 4\n//     7.69000,\n//     // level 5\n//     8.72000,\n// ],\n// // maximum cost your workers agree to rest\n// REST_MAX_COST_OBSD: [\n//     // level 1\n//     1.1,\n//     // level 2\n//     1.510,\n//     // level 3\n//     1.873,\n//     // level 4\n//     2.055,\n//     // level 5\n//     2.237,\n// ],\n// // control values\n// ENABLE_WORKER_UPGRADES: true,\n// ENABLE_RENT_EXTERNAL_LANDS: true,\n// ENABLE_RENEW_RENT_LANDS: true,\n// ENABLE_REST_SKILLED_WORKERS: true,\n// ENABLE_REST_UNSKILLED_WORKERS: true,\n// ENABLE_SHIFT_SKILLED_WORKERS: true,\n// ENABLE_SHIFT_UNSKILLED_WORKERS: true,\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [allBotSettings, setAllBotSettings] = useState([]);\n  useEffect(() => {\n    const allBotSettings = localStorage.getItem('allBotSettings');\n    if (allBotSettings == null) {\n      const nextAllBotSettigns = [{\n        key: 'claimwax',\n        name: 'Claim Wax',\n        enabled: false\n      }, {\n        key: 'novopangea',\n        name: 'Novopangea',\n        enabled: false,\n        params: ECONOMY_VALUES\n      }];\n      localStorage.setItem('allBotSettings', JSON.stringify(nextAllBotSettigns));\n      setAllBotSettings(nextAllBotSettigns);\n    } else {\n      setAllBotSettings(JSON.parse(allBotSettings));\n    }\n  }, []);\n  const login = useCallback(async () => {\n    try {\n      const userAccount = await wax.login();\n      const pubKeys = wax.pubKeys;\n      console.log(`AutoLogin enabled for account: ${userAccount}`);\n      console.log(`Active: ${pubKeys[0]} Owner: ${pubKeys[1]}`);\n    } catch (err) {\n      console.log(err);\n      console.log(err.message);\n    }\n  }, []);\n  const [isBotStarted, setIsBotStarted] = useState(false);\n  const _startBot = useCallback(async () => {\n    startBot();\n    setIsBotStarted(true);\n  }, []);\n  const _stopBot = useCallback(async () => {\n    stopBot();\n    setIsBotStarted(false);\n  }, []);\n  const toggleBot = useCallback(({\n    botSettings\n  }) => {\n    botSettings.enabled = !botSettings.enabled;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  const npSetJobProfit = useCallback(({\n    botSettings,\n    index,\n    newProfit\n  }) => {\n    botSettings.params.JOB_MIN_PROFITS_OBSD[index] = newProfit;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  const npSetRestCost = useCallback(({\n    botSettings,\n    index,\n    newCost\n  }) => {\n    botSettings.params.REST_MAX_COST_OBSD[index] = newCost;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  const toggleActivity = useCallback(({\n    botSettings,\n    activity\n  }) => {\n    botSettings.params[activity.key] = !botSettings.params[activity.key];\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  const npSetMaxLandRentPrice = useCallback(({\n    botSettings,\n    newPrice\n  }) => {\n    botSettings.params.MAX_LAND_RENT_PRICE_OBSD = newPrice;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  const npSetUpgradeWorkersToLevel = useCallback(({\n    botSettings,\n    newLevel\n  }) => {\n    botSettings.params.UPGRADE_WORKERS_TO_LVL = newLevel;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([...allBotSettings]);\n  }, [allBotSettings, setAllBotSettings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '12px 24px',\n      maxWidth: '600px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hi there, this page contains WAX bots. You assume all possible risks start using this bot, please check terms and condition of each WAX project if bots allowed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"All changed settings applied immediately!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), isBotStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: _stopBot,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: _startBot,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), allBotSettings.map(botSettings => {\n      const enableCheckboxId = `enable-checkbox-${botSettings.key}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-settings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: botSettings.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), botSettings.key === 'claimwax' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Visit WAX wallet \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://wallet.wax.io/staking-rewards\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"staking page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 37\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Visit novopangea game \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://novopangea.io/\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 42\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: enableCheckboxId,\n          type: \"checkbox\",\n          checked: botSettings.enabled,\n          onClick: () => {\n            toggleBot({\n              botSettings\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: enableCheckboxId,\n          children: \"Enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Bot Activities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), [{\n            key: 'ENABLE_SHIFT_SKILLED_WORKERS',\n            name: 'Start Skilled Workers shift in own or other buildings'\n          }, {\n            key: 'ENABLE_REST_SKILLED_WORKERS',\n            name: 'Rest Skilled Workers in own or other buildings'\n          }, {\n            key: 'ENABLE_SHIFT_UNSKILLED_WORKERS',\n            name: 'Start Unskilled Workers shift in own or other buildings'\n          }, {\n            key: 'ENABLE_REST_UNSKILLED_WORKERS',\n            name: 'Rest Unskilled Workers in own or other buildings'\n          }, {\n            key: 'ENABLE_WORKER_UPGRADES',\n            name: 'Upgrage workers'\n          }, {\n            key: 'ENABLE_RENEW_RENT_LANDS',\n            name: 'Renew land rent'\n          }, {\n            key: 'ENABLE_RENT_EXTERNAL_LANDS',\n            name: 'Rent external lands'\n          }].map(activity => {\n            const botActivityCheckboxId = `np-bot-activities-checkbox-id-${activity.key}`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: botActivityCheckboxId,\n                checked: botSettings.params[activity.key],\n                onClick: () => {\n                  toggleActivity({\n                    botSettings,\n                    activity\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: botActivityCheckboxId,\n                children: activity.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), ' ']\n            }, activity.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 24\n            }, this);\n          })]\n        }, void 0, true) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Job Min Profits (OBSD)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), botSettings.params.JOB_MIN_PROFITS_OBSD.map((minProfit, index) => {\n            const minProfitInputId = `min-profit-input-id-${index}`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: minProfitInputId,\n                children: [\"Level \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: minProfitInputId,\n                value: minProfit,\n                onChange: event => {\n                  npSetJobProfit({\n                    botSettings,\n                    index,\n                    newProfit: Number(event.target.value)\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 24\n            }, this);\n          })]\n        }, void 0, true) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Rest Max Cost (OBSD)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Food you spend for resting should be included in this price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), botSettings.params.REST_MAX_COST_OBSD.map((maxCost, index) => {\n            const maxRestCostInputId = `rest-max-cost-input-id-${index}`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: maxRestCostInputId,\n                children: [\"Level \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: maxRestCostInputId,\n                value: maxCost,\n                onChange: event => {\n                  npSetRestCost({\n                    botSettings,\n                    index,\n                    newCost: Number(event.target.value)\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 24\n            }, this);\n          })]\n        }, void 0, true) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Max Land Rent Price (OBSD/sec)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Only applied for lands owned by other players\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: botSettings.params.MAX_LAND_RENT_PRICE_OBSD,\n            onChange: event => {\n              npSetMaxLandRentPrice({\n                botSettings,\n                newPrice: Number(event.target.value)\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null, botSettings.key === 'novopangea' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Upgrage Skilled Workers to Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"If there is no enough resources, workers will start shifts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: botSettings.params.UPGRADE_WORKERS_TO_LVL,\n            onChange: event => {\n              npSetUpgradeWorkersToLevel({\n                botSettings,\n                newLevel: Number(event.target.value)\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null]\n      }, botSettings.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HvrraWCBfmtkxoOwYOVuk2Oqqyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_","useCallback","useEffect","useState","wax","startBot","stopBot","ECONOMY_VALUES","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","allBotSettings","setAllBotSettings","localStorage","getItem","nextAllBotSettigns","key","name","enabled","params","setItem","JSON","stringify","parse","login","userAccount","pubKeys","console","log","err","message","isBotStarted","setIsBotStarted","_startBot","_stopBot","toggleBot","botSettings","npSetJobProfit","index","newProfit","JOB_MIN_PROFITS_OBSD","npSetRestCost","newCost","REST_MAX_COST_OBSD","toggleActivity","activity","npSetMaxLandRentPrice","newPrice","MAX_LAND_RENT_PRICE_OBSD","npSetUpgradeWorkersToLevel","newLevel","UPGRADE_WORKERS_TO_LVL","style","padding","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","enableCheckboxId","className","href","target","rel","id","type","checked","for","botActivityCheckboxId","minProfit","minProfitInputId","value","onChange","event","Number","maxCost","maxRestCostInputId","_c","$RefreshReg$"],"sources":["/Users/germangurov/projects/wax_bot/src/App.js"],"sourcesContent":["import './App.css';\nimport _ from 'lodash';\nimport { useCallback, useEffect, useState } from 'react';\nimport { wax } from './core/wax';\nimport { startBot, stopBot } from './bot/bot';\nimport ECONOMY_VALUES from './novopangea/consts/ECONOMY_VALUES';\n\n    // UPGRADE_WORKERS_TO_LVL: 4,\n    // // maximum external land price bot will agree to\n    // MAX_LAND_RENT_PRICE_OBSD: 0.00000331,\n    // // minimum building level to be placed to a land\n    // MIN_RENT_BUILDING_LEVELS: {\n    //     rest: 3,\n    //     materials: 4,\n    //     food: 4,\n    //     energy: 4,\n    // },\n    // // minimum wage your workers agree to work\n    // JOB_MIN_PROFITS_OBSD: [\n    //     // level 1\n    //     2,\n    //     // level 2\n    //     4.39400,\n    //     // level 3\n    //     6.59100,\n    //     // level 4\n    //     7.69000,\n    //     // level 5\n    //     8.72000,\n    // ],\n    // // maximum cost your workers agree to rest\n    // REST_MAX_COST_OBSD: [\n    //     // level 1\n    //     1.1,\n    //     // level 2\n    //     1.510,\n    //     // level 3\n    //     1.873,\n    //     // level 4\n    //     2.055,\n    //     // level 5\n    //     2.237,\n    // ],\n    // // control values\n    // ENABLE_WORKER_UPGRADES: true,\n    // ENABLE_RENT_EXTERNAL_LANDS: true,\n    // ENABLE_RENEW_RENT_LANDS: true,\n    // ENABLE_REST_SKILLED_WORKERS: true,\n    // ENABLE_REST_UNSKILLED_WORKERS: true,\n    // ENABLE_SHIFT_SKILLED_WORKERS: true,\n    // ENABLE_SHIFT_UNSKILLED_WORKERS: true,\n\nfunction App() {\n  const [allBotSettings, setAllBotSettings] = useState([]);\n  useEffect(() => {\n    const allBotSettings = localStorage.getItem('allBotSettings');\n    if (allBotSettings == null) {\n      const nextAllBotSettigns = [\n        {\n          key: 'claimwax',\n          name: 'Claim Wax',\n          enabled: false,\n        },\n        {\n          key: 'novopangea',\n          name: 'Novopangea',\n          enabled: false,\n          params: ECONOMY_VALUES,\n        },\n      ];\n      localStorage.setItem('allBotSettings', JSON.stringify(nextAllBotSettigns));\n      setAllBotSettings(nextAllBotSettigns);\n    } else {\n      setAllBotSettings(JSON.parse(allBotSettings));\n    }\n  }, []);\n  const login = useCallback(async () => {\n    try {\n      const userAccount = await wax.login();\n      const pubKeys = wax.pubKeys;\n      console.log(`AutoLogin enabled for account: ${userAccount}`);\n      console.log(`Active: ${pubKeys[0]} Owner: ${pubKeys[1]}`);\n    } catch (err) {\n      console.log(err);\n      console.log(err.message);\n    }\n  }, []);\n\n  const [isBotStarted, setIsBotStarted] = useState(false);\n  const _startBot = useCallback(async () => {\n    startBot();\n    setIsBotStarted(true);\n  }, []);\n\n  const _stopBot = useCallback(async () => {\n    stopBot();\n    setIsBotStarted(false);\n  }, []);\n\n  const toggleBot = useCallback(({\n    botSettings,\n  }) => {\n    botSettings.enabled = !botSettings.enabled;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n\n  const npSetJobProfit = useCallback(({\n    botSettings,\n    index,\n    newProfit,\n  }) => {\n    botSettings.params.JOB_MIN_PROFITS_OBSD[index] = newProfit;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  },[allBotSettings, setAllBotSettings]);\n\n  const npSetRestCost = useCallback(({\n    botSettings,\n    index,\n    newCost,\n  }) => {\n    botSettings.params.REST_MAX_COST_OBSD[index] = newCost;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  },[allBotSettings, setAllBotSettings]);\n  \n  const toggleActivity = useCallback(({\n    botSettings,\n    activity,\n  }) => {\n    botSettings.params[activity.key] = !botSettings.params[activity.key];\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n\n  const npSetMaxLandRentPrice = useCallback(({\n    botSettings,\n    newPrice,\n  }) => {\n    botSettings.params.MAX_LAND_RENT_PRICE_OBSD = newPrice;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n  \n  const npSetUpgradeWorkersToLevel = useCallback(({\n    botSettings,\n    newLevel,\n  }) => {\n    botSettings.params.UPGRADE_WORKERS_TO_LVL = newLevel;\n    localStorage.setItem('allBotSettings', JSON.stringify(allBotSettings));\n    console.log(allBotSettings);\n    setAllBotSettings([\n      ...allBotSettings,\n    ]);\n  }, [allBotSettings, setAllBotSettings]);\n\n  return (\n    <div\n      style={{\n        padding: '12px 24px',\n        maxWidth: '600px',\n      }}\n    >\n      <div>Hi there, this page contains WAX bots. You assume all possible risks start using this bot, please check terms and condition of each WAX project if bots allowed.</div>\n      <div><b>All changed settings applied immediately!!!</b></div>\n      <br />\n      {isBotStarted ? (\n        <button onClick={_stopBot}>Stop</button>\n      ) : (\n        <button onClick={_startBot}>Run</button>\n      )}\n      <button onClick={login}>Login</button>\n      <br />\n      <br />\n      {allBotSettings.map(botSettings => {\n        const enableCheckboxId = `enable-checkbox-${botSettings.key}`;\n        return <div key={botSettings.key} className='bot-settings'>\n          <h2>{botSettings.name}</h2>\n          {botSettings.key === 'claimwax'\n            ? <div>Visit WAX wallet <a href=\"https://wallet.wax.io/staking-rewards\" target='_blank' rel=\"noreferrer\" >staking page</a>.</div>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <div>Visit novopangea game <a href=\"https://novopangea.io/\" target='_blank' rel=\"noreferrer\" >website</a>.</div>\n            : null\n          }\n          <br/>\n          <input id={enableCheckboxId} type='checkbox' checked={botSettings.enabled} onClick={() => {\n            toggleBot({\n              botSettings,\n            });\n          }}/>\n          <label for={enableCheckboxId}>Enabled</label>\n          {botSettings.key === 'novopangea'\n            ? <>\n              <hr />\n              <h3>Settings</h3>\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Bot Activities</h4>\n              {[\n                {key: 'ENABLE_SHIFT_SKILLED_WORKERS', name: 'Start Skilled Workers shift in own or other buildings',},\n                {key: 'ENABLE_REST_SKILLED_WORKERS', name: 'Rest Skilled Workers in own or other buildings',},\n                {key: 'ENABLE_SHIFT_UNSKILLED_WORKERS', name: 'Start Unskilled Workers shift in own or other buildings',},\n                {key: 'ENABLE_REST_UNSKILLED_WORKERS', name: 'Rest Unskilled Workers in own or other buildings',},\n                {key: 'ENABLE_WORKER_UPGRADES', name: 'Upgrage workers',},\n                {key: 'ENABLE_RENEW_RENT_LANDS', name: 'Renew land rent',},\n                {key: 'ENABLE_RENT_EXTERNAL_LANDS', name: 'Rent external lands',},\n              ].map((activity) => {\n                const botActivityCheckboxId = `np-bot-activities-checkbox-id-${activity.key}`;\n                return <div key={activity.key}>\n                  <input type=\"checkbox\" id={botActivityCheckboxId} checked={botSettings.params[activity.key]} onClick={() => {\n                    toggleActivity({\n                      botSettings,\n                      activity,\n                    });\n                  }}/>\n                  <label for={botActivityCheckboxId}>{activity.name}</label>{' '}\n                </div>\n              })}\n            </>\n            : null\n          }\n\n          \n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Job Min Profits (OBSD)</h4>\n              {botSettings.params.JOB_MIN_PROFITS_OBSD.map((minProfit, index) => {\n                const minProfitInputId = `min-profit-input-id-${index}`;\n                return <div key={index}>\n                  <label for={minProfitInputId}>Level {index + 1}</label>{' '}\n                  <input type=\"number\" id={minProfitInputId} value={minProfit} onChange={(event) => {\n                    npSetJobProfit({\n                      botSettings,\n                      index,\n                      newProfit: Number(event.target.value),\n                    });\n                  }}/>\n                </div>\n              })}\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Rest Max Cost (OBSD)</h4>\n              <div>Food you spend for resting should be included in this price</div>\n              {botSettings.params.REST_MAX_COST_OBSD.map((maxCost, index) => {\n                const maxRestCostInputId = `rest-max-cost-input-id-${index}`;\n                return <div key={index}>\n                  <label for={maxRestCostInputId}>Level {index + 1}</label>{' '}\n                  <input type=\"number\" id={maxRestCostInputId} value={maxCost} onChange={(event) => {\n                    npSetRestCost({\n                      botSettings,\n                      index,\n                      newCost: Number(event.target.value),\n                    });\n                  }}/>\n                </div>\n              })}\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Max Land Rent Price (OBSD/sec)</h4>\n              <div>Only applied for lands owned by other players</div>\n              <input type=\"number\" value={botSettings.params.MAX_LAND_RENT_PRICE_OBSD} onChange={(event) => {\n                npSetMaxLandRentPrice({\n                  botSettings,\n                  newPrice: Number(event.target.value),\n                });\n              }}/>\n            </>\n            : null\n          }\n          {botSettings.key === 'novopangea'\n            ? <>\n              <h4>Upgrage Skilled Workers to Level</h4>\n              <div>If there is no enough resources, workers will start shifts</div>\n              <input type=\"number\" value={botSettings.params.UPGRADE_WORKERS_TO_LVL} onChange={(event) => {\n                npSetUpgradeWorkersToLevel({\n                  botSettings,\n                  newLevel: Number(event.target.value),\n                });\n              }}/>\n            </>\n            : null\n          }\n\n\n\n{/* MIN_RENT_BUILDING_LEVELS */}\n        </div>;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}