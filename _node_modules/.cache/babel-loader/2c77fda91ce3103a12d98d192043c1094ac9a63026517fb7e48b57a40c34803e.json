{"ast":null,"code":"const fetchProxies = require('./api/fetchProxies');\nconst fetchVoter = require('./api/fetchVoter');\nconst claimWax = require('./actions/claimWax');\nconst voteProdcuer = require('./actions/voteProducer');\nconst claimWaxRewardCalcNextAction = async ({\n  accountName\n}) => {\n  const proxies = await fetchProxies();\n  const voter = await fetchVoter({\n    accountName\n  });\n  if (voter.lastClaimTime.getTime() > Date.now() - 24 * 60 * 60 * 1000) {\n    return {\n      action: 'wait',\n      message: 'Nothing to claim'\n    };\n  }\n  return {\n    action: 'claim_and_vote',\n    actions: [voteProdcuer({\n      accountName,\n      proxyName: proxies[0].account\n    }), claimWax({\n      accountName\n    })]\n  };\n};\nexport default claimWaxRewardCalcNextAction;","map":{"version":3,"names":["fetchProxies","require","fetchVoter","claimWax","voteProdcuer","claimWaxRewardCalcNextAction","accountName","proxies","voter","lastClaimTime","getTime","Date","now","action","message","actions","proxyName","account"],"sources":["/Users/germangurov/projects/wax_bot/src/core/claimWaxRewardCalcNextAction.js"],"sourcesContent":["const fetchProxies = require('./api/fetchProxies');\nconst fetchVoter = require('./api/fetchVoter');\nconst claimWax = require('./actions/claimWax');\nconst voteProdcuer = require('./actions/voteProducer');\n\nconst claimWaxRewardCalcNextAction = async ({\n    accountName,\n}) => {\n    const proxies = await fetchProxies();\n    const voter = await fetchVoter({\n        accountName,\n    });\n    if (voter.lastClaimTime.getTime() > (Date.now() - 24 * 60 * 60 * 1000)) {\n        return {\n            action: 'wait',\n            message: 'Nothing to claim',\n        }\n    }\n\n    return {\n        action: 'claim_and_vote',\n        actions: [\n            voteProdcuer({\n                accountName,\n                proxyName: proxies[0].account,\n            }),\n            claimWax({\n                accountName,\n            }),\n        ],\n    };\n};\n\nexport default claimWaxRewardCalcNextAction;"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAClD,MAAMC,UAAU,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC9C,MAAME,QAAQ,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAC9C,MAAMG,YAAY,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AAEtD,MAAMI,4BAA4B,GAAG,MAAAA,CAAO;EACxCC;AACJ,CAAC,KAAK;EACF,MAAMC,OAAO,GAAG,MAAMP,YAAY,CAAC,CAAC;EACpC,MAAMQ,KAAK,GAAG,MAAMN,UAAU,CAAC;IAC3BI;EACJ,CAAC,CAAC;EACF,IAAIE,KAAK,CAACC,aAAa,CAACC,OAAO,CAAC,CAAC,GAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAK,EAAE;IACpE,OAAO;MACHC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;IACb,CAAC;EACL;EAEA,OAAO;IACHD,MAAM,EAAE,gBAAgB;IACxBE,OAAO,EAAE,CACLX,YAAY,CAAC;MACTE,WAAW;MACXU,SAAS,EAAET,OAAO,CAAC,CAAC,CAAC,CAACU;IAC1B,CAAC,CAAC,EACFd,QAAQ,CAAC;MACLG;IACJ,CAAC,CAAC;EAEV,CAAC;AACL,CAAC;AAED,eAAeD,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}