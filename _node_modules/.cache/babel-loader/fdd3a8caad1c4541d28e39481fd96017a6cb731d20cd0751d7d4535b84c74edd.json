{"ast":null,"code":"const pad = require('pad-left');\nconst formatPriceUnit = ({\n  unitPrice,\n  precision\n}) => {\n  if (unitPrice.length <= precision) {\n    return `0.${pad(unitPrice, precision, '0')}`;\n  }\n  const unitPriceArr = unitPrice.split('');\n  const left = unitPriceArr.slice(0, unitPrice.length - precision).join('');\n  const right = unitPriceArr.slice(unitPrice.length - precision).join('');\n  return `${left}.${right}`;\n};\nmodule.exports = formatPriceUnit;","map":{"version":3,"names":["pad","require","formatPriceUnit","unitPrice","precision","length","unitPriceArr","split","left","slice","join","right","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/alcor/utils/formatPriceUnit.js"],"sourcesContent":["const pad = require('pad-left');\n\nconst formatPriceUnit = ({\n    unitPrice,\n    precision,\n}) => {\n    if (unitPrice.length <= precision) {\n        return `0.${pad(unitPrice, precision, '0')}`;\n    }\n\n    const unitPriceArr = unitPrice.split('');\n    const left = unitPriceArr\n        .slice(0, unitPrice.length - precision)\n        .join('');\n    const right = unitPriceArr\n        .slice(unitPrice.length - precision)\n        .join('');\n    \n    return `${left}.${right}`;\n};\n\nmodule.exports = formatPriceUnit;"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,UAAU,CAAC;AAE/B,MAAMC,eAAe,GAAGA,CAAC;EACrBC,SAAS;EACTC;AACJ,CAAC,KAAK;EACF,IAAID,SAAS,CAACE,MAAM,IAAID,SAAS,EAAE;IAC/B,OAAQ,KAAIJ,GAAG,CAACG,SAAS,EAAEC,SAAS,EAAE,GAAG,CAAE,EAAC;EAChD;EAEA,MAAME,YAAY,GAAGH,SAAS,CAACI,KAAK,CAAC,EAAE,CAAC;EACxC,MAAMC,IAAI,GAAGF,YAAY,CACpBG,KAAK,CAAC,CAAC,EAAEN,SAAS,CAACE,MAAM,GAAGD,SAAS,CAAC,CACtCM,IAAI,CAAC,EAAE,CAAC;EACb,MAAMC,KAAK,GAAGL,YAAY,CACrBG,KAAK,CAACN,SAAS,CAACE,MAAM,GAAGD,SAAS,CAAC,CACnCM,IAAI,CAAC,EAAE,CAAC;EAEb,OAAQ,GAAEF,IAAK,IAAGG,KAAM,EAAC;AAC7B,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGX,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}