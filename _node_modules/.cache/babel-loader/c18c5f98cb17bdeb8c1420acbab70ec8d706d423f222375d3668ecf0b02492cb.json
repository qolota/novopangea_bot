{"ast":null,"code":"const _ = require('lodash');\nconst getTodayTimestamp = require('../../utils/getTodayTimestamp');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst fetchTodayDeathRally = async () => {\n  const deathRallyId = getTodayTimestamp();\n  const deathRally = _(await fetchAllWaxData2({\n    params: {\n      code: CONTRACTS.APP_V2,\n      scope: deathRallyId,\n      table: 'deathrally'\n    },\n    customProcessor: ({\n      row\n    }) => ({\n      id: row.id,\n      accountName: row.player,\n      vehicleId: row.vehicle_asset_id,\n      driverIds: [row.driver1_asset_id, row.driver2_asset_id],\n      time: row.time,\n      pos: row.position,\n      prizeIds: row.prize_ids\n    })\n  })).sortBy(team => team.pos).value();\n  return deathRally;\n};\nmodule.exports = fetchTodayDeathRally;","map":{"version":3,"names":["_","require","getTodayTimestamp","CONTRACTS","fetchAllWaxData2","fetchTodayDeathRally","deathRallyId","deathRally","params","code","APP_V2","scope","table","customProcessor","row","id","accountName","player","vehicleId","vehicle_asset_id","driverIds","driver1_asset_id","driver2_asset_id","time","pos","position","prizeIds","prize_ids","sortBy","team","value","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novarallywax/api/fetchTodayDeathRally.js"],"sourcesContent":["const _ = require('lodash');\nconst getTodayTimestamp = require('../../utils/getTodayTimestamp');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\n\nconst fetchTodayDeathRally = async () => {\n    const deathRallyId = getTodayTimestamp();\n    const deathRally = _(await fetchAllWaxData2({\n        params: {\n            code: CONTRACTS.APP_V2,\n            scope: deathRallyId,\n            table: 'deathrally',\n        },\n        customProcessor: ({row}) => ({\n            id: row.id,\n            accountName: row.player,\n            vehicleId: row.vehicle_asset_id,\n            driverIds: [\n                row.driver1_asset_id,\n                row.driver2_asset_id,\n            ],\n            time: row.time,\n            pos: row.position,\n            prizeIds: row.prize_ids,\n        }),\n    }))\n        .sortBy(team => team.pos)\n        .value();\n\n    return deathRally;\n};\n\nmodule.exports = fetchTodayDeathRally;"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAClE,MAAME,SAAS,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,6BAA6B,CAAC;AAE/D,MAAMI,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,YAAY,GAAGJ,iBAAiB,CAAC,CAAC;EACxC,MAAMK,UAAU,GAAGP,CAAC,CAAC,MAAMI,gBAAgB,CAAC;IACxCI,MAAM,EAAE;MACJC,IAAI,EAAEN,SAAS,CAACO,MAAM;MACtBC,KAAK,EAAEL,YAAY;MACnBM,KAAK,EAAE;IACX,CAAC;IACDC,eAAe,EAAEA,CAAC;MAACC;IAAG,CAAC,MAAM;MACzBC,EAAE,EAAED,GAAG,CAACC,EAAE;MACVC,WAAW,EAAEF,GAAG,CAACG,MAAM;MACvBC,SAAS,EAAEJ,GAAG,CAACK,gBAAgB;MAC/BC,SAAS,EAAE,CACPN,GAAG,CAACO,gBAAgB,EACpBP,GAAG,CAACQ,gBAAgB,CACvB;MACDC,IAAI,EAAET,GAAG,CAACS,IAAI;MACdC,GAAG,EAAEV,GAAG,CAACW,QAAQ;MACjBC,QAAQ,EAAEZ,GAAG,CAACa;IAClB,CAAC;EACL,CAAC,CAAC,CAAC,CACEC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,GAAG,CAAC,CACxBM,KAAK,CAAC,CAAC;EAEZ,OAAOvB,UAAU;AACrB,CAAC;AAEDwB,MAAM,CAACC,OAAO,GAAG3B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}