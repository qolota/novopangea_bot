{"ast":null,"code":"const _ = require('lodash');\nconst fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchUpgradeConfigs = require('./fetchUpgradeConfigs');\nconst fetchOngoingUpgrades = async ({\n  cache = {}\n}) => {\n  const upgradeConfigs = cache.upgradeConfigs || (await fetchUpgradeConfigs({\n    cache: {}\n  }));\n  const allConfigs = [..._(upgradeConfigs.buildings).map(group => group.configs).flatten().value(), ..._(upgradeConfigs.workers).map(group => group.configs).flatten().value()];\n  const upgrades = await fetchAllWaxData2({\n    params: {\n      code: CONTRACTS.GAME,\n      scope: CONTRACTS.GAME,\n      table: 'upgradenft'\n    },\n    customProcessor: ({\n      row\n    }) => ({\n      assetId: row.asset_id,\n      owner: row.owner,\n      endTime: row.end_time * 1000,\n      config: allConfigs.find(config => config.id === row.config_id)\n    })\n  });\n  return upgrades;\n};\nmodule.exports = fetchOngoingUpgrades;","map":{"version":3,"names":["_","require","fetchAllWaxData2","CONTRACTS","fetchUpgradeConfigs","fetchOngoingUpgrades","cache","upgradeConfigs","allConfigs","buildings","map","group","configs","flatten","value","workers","upgrades","params","code","GAME","scope","table","customProcessor","row","assetId","asset_id","owner","endTime","end_time","config","find","id","config_id","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novopangea/api/fetchOngoingUpgrades.js"],"sourcesContent":["const _ = require('lodash');\nconst fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchUpgradeConfigs = require('./fetchUpgradeConfigs');\n\nconst fetchOngoingUpgrades = async ({\n    cache = {},\n}) => {\n    const upgradeConfigs = cache.upgradeConfigs || await fetchUpgradeConfigs({\n        cache: {},\n    });\n\n    const allConfigs = [\n        ..._(upgradeConfigs.buildings)\n            .map(group => group.configs)\n            .flatten()\n            .value(),\n        ..._(upgradeConfigs.workers)\n            .map(group => group.configs)\n            .flatten()\n            .value(),\n    ]\n    const upgrades = await fetchAllWaxData2({\n        params: {\n            code: CONTRACTS.GAME,\n            scope: CONTRACTS.GAME,\n            table: 'upgradenft',\n        },\n        customProcessor: ({row}) => ({\n            assetId: row.asset_id,\n            owner: row.owner,\n            endTime: row.end_time * 1000,\n            config: allConfigs.find(config => config.id === row.config_id),\n        }),\n    });\n\n    return upgrades;\n};\n\nmodule.exports = fetchOngoingUpgrades;"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AAC/D,MAAME,SAAS,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAMG,mBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AAE5D,MAAMI,oBAAoB,GAAG,MAAAA,CAAO;EAChCC,KAAK,GAAG,CAAC;AACb,CAAC,KAAK;EACF,MAAMC,cAAc,GAAGD,KAAK,CAACC,cAAc,KAAI,MAAMH,mBAAmB,CAAC;IACrEE,KAAK,EAAE,CAAC;EACZ,CAAC,CAAC;EAEF,MAAME,UAAU,GAAG,CACf,GAAGR,CAAC,CAACO,cAAc,CAACE,SAAS,CAAC,CACzBC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,CAC3BC,OAAO,CAAC,CAAC,CACTC,KAAK,CAAC,CAAC,EACZ,GAAGd,CAAC,CAACO,cAAc,CAACQ,OAAO,CAAC,CACvBL,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,CAC3BC,OAAO,CAAC,CAAC,CACTC,KAAK,CAAC,CAAC,CACf;EACD,MAAME,QAAQ,GAAG,MAAMd,gBAAgB,CAAC;IACpCe,MAAM,EAAE;MACJC,IAAI,EAAEf,SAAS,CAACgB,IAAI;MACpBC,KAAK,EAAEjB,SAAS,CAACgB,IAAI;MACrBE,KAAK,EAAE;IACX,CAAC;IACDC,eAAe,EAAEA,CAAC;MAACC;IAAG,CAAC,MAAM;MACzBC,OAAO,EAAED,GAAG,CAACE,QAAQ;MACrBC,KAAK,EAAEH,GAAG,CAACG,KAAK;MAChBC,OAAO,EAAEJ,GAAG,CAACK,QAAQ,GAAG,IAAI;MAC5BC,MAAM,EAAErB,UAAU,CAACsB,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACE,EAAE,KAAKR,GAAG,CAACS,SAAS;IACjE,CAAC;EACL,CAAC,CAAC;EAEF,OAAOhB,QAAQ;AACnB,CAAC;AAEDiB,MAAM,CAACC,OAAO,GAAG7B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}