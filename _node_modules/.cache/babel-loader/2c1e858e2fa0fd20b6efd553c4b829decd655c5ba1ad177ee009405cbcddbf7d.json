{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WaxSigningApi = void 0;\nconst eosjs_ecc_migration_1 = require(\"eosjs/dist/eosjs-ecc-migration\");\nconst helpers_1 = require(\"./helpers\");\nconst version_1 = require(\"./version\");\nconst WaxEventSource_1 = require(\"./WaxEventSource\");\nfunction getCurrentTime() {\n  return Math.floor(new Date().getTime());\n}\nclass WaxSigningApi {\n  constructor(waxSigningURL, waxAutoSigningURL, rpc, metricURL, returnTempAccount) {\n    this.waxSigningURL = waxSigningURL;\n    this.waxAutoSigningURL = waxAutoSigningURL;\n    this.rpc = rpc;\n    this.metricURL = metricURL;\n    this.returnTempAccount = returnTempAccount;\n    this.nonce = \"\";\n    this.waxEventSource = new WaxEventSource_1.WaxEventSource(waxSigningURL);\n    this.metricURL = metricURL;\n    this.returnTempAccount = returnTempAccount;\n    this.rpc = rpc;\n  }\n  logout() {\n    this.user = null;\n  }\n  login(nonce) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.user) {\n        this.nonce = nonce;\n        yield this.loginViaWindow();\n      }\n      if (this.user) {\n        return this.user;\n      }\n      throw new Error(\"Login failed\");\n    });\n  }\n  tryAutologin() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.user) {\n        return true;\n      }\n      try {\n        yield this.loginViaEndpoint();\n        return true;\n      } catch (e) {\n        return false;\n      }\n    });\n  }\n  prepareTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.canAutoSign(transaction)) {\n        this.signingWindow = yield this.waxEventSource.openPopup(`${this.waxSigningURL}/cloud-wallet/signing/`);\n      }\n    });\n  }\n  metricLog(name, value = 0, tags = []) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (this.metricURL !== \"\") {\n          yield fetch(this.metricURL, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              name,\n              value,\n              tags\n            })\n          });\n        }\n      } catch (e) {\n        console.debug(e);\n        // do nothing\n      }\n    });\n  }\n\n  signing(transaction, serializedTransaction, noModify = false, feeFallback = true) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.canAutoSign(transaction)) {\n        try {\n          const startTime = getCurrentTime();\n          const res = yield this.signViaEndpoint(serializedTransaction, noModify, feeFallback);\n          yield this.metricLog(\"waxjs.metric.auto_signing\", getCurrentTime() - startTime, []);\n          return res;\n        } catch (_a) {\n          // handle by continuing\n        }\n      }\n      return yield this.signViaWindow(serializedTransaction, this.signingWindow, noModify, feeFallback);\n    });\n  }\n  proofWindow(nonce, type, description) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const verifyUrl = `${this.waxSigningURL}/cloud-wallet/verify`;\n      const referWindow = yield this.waxEventSource.openEventSource(verifyUrl, {\n        type: \"VERIFY\",\n        nonce,\n        proof_type: type,\n        description\n      });\n      return this.waxEventSource.onceEvent(referWindow, this.waxSigningURL, this.receiveVerfication.bind(this), undefined);\n    });\n  }\n  loginViaWindow() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = new URL(`${this.waxSigningURL}/cloud-wallet/login`);\n      if (this.returnTempAccount) {\n        url.searchParams.append(\"returnTemp\", \"true\");\n      }\n      if (version_1.version) {\n        url.searchParams.append(\"v\", Buffer.from(version_1.version).toString(\"base64\"));\n      }\n      if (this.nonce) {\n        url.searchParams.append(\"n\", Buffer.from(this.nonce).toString(\"base64\"));\n      }\n      const confirmationWindow = yield this.waxEventSource.openEventSource(url.toString());\n      return this.waxEventSource.onceEvent(confirmationWindow, this.waxSigningURL, this.receiveLogin.bind(this), undefined);\n    });\n  }\n  loginViaEndpoint() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = new URL(`${this.waxAutoSigningURL}login`);\n      if (this.returnTempAccount) {\n        url.search = \"returnTemp=true\";\n      } else {\n        url.search = \"\";\n      }\n      const response = yield fetch(url.toString(), {\n        credentials: \"include\",\n        method: \"get\"\n      });\n      if (!response.ok) {\n        throw new Error(`Login Endpoint Error ${response.status} ${response.statusText}`);\n      }\n      const data = yield response.json();\n      if (data.processed && data.processed.except) {\n        throw new Error(data);\n      }\n      return this.receiveLogin({\n        data\n      });\n    });\n  }\n  signViaEndpoint(serializedTransaction, noModify = false, feeFallback = true) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const controller = new AbortController();\n      setTimeout(() => controller.abort(), 5000);\n      const response = yield fetch(`${this.waxAutoSigningURL}signing`, {\n        body: JSON.stringify({\n          freeBandwidth: !noModify,\n          feeFallback,\n          transaction: Object.values(serializedTransaction)\n        }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        signal: controller.signal\n      });\n      if (!response.ok) {\n        this.whitelistedContracts = [];\n        throw new Error(`Signing Endpoint Error ${response.status} ${response.statusText}`);\n      }\n      const data = yield response.json();\n      if (data.processed && data.processed.except) {\n        this.whitelistedContracts = [];\n        throw new Error(`Error returned from signing endpoint: ${JSON.stringify(data)}`);\n      }\n      return this.receiveSignatures({\n        data\n      });\n    });\n  }\n  receiveVerfication(event) {\n    if (event.data.type === \"DENY\") {\n      throw new Error(\"User Denied Verification\");\n    }\n    return Object.assign({}, event.data);\n  }\n  signViaWindow(serializedTransaction, window, noModify = false, feeFallback = true) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const startTime = getCurrentTime();\n      const confirmationWindow = yield this.waxEventSource.openEventSource(`${this.waxSigningURL}/cloud-wallet/signing/`, {\n        startTime,\n        feeFallback,\n        freeBandwidth: !noModify,\n        transaction: serializedTransaction,\n        type: \"TRANSACTION\"\n      }, window);\n      return this.waxEventSource.onceEvent(confirmationWindow, this.waxSigningURL, this.receiveSignatures.bind(this), \"TX_SIGNED\");\n    });\n  }\n  receiveLogin(event) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        verified,\n        userAccount,\n        pubKeys,\n        whitelistedContracts,\n        isTemp,\n        createData,\n        avatar_url: avatarUrl,\n        trustScore,\n        proof\n      } = event.data;\n      let isProofVerified = false;\n      if (!verified) {\n        throw new Error(\"User declined to share their user account\");\n      }\n      if (!userAccount || !pubKeys) {\n        throw new Error(\"User does not have a blockchain account\");\n      }\n      if ((proof === null || proof === void 0 ? void 0 : proof.verified) && this.nonce) {\n        // handle proof logic\n        const message = `cloudwallet-verification-${proof.data.referer}-${this.nonce}-${userAccount}`;\n        isProofVerified = eosjs_ecc_migration_1.ecc.verify(proof.data.signature, message, yield (0, helpers_1.getProofWaxRequiredKeys)(this.rpc.endpoint));\n      }\n      this.whitelistedContracts = whitelistedContracts || [];\n      this.user = {\n        account: userAccount,\n        keys: pubKeys,\n        isTemp,\n        createData,\n        avatarUrl,\n        trustScore,\n        isProofVerified\n      };\n      return true;\n    });\n  }\n  receiveSignatures(event) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (event.data.type === \"TX_SIGNED\") {\n        const {\n          verified,\n          signatures,\n          whitelistedContracts,\n          serializedTransaction,\n          startTime\n        } = event.data;\n        if (!verified || !signatures) {\n          throw new Error(\"User declined to sign the transaction\");\n        }\n        this.whitelistedContracts = whitelistedContracts || [];\n        if (startTime && startTime > 0) {\n          this.metricLog(\"waxjs.metric.manual_sign_transaction_time\", getCurrentTime() - startTime, []);\n        }\n        return {\n          serializedTransaction,\n          signatures\n        };\n      }\n      throw new Error(`Unexpected response received when attempting signing: ${JSON.stringify(event.data)}`);\n    });\n  }\n  canAutoSign(transaction) {\n    const ua = navigator.userAgent.toLowerCase();\n    if (ua.search(\"chrome\") === -1 && ua.search(\"safari\") >= 0) {\n      return false;\n    }\n    return !transaction.actions.find(action => !this.isWhitelisted(action));\n  }\n  isWhitelisted(action) {\n    return !!(this.whitelistedContracts && !!this.whitelistedContracts.find(w => {\n      if (w.contract === action.account) {\n        if (action.account === \"eosio.token\" && action.name === \"transfer\") {\n          return w.recipients.includes(action.data.to);\n        }\n        return true;\n      }\n      return false;\n    }));\n  }\n}\nexports.WaxSigningApi = WaxSigningApi;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","WaxSigningApi","eosjs_ecc_migration_1","require","helpers_1","version_1","WaxEventSource_1","getCurrentTime","Math","floor","Date","getTime","constructor","waxSigningURL","waxAutoSigningURL","rpc","metricURL","returnTempAccount","nonce","waxEventSource","WaxEventSource","logout","user","login","loginViaWindow","Error","tryAutologin","loginViaEndpoint","prepareTransaction","transaction","canAutoSign","signingWindow","openPopup","metricLog","name","tags","fetch","method","headers","Accept","body","JSON","stringify","console","debug","signing","serializedTransaction","noModify","feeFallback","startTime","res","signViaEndpoint","_a","signViaWindow","proofWindow","type","description","verifyUrl","referWindow","openEventSource","proof_type","onceEvent","receiveVerfication","bind","undefined","url","URL","searchParams","append","version","Buffer","from","toString","confirmationWindow","receiveLogin","search","response","credentials","ok","status","statusText","data","json","processed","except","controller","AbortController","setTimeout","abort","freeBandwidth","values","signal","whitelistedContracts","receiveSignatures","event","assign","window","verified","userAccount","pubKeys","isTemp","createData","avatar_url","avatarUrl","trustScore","proof","isProofVerified","message","referer","ecc","verify","signature","getProofWaxRequiredKeys","endpoint","account","keys","signatures","ua","navigator","userAgent","toLowerCase","actions","find","action","isWhitelisted","w","contract","recipients","includes","to"],"sources":["/Users/germangurov/projects/wax_bot/node_modules/@waxio/waxjs/dist/WaxSigningApi.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WaxSigningApi = void 0;\nconst eosjs_ecc_migration_1 = require(\"eosjs/dist/eosjs-ecc-migration\");\nconst helpers_1 = require(\"./helpers\");\nconst version_1 = require(\"./version\");\nconst WaxEventSource_1 = require(\"./WaxEventSource\");\nfunction getCurrentTime() {\n    return Math.floor(new Date().getTime());\n}\nclass WaxSigningApi {\n    constructor(waxSigningURL, waxAutoSigningURL, rpc, metricURL, returnTempAccount) {\n        this.waxSigningURL = waxSigningURL;\n        this.waxAutoSigningURL = waxAutoSigningURL;\n        this.rpc = rpc;\n        this.metricURL = metricURL;\n        this.returnTempAccount = returnTempAccount;\n        this.nonce = \"\";\n        this.waxEventSource = new WaxEventSource_1.WaxEventSource(waxSigningURL);\n        this.metricURL = metricURL;\n        this.returnTempAccount = returnTempAccount;\n        this.rpc = rpc;\n    }\n    logout() {\n        this.user = null;\n    }\n    login(nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.user) {\n                this.nonce = nonce;\n                yield this.loginViaWindow();\n            }\n            if (this.user) {\n                return this.user;\n            }\n            throw new Error(\"Login failed\");\n        });\n    }\n    tryAutologin() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.user) {\n                return true;\n            }\n            try {\n                yield this.loginViaEndpoint();\n                return true;\n            }\n            catch (e) {\n                return false;\n            }\n        });\n    }\n    prepareTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.canAutoSign(transaction)) {\n                this.signingWindow = yield this.waxEventSource.openPopup(`${this.waxSigningURL}/cloud-wallet/signing/`);\n            }\n        });\n    }\n    metricLog(name, value = 0, tags = []) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.metricURL !== \"\") {\n                    yield fetch(this.metricURL, {\n                        method: \"POST\",\n                        headers: {\n                            Accept: \"application/json\",\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({ name, value, tags }),\n                    });\n                }\n            }\n            catch (e) {\n                console.debug(e);\n                // do nothing\n            }\n        });\n    }\n    signing(transaction, serializedTransaction, noModify = false, feeFallback = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.canAutoSign(transaction)) {\n                try {\n                    const startTime = getCurrentTime();\n                    const res = yield this.signViaEndpoint(serializedTransaction, noModify, feeFallback);\n                    yield this.metricLog(\"waxjs.metric.auto_signing\", getCurrentTime() - startTime, []);\n                    return res;\n                }\n                catch (_a) {\n                    // handle by continuing\n                }\n            }\n            return yield this.signViaWindow(serializedTransaction, this.signingWindow, noModify, feeFallback);\n        });\n    }\n    proofWindow(nonce, type, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const verifyUrl = `${this.waxSigningURL}/cloud-wallet/verify`;\n            const referWindow = yield this.waxEventSource.openEventSource(verifyUrl, {\n                type: \"VERIFY\",\n                nonce,\n                proof_type: type,\n                description,\n            });\n            return this.waxEventSource.onceEvent(referWindow, this.waxSigningURL, this.receiveVerfication.bind(this), undefined);\n        });\n    }\n    loginViaWindow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = new URL(`${this.waxSigningURL}/cloud-wallet/login`);\n            if (this.returnTempAccount) {\n                url.searchParams.append(\"returnTemp\", \"true\");\n            }\n            if (version_1.version) {\n                url.searchParams.append(\"v\", Buffer.from(version_1.version).toString(\"base64\"));\n            }\n            if (this.nonce) {\n                url.searchParams.append(\"n\", Buffer.from(this.nonce).toString(\"base64\"));\n            }\n            const confirmationWindow = yield this.waxEventSource.openEventSource(url.toString());\n            return this.waxEventSource.onceEvent(confirmationWindow, this.waxSigningURL, this.receiveLogin.bind(this), undefined);\n        });\n    }\n    loginViaEndpoint() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = new URL(`${this.waxAutoSigningURL}login`);\n            if (this.returnTempAccount) {\n                url.search = \"returnTemp=true\";\n            }\n            else {\n                url.search = \"\";\n            }\n            const response = yield fetch(url.toString(), {\n                credentials: \"include\",\n                method: \"get\",\n            });\n            if (!response.ok) {\n                throw new Error(`Login Endpoint Error ${response.status} ${response.statusText}`);\n            }\n            const data = yield response.json();\n            if (data.processed && data.processed.except) {\n                throw new Error(data);\n            }\n            return this.receiveLogin({ data });\n        });\n    }\n    signViaEndpoint(serializedTransaction, noModify = false, feeFallback = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = new AbortController();\n            setTimeout(() => controller.abort(), 5000);\n            const response = yield fetch(`${this.waxAutoSigningURL}signing`, {\n                body: JSON.stringify({\n                    freeBandwidth: !noModify,\n                    feeFallback,\n                    transaction: Object.values(serializedTransaction),\n                }),\n                credentials: \"include\",\n                headers: { \"Content-Type\": \"application/json\" },\n                method: \"POST\",\n                signal: controller.signal,\n            });\n            if (!response.ok) {\n                this.whitelistedContracts = [];\n                throw new Error(`Signing Endpoint Error ${response.status} ${response.statusText}`);\n            }\n            const data = yield response.json();\n            if (data.processed && data.processed.except) {\n                this.whitelistedContracts = [];\n                throw new Error(`Error returned from signing endpoint: ${JSON.stringify(data)}`);\n            }\n            return this.receiveSignatures({ data });\n        });\n    }\n    receiveVerfication(event) {\n        if (event.data.type === \"DENY\") {\n            throw new Error(\"User Denied Verification\");\n        }\n        return Object.assign({}, event.data);\n    }\n    signViaWindow(serializedTransaction, window, noModify = false, feeFallback = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const startTime = getCurrentTime();\n            const confirmationWindow = yield this.waxEventSource.openEventSource(`${this.waxSigningURL}/cloud-wallet/signing/`, {\n                startTime,\n                feeFallback,\n                freeBandwidth: !noModify,\n                transaction: serializedTransaction,\n                type: \"TRANSACTION\",\n            }, window);\n            return this.waxEventSource.onceEvent(confirmationWindow, this.waxSigningURL, this.receiveSignatures.bind(this), \"TX_SIGNED\");\n        });\n    }\n    receiveLogin(event) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { verified, userAccount, pubKeys, whitelistedContracts, isTemp, createData, avatar_url: avatarUrl, trustScore, proof, } = event.data;\n            let isProofVerified = false;\n            if (!verified) {\n                throw new Error(\"User declined to share their user account\");\n            }\n            if (!userAccount || !pubKeys) {\n                throw new Error(\"User does not have a blockchain account\");\n            }\n            if ((proof === null || proof === void 0 ? void 0 : proof.verified) && this.nonce) {\n                // handle proof logic\n                const message = `cloudwallet-verification-${proof.data.referer}-${this.nonce}-${userAccount}`;\n                isProofVerified = eosjs_ecc_migration_1.ecc.verify(proof.data.signature, message, yield (0, helpers_1.getProofWaxRequiredKeys)(this.rpc.endpoint));\n            }\n            this.whitelistedContracts = whitelistedContracts || [];\n            this.user = {\n                account: userAccount,\n                keys: pubKeys,\n                isTemp,\n                createData,\n                avatarUrl,\n                trustScore,\n                isProofVerified,\n            };\n            return true;\n        });\n    }\n    receiveSignatures(event) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (event.data.type === \"TX_SIGNED\") {\n                const { verified, signatures, whitelistedContracts, serializedTransaction, startTime, } = event.data;\n                if (!verified || !signatures) {\n                    throw new Error(\"User declined to sign the transaction\");\n                }\n                this.whitelistedContracts = whitelistedContracts || [];\n                if (startTime && startTime > 0) {\n                    this.metricLog(\"waxjs.metric.manual_sign_transaction_time\", getCurrentTime() - startTime, []);\n                }\n                return { serializedTransaction, signatures };\n            }\n            throw new Error(`Unexpected response received when attempting signing: ${JSON.stringify(event.data)}`);\n        });\n    }\n    canAutoSign(transaction) {\n        const ua = navigator.userAgent.toLowerCase();\n        if (ua.search(\"chrome\") === -1 && ua.search(\"safari\") >= 0) {\n            return false;\n        }\n        return !transaction.actions.find((action) => !this.isWhitelisted(action));\n    }\n    isWhitelisted(action) {\n        return !!(this.whitelistedContracts &&\n            !!this.whitelistedContracts.find((w) => {\n                if (w.contract === action.account) {\n                    if (action.account === \"eosio.token\" && action.name === \"transfer\") {\n                        return w.recipients.includes(action.data.to);\n                    }\n                    return true;\n                }\n                return false;\n            }));\n    }\n}\nexports.WaxSigningApi = WaxSigningApi;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,SAASC,KAAKA,CAACC,KAAK,EAAE;IAAE,OAAOA,KAAK,YAAYH,CAAC,GAAGG,KAAK,GAAG,IAAIH,CAAC,CAAC,UAAUI,OAAO,EAAE;MAAEA,OAAO,CAACD,KAAK,CAAC;IAAE,CAAC,CAAC;EAAE;EAC3G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAO,CAAC,EAAE,UAAUD,OAAO,EAAEE,MAAM,EAAE;IACvD,SAASC,SAASA,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACN,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQA,CAACR,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAO,CAAC,CAACE,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAIA,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACT,KAAK,CAAC,GAAGD,KAAK,CAACU,MAAM,CAACT,KAAK,CAAC,CAACW,IAAI,CAACP,SAAS,EAAEI,QAAQ,CAAC;IAAE;IAC7GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAK,CAACjB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAEU,IAAI,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACDO,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEf,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7De,OAAO,CAACC,aAAa,GAAG,KAAK,CAAC;AAC9B,MAAMC,qBAAqB,GAAGC,OAAO,CAAC,gCAAgC,CAAC;AACvE,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACtC,MAAME,SAAS,GAAGF,OAAO,CAAC,WAAW,CAAC;AACtC,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AACpD,SAASI,cAAcA,CAAA,EAAG;EACtB,OAAOC,IAAI,CAACC,KAAK,CAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;AAC3C;AACA,MAAMV,aAAa,CAAC;EAChBW,WAAWA,CAACC,aAAa,EAAEC,iBAAiB,EAAEC,GAAG,EAAEC,SAAS,EAAEC,iBAAiB,EAAE;IAC7E,IAAI,CAACJ,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,cAAc,GAAG,IAAIb,gBAAgB,CAACc,cAAc,CAACP,aAAa,CAAC;IACxE,IAAI,CAACG,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACF,GAAG,GAAGA,GAAG;EAClB;EACAM,MAAMA,CAAA,EAAG;IACL,IAAI,CAACC,IAAI,GAAG,IAAI;EACpB;EACAC,KAAKA,CAACL,KAAK,EAAE;IACT,OAAOvC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,CAAC,IAAI,CAAC2C,IAAI,EAAE;QACZ,IAAI,CAACJ,KAAK,GAAGA,KAAK;QAClB,MAAM,IAAI,CAACM,cAAc,CAAC,CAAC;MAC/B;MACA,IAAI,IAAI,CAACF,IAAI,EAAE;QACX,OAAO,IAAI,CAACA,IAAI;MACpB;MACA,MAAM,IAAIG,KAAK,CAAC,cAAc,CAAC;IACnC,CAAC,CAAC;EACN;EACAC,YAAYA,CAAA,EAAG;IACX,OAAO/C,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,IAAI,CAAC2C,IAAI,EAAE;QACX,OAAO,IAAI;MACf;MACA,IAAI;QACA,MAAM,IAAI,CAACK,gBAAgB,CAAC,CAAC;QAC7B,OAAO,IAAI;MACf,CAAC,CACD,OAAOnC,CAAC,EAAE;QACN,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC;EACN;EACAoC,kBAAkBA,CAACC,WAAW,EAAE;IAC5B,OAAOlD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,CAAC,IAAI,CAACmD,WAAW,CAACD,WAAW,CAAC,EAAE;QAChC,IAAI,CAACE,aAAa,GAAG,MAAM,IAAI,CAACZ,cAAc,CAACa,SAAS,CAAE,GAAE,IAAI,CAACnB,aAAc,wBAAuB,CAAC;MAC3G;IACJ,CAAC,CAAC;EACN;EACAoB,SAASA,CAACC,IAAI,EAAEjD,KAAK,GAAG,CAAC,EAAEkD,IAAI,GAAG,EAAE,EAAE;IAClC,OAAOxD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI;QACA,IAAI,IAAI,CAACqC,SAAS,KAAK,EAAE,EAAE;UACvB,MAAMoB,KAAK,CAAC,IAAI,CAACpB,SAAS,EAAE;YACxBqB,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACLC,MAAM,EAAE,kBAAkB;cAC1B,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAER,IAAI;cAAEjD,KAAK;cAAEkD;YAAK,CAAC;UAC9C,CAAC,CAAC;QACN;MACJ,CAAC,CACD,OAAO3C,CAAC,EAAE;QACNmD,OAAO,CAACC,KAAK,CAACpD,CAAC,CAAC;QAChB;MACJ;IACJ,CAAC,CAAC;EACN;;EACAqD,OAAOA,CAAChB,WAAW,EAAEiB,qBAAqB,EAAEC,QAAQ,GAAG,KAAK,EAAEC,WAAW,GAAG,IAAI,EAAE;IAC9E,OAAOrE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,IAAI,CAACmD,WAAW,CAACD,WAAW,CAAC,EAAE;QAC/B,IAAI;UACA,MAAMoB,SAAS,GAAG1C,cAAc,CAAC,CAAC;UAClC,MAAM2C,GAAG,GAAG,MAAM,IAAI,CAACC,eAAe,CAACL,qBAAqB,EAAEC,QAAQ,EAAEC,WAAW,CAAC;UACpF,MAAM,IAAI,CAACf,SAAS,CAAC,2BAA2B,EAAE1B,cAAc,CAAC,CAAC,GAAG0C,SAAS,EAAE,EAAE,CAAC;UACnF,OAAOC,GAAG;QACd,CAAC,CACD,OAAOE,EAAE,EAAE;UACP;QAAA;MAER;MACA,OAAO,MAAM,IAAI,CAACC,aAAa,CAACP,qBAAqB,EAAE,IAAI,CAACf,aAAa,EAAEgB,QAAQ,EAAEC,WAAW,CAAC;IACrG,CAAC,CAAC;EACN;EACAM,WAAWA,CAACpC,KAAK,EAAEqC,IAAI,EAAEC,WAAW,EAAE;IAClC,OAAO7E,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAM8E,SAAS,GAAI,GAAE,IAAI,CAAC5C,aAAc,sBAAqB;MAC7D,MAAM6C,WAAW,GAAG,MAAM,IAAI,CAACvC,cAAc,CAACwC,eAAe,CAACF,SAAS,EAAE;QACrEF,IAAI,EAAE,QAAQ;QACdrC,KAAK;QACL0C,UAAU,EAAEL,IAAI;QAChBC;MACJ,CAAC,CAAC;MACF,OAAO,IAAI,CAACrC,cAAc,CAAC0C,SAAS,CAACH,WAAW,EAAE,IAAI,CAAC7C,aAAa,EAAE,IAAI,CAACiD,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAAC,EAAEC,SAAS,CAAC;IACxH,CAAC,CAAC;EACN;EACAxC,cAAcA,CAAA,EAAG;IACb,OAAO7C,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAMsF,GAAG,GAAG,IAAIC,GAAG,CAAE,GAAE,IAAI,CAACrD,aAAc,qBAAoB,CAAC;MAC/D,IAAI,IAAI,CAACI,iBAAiB,EAAE;QACxBgD,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC;MACjD;MACA,IAAI/D,SAAS,CAACgE,OAAO,EAAE;QACnBJ,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,GAAG,EAAEE,MAAM,CAACC,IAAI,CAAClE,SAAS,CAACgE,OAAO,CAAC,CAACG,QAAQ,CAAC,QAAQ,CAAC,CAAC;MACnF;MACA,IAAI,IAAI,CAACtD,KAAK,EAAE;QACZ+C,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,GAAG,EAAEE,MAAM,CAACC,IAAI,CAAC,IAAI,CAACrD,KAAK,CAAC,CAACsD,QAAQ,CAAC,QAAQ,CAAC,CAAC;MAC5E;MACA,MAAMC,kBAAkB,GAAG,MAAM,IAAI,CAACtD,cAAc,CAACwC,eAAe,CAACM,GAAG,CAACO,QAAQ,CAAC,CAAC,CAAC;MACpF,OAAO,IAAI,CAACrD,cAAc,CAAC0C,SAAS,CAACY,kBAAkB,EAAE,IAAI,CAAC5D,aAAa,EAAE,IAAI,CAAC6D,YAAY,CAACX,IAAI,CAAC,IAAI,CAAC,EAAEC,SAAS,CAAC;IACzH,CAAC,CAAC;EACN;EACArC,gBAAgBA,CAAA,EAAG;IACf,OAAOhD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAMsF,GAAG,GAAG,IAAIC,GAAG,CAAE,GAAE,IAAI,CAACpD,iBAAkB,OAAM,CAAC;MACrD,IAAI,IAAI,CAACG,iBAAiB,EAAE;QACxBgD,GAAG,CAACU,MAAM,GAAG,iBAAiB;MAClC,CAAC,MACI;QACDV,GAAG,CAACU,MAAM,GAAG,EAAE;MACnB;MACA,MAAMC,QAAQ,GAAG,MAAMxC,KAAK,CAAC6B,GAAG,CAACO,QAAQ,CAAC,CAAC,EAAE;QACzCK,WAAW,EAAE,SAAS;QACtBxC,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,IAAI,CAACuC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIrD,KAAK,CAAE,wBAAuBmD,QAAQ,CAACG,MAAO,IAAGH,QAAQ,CAACI,UAAW,EAAC,CAAC;MACrF;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACE,SAAS,CAACC,MAAM,EAAE;QACzC,MAAM,IAAI3D,KAAK,CAACwD,IAAI,CAAC;MACzB;MACA,OAAO,IAAI,CAACP,YAAY,CAAC;QAAEO;MAAK,CAAC,CAAC;IACtC,CAAC,CAAC;EACN;EACA9B,eAAeA,CAACL,qBAAqB,EAAEC,QAAQ,GAAG,KAAK,EAAEC,WAAW,GAAG,IAAI,EAAE;IACzE,OAAOrE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAM0G,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;MACxCC,UAAU,CAAC,MAAMF,UAAU,CAACG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;MAC1C,MAAMZ,QAAQ,GAAG,MAAMxC,KAAK,CAAE,GAAE,IAAI,CAACtB,iBAAkB,SAAQ,EAAE;QAC7D0B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB+C,aAAa,EAAE,CAAC1C,QAAQ;UACxBC,WAAW;UACXnB,WAAW,EAAE/B,MAAM,CAAC4F,MAAM,CAAC5C,qBAAqB;QACpD,CAAC,CAAC;QACF+B,WAAW,EAAE,SAAS;QACtBvC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CD,MAAM,EAAE,MAAM;QACdsD,MAAM,EAAEN,UAAU,CAACM;MACvB,CAAC,CAAC;MACF,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE;QACd,IAAI,CAACc,oBAAoB,GAAG,EAAE;QAC9B,MAAM,IAAInE,KAAK,CAAE,0BAAyBmD,QAAQ,CAACG,MAAO,IAAGH,QAAQ,CAACI,UAAW,EAAC,CAAC;MACvF;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACE,SAAS,CAACC,MAAM,EAAE;QACzC,IAAI,CAACQ,oBAAoB,GAAG,EAAE;QAC9B,MAAM,IAAInE,KAAK,CAAE,yCAAwCgB,IAAI,CAACC,SAAS,CAACuC,IAAI,CAAE,EAAC,CAAC;MACpF;MACA,OAAO,IAAI,CAACY,iBAAiB,CAAC;QAAEZ;MAAK,CAAC,CAAC;IAC3C,CAAC,CAAC;EACN;EACAnB,kBAAkBA,CAACgC,KAAK,EAAE;IACtB,IAAIA,KAAK,CAACb,IAAI,CAAC1B,IAAI,KAAK,MAAM,EAAE;MAC5B,MAAM,IAAI9B,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IACA,OAAO3B,MAAM,CAACiG,MAAM,CAAC,CAAC,CAAC,EAAED,KAAK,CAACb,IAAI,CAAC;EACxC;EACA5B,aAAaA,CAACP,qBAAqB,EAAEkD,MAAM,EAAEjD,QAAQ,GAAG,KAAK,EAAEC,WAAW,GAAG,IAAI,EAAE;IAC/E,OAAOrE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAMsE,SAAS,GAAG1C,cAAc,CAAC,CAAC;MAClC,MAAMkE,kBAAkB,GAAG,MAAM,IAAI,CAACtD,cAAc,CAACwC,eAAe,CAAE,GAAE,IAAI,CAAC9C,aAAc,wBAAuB,EAAE;QAChHoC,SAAS;QACTD,WAAW;QACXyC,aAAa,EAAE,CAAC1C,QAAQ;QACxBlB,WAAW,EAAEiB,qBAAqB;QAClCS,IAAI,EAAE;MACV,CAAC,EAAEyC,MAAM,CAAC;MACV,OAAO,IAAI,CAAC7E,cAAc,CAAC0C,SAAS,CAACY,kBAAkB,EAAE,IAAI,CAAC5D,aAAa,EAAE,IAAI,CAACgF,iBAAiB,CAAC9B,IAAI,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC;IAChI,CAAC,CAAC;EACN;EACAW,YAAYA,CAACoB,KAAK,EAAE;IAChB,OAAOnH,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAM;QAAEsH,QAAQ;QAAEC,WAAW;QAAEC,OAAO;QAAEP,oBAAoB;QAAEQ,MAAM;QAAEC,UAAU;QAAEC,UAAU,EAAEC,SAAS;QAAEC,UAAU;QAAEC;MAAO,CAAC,GAAGX,KAAK,CAACb,IAAI;MAC1I,IAAIyB,eAAe,GAAG,KAAK;MAC3B,IAAI,CAACT,QAAQ,EAAE;QACX,MAAM,IAAIxE,KAAK,CAAC,2CAA2C,CAAC;MAChE;MACA,IAAI,CAACyE,WAAW,IAAI,CAACC,OAAO,EAAE;QAC1B,MAAM,IAAI1E,KAAK,CAAC,yCAAyC,CAAC;MAC9D;MACA,IAAI,CAACgF,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACR,QAAQ,KAAK,IAAI,CAAC/E,KAAK,EAAE;QAC9E;QACA,MAAMyF,OAAO,GAAI,4BAA2BF,KAAK,CAACxB,IAAI,CAAC2B,OAAQ,IAAG,IAAI,CAAC1F,KAAM,IAAGgF,WAAY,EAAC;QAC7FQ,eAAe,GAAGxG,qBAAqB,CAAC2G,GAAG,CAACC,MAAM,CAACL,KAAK,CAACxB,IAAI,CAAC8B,SAAS,EAAEJ,OAAO,EAAE,MAAM,CAAC,CAAC,EAAEvG,SAAS,CAAC4G,uBAAuB,EAAE,IAAI,CAACjG,GAAG,CAACkG,QAAQ,CAAC,CAAC;MACtJ;MACA,IAAI,CAACrB,oBAAoB,GAAGA,oBAAoB,IAAI,EAAE;MACtD,IAAI,CAACtE,IAAI,GAAG;QACR4F,OAAO,EAAEhB,WAAW;QACpBiB,IAAI,EAAEhB,OAAO;QACbC,MAAM;QACNC,UAAU;QACVE,SAAS;QACTC,UAAU;QACVE;MACJ,CAAC;MACD,OAAO,IAAI;IACf,CAAC,CAAC;EACN;EACAb,iBAAiBA,CAACC,KAAK,EAAE;IACrB,OAAOnH,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAImH,KAAK,CAACb,IAAI,CAAC1B,IAAI,KAAK,WAAW,EAAE;QACjC,MAAM;UAAE0C,QAAQ;UAAEmB,UAAU;UAAExB,oBAAoB;UAAE9C,qBAAqB;UAAEG;QAAW,CAAC,GAAG6C,KAAK,CAACb,IAAI;QACpG,IAAI,CAACgB,QAAQ,IAAI,CAACmB,UAAU,EAAE;UAC1B,MAAM,IAAI3F,KAAK,CAAC,uCAAuC,CAAC;QAC5D;QACA,IAAI,CAACmE,oBAAoB,GAAGA,oBAAoB,IAAI,EAAE;QACtD,IAAI3C,SAAS,IAAIA,SAAS,GAAG,CAAC,EAAE;UAC5B,IAAI,CAAChB,SAAS,CAAC,2CAA2C,EAAE1B,cAAc,CAAC,CAAC,GAAG0C,SAAS,EAAE,EAAE,CAAC;QACjG;QACA,OAAO;UAAEH,qBAAqB;UAAEsE;QAAW,CAAC;MAChD;MACA,MAAM,IAAI3F,KAAK,CAAE,yDAAwDgB,IAAI,CAACC,SAAS,CAACoD,KAAK,CAACb,IAAI,CAAE,EAAC,CAAC;IAC1G,CAAC,CAAC;EACN;EACAnD,WAAWA,CAACD,WAAW,EAAE;IACrB,MAAMwF,EAAE,GAAGC,SAAS,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC;IAC5C,IAAIH,EAAE,CAAC1C,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI0C,EAAE,CAAC1C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;MACxD,OAAO,KAAK;IAChB;IACA,OAAO,CAAC9C,WAAW,CAAC4F,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAK,CAAC,IAAI,CAACC,aAAa,CAACD,MAAM,CAAC,CAAC;EAC7E;EACAC,aAAaA,CAACD,MAAM,EAAE;IAClB,OAAO,CAAC,EAAE,IAAI,CAAC/B,oBAAoB,IAC/B,CAAC,CAAC,IAAI,CAACA,oBAAoB,CAAC8B,IAAI,CAAEG,CAAC,IAAK;MACpC,IAAIA,CAAC,CAACC,QAAQ,KAAKH,MAAM,CAACT,OAAO,EAAE;QAC/B,IAAIS,MAAM,CAACT,OAAO,KAAK,aAAa,IAAIS,MAAM,CAACzF,IAAI,KAAK,UAAU,EAAE;UAChE,OAAO2F,CAAC,CAACE,UAAU,CAACC,QAAQ,CAACL,MAAM,CAAC1C,IAAI,CAACgD,EAAE,CAAC;QAChD;QACA,OAAO,IAAI;MACf;MACA,OAAO,KAAK;IAChB,CAAC,CAAC,CAAC;EACX;AACJ;AACAjI,OAAO,CAACC,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}