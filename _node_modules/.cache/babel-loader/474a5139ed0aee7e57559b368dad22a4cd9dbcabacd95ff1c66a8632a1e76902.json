{"ast":null,"code":"const fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchExchange = async () => {\n  const exchange = await fetchAllWaxData2({\n    params: {\n      code: CONTRACTS.EXCHANGE,\n      scope: CONTRACTS.EXCHANGE,\n      table: \"exchange\"\n    },\n    customProcessor: ({\n      row\n    }) => ({\n      id: row.id,\n      from: row.from,\n      to: row.to,\n      rate: Number(row.rate),\n      min: Number(row.min)\n    })\n  });\n  return exchange;\n};\nmodule.exports = fetchExchange;","map":{"version":3,"names":["fetchAllWaxData2","require","CONTRACTS","fetchExchange","exchange","params","code","EXCHANGE","scope","table","customProcessor","row","id","from","to","rate","Number","min","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novopangea/api/fetchExchange.js"],"sourcesContent":["const fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst CONTRACTS = require('../consts/CONTRACTS');\n\n\nconst fetchExchange = async () => {\n    const exchange = await fetchAllWaxData2({\n        params: {\n            code: CONTRACTS.EXCHANGE,\n            scope: CONTRACTS.EXCHANGE,\n            table: \"exchange\",\n        },\n        customProcessor: ({row}) => ({\n            id: row.id,\n            from: row.from,\n            to: row.to,\n            rate: Number(row.rate),\n            min: Number(row.min),\n        }),\n    });\n\n    return exchange;\n};\n\nmodule.exports = fetchExchange;"],"mappings":"AAAA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,6BAA6B,CAAC;AAC/D,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAGhD,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMC,QAAQ,GAAG,MAAMJ,gBAAgB,CAAC;IACpCK,MAAM,EAAE;MACJC,IAAI,EAAEJ,SAAS,CAACK,QAAQ;MACxBC,KAAK,EAAEN,SAAS,CAACK,QAAQ;MACzBE,KAAK,EAAE;IACX,CAAC;IACDC,eAAe,EAAEA,CAAC;MAACC;IAAG,CAAC,MAAM;MACzBC,EAAE,EAAED,GAAG,CAACC,EAAE;MACVC,IAAI,EAAEF,GAAG,CAACE,IAAI;MACdC,EAAE,EAAEH,GAAG,CAACG,EAAE;MACVC,IAAI,EAAEC,MAAM,CAACL,GAAG,CAACI,IAAI,CAAC;MACtBE,GAAG,EAAED,MAAM,CAACL,GAAG,CAACM,GAAG;IACvB,CAAC;EACL,CAAC,CAAC;EAEF,OAAOb,QAAQ;AACnB,CAAC;AAEDc,MAAM,CAACC,OAAO,GAAGhB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}