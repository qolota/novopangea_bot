{"ast":null,"code":"\"use strict\";\n\n/**\n * @module API\n */\n// copyright defined in eosjs/LICENSE.txt\n/* eslint-disable max-classes-per-file */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActionBuilder = exports.TransactionBuilder = exports.Api = void 0;\nvar pako_1 = require(\"pako\");\nvar ser = require(\"./eosjs-serialize\");\nvar Api = /** @class */function () {\n  /**\n   * @param args\n   * * `rpc`: Issues RPC calls\n   * * `authorityProvider`: Get public keys needed to meet authorities in a transaction\n   * * `abiProvider`: Supplies ABIs in raw form (binary)\n   * * `signatureProvider`: Signs transactions\n   * * `chainId`: Identifies chain\n   * * `textEncoder`: `TextEncoder` instance to use. Pass in `null` if running in a browser\n   * * `textDecoder`: `TextDecoder` instance to use. Pass in `null` if running in a browser\n   */\n  function Api(args) {\n    /** Holds information needed to serialize contract actions */\n    this.contracts = new Map();\n    /** Fetched abis */\n    this.cachedAbis = new Map();\n    this.transactionExtensions = [{\n      id: 1,\n      type: 'resource_payer',\n      keys: ['payer', 'max_net_bytes', 'max_cpu_us', 'max_memory_bytes']\n    }];\n    this.rpc = args.rpc;\n    this.authorityProvider = args.authorityProvider || args.rpc;\n    this.abiProvider = args.abiProvider || args.rpc;\n    this.signatureProvider = args.signatureProvider;\n    this.chainId = args.chainId;\n    this.textEncoder = args.textEncoder;\n    this.textDecoder = args.textDecoder;\n    this.abiTypes = ser.getTypesFromAbi(ser.createAbiTypes());\n    this.transactionTypes = ser.getTypesFromAbi(ser.createTransactionTypes());\n  }\n  /** Decodes an abi as Uint8Array into json. */\n  Api.prototype.rawAbiToJson = function (rawAbi) {\n    var buffer = new ser.SerialBuffer({\n      textEncoder: this.textEncoder,\n      textDecoder: this.textDecoder,\n      array: rawAbi\n    });\n    if (!ser.supportedAbiVersion(buffer.getString())) {\n      throw new Error('Unsupported abi version');\n    }\n    buffer.restartRead();\n    return this.abiTypes.get('abi_def').deserialize(buffer);\n  };\n  /** Encodes a json abi as Uint8Array. */\n  Api.prototype.jsonToRawAbi = function (jsonAbi) {\n    var buffer = new ser.SerialBuffer({\n      textEncoder: this.textEncoder,\n      textDecoder: this.textDecoder\n    });\n    this.abiTypes.get('abi_def').serialize(buffer, jsonAbi);\n    if (!ser.supportedAbiVersion(buffer.getString())) {\n      throw new Error('Unsupported abi version');\n    }\n    return buffer.asUint8Array();\n  };\n  /** Get abi in both binary and structured forms. Fetch when needed. */\n  Api.prototype.getCachedAbi = function (accountName, reload) {\n    if (reload === void 0) {\n      reload = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var cachedAbi, rawAbi, abi, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!reload && this.cachedAbis.get(accountName)) {\n              return [2 /*return*/, this.cachedAbis.get(accountName)];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.abiProvider.getRawAbi(accountName)];\n          case 2:\n            rawAbi = _a.sent().abi;\n            abi = this.rawAbiToJson(rawAbi);\n            cachedAbi = {\n              rawAbi: rawAbi,\n              abi: abi\n            };\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _a.sent();\n            e_1.message = \"fetching abi for \" + accountName + \": \" + e_1.message;\n            throw e_1;\n          case 4:\n            if (!cachedAbi) {\n              throw new Error(\"Missing abi for \" + accountName);\n            }\n            this.cachedAbis.set(accountName, cachedAbi);\n            return [2 /*return*/, cachedAbi];\n        }\n      });\n    });\n  };\n  /** Get abi in structured form. Fetch when needed. */\n  Api.prototype.getAbi = function (accountName, reload) {\n    if (reload === void 0) {\n      reload = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getCachedAbi(accountName, reload)];\n          case 1:\n            return [2 /*return*/, _a.sent().abi];\n        }\n      });\n    });\n  };\n  /** Get abis needed by a transaction */\n  Api.prototype.getTransactionAbis = function (transaction, reload) {\n    if (reload === void 0) {\n      reload = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var actions, accounts, uniqueAccounts, actionPromises;\n      var _this = this;\n      return __generator(this, function (_a) {\n        actions = (transaction.context_free_actions || []).concat(transaction.actions);\n        accounts = actions.map(function (action) {\n          return action.account;\n        });\n        uniqueAccounts = new Set(accounts);\n        actionPromises = __spreadArray([], __read(uniqueAccounts)).map(function (account) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n              switch (_b.label) {\n                case 0:\n                  _a = {\n                    accountName: account\n                  };\n                  return [4 /*yield*/, this.getCachedAbi(account, reload)];\n                case 1:\n                  return [2 /*return*/, (_a.abi = _b.sent().rawAbi, _a)];\n              }\n            });\n          });\n        });\n        return [2 /*return*/, Promise.all(actionPromises)];\n      });\n    });\n  };\n  /** Get data needed to serialize actions in a contract */\n  Api.prototype.getContract = function (accountName, reload) {\n    if (reload === void 0) {\n      reload = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var abi, types, actions, _a, _b, _c, name_1, type, result;\n      var e_2, _d;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            if (!reload && this.contracts.get(accountName)) {\n              return [2 /*return*/, this.contracts.get(accountName)];\n            }\n            return [4 /*yield*/, this.getAbi(accountName, reload)];\n          case 1:\n            abi = _e.sent();\n            types = ser.getTypesFromAbi(ser.createInitialTypes(), abi);\n            actions = new Map();\n            try {\n              for (_a = __values(abi.actions), _b = _a.next(); !_b.done; _b = _a.next()) {\n                _c = _b.value, name_1 = _c.name, type = _c.type;\n                actions.set(name_1, ser.getType(types, type));\n              }\n            } catch (e_2_1) {\n              e_2 = {\n                error: e_2_1\n              };\n            } finally {\n              try {\n                if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n              } finally {\n                if (e_2) throw e_2.error;\n              }\n            }\n            result = {\n              types: types,\n              actions: actions\n            };\n            this.contracts.set(accountName, result);\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  /** Convert `value` to binary form. `type` must be a built-in abi type or in `transaction.abi.json`. */\n  Api.prototype.serialize = function (buffer, type, value) {\n    this.transactionTypes.get(type).serialize(buffer, value);\n  };\n  /** Convert data in `buffer` to structured form. `type` must be a built-in abi type or in `transaction.abi.json`. */\n  Api.prototype.deserialize = function (buffer, type) {\n    return this.transactionTypes.get(type).deserialize(buffer);\n  };\n  /** Convert a transaction to binary */\n  Api.prototype.serializeTransaction = function (transaction) {\n    var buffer = new ser.SerialBuffer({\n      textEncoder: this.textEncoder,\n      textDecoder: this.textDecoder\n    });\n    this.serialize(buffer, 'transaction', __assign({\n      max_net_usage_words: 0,\n      max_cpu_usage_ms: 0,\n      delay_sec: 0,\n      context_free_actions: [],\n      actions: [],\n      transaction_extensions: []\n    }, transaction));\n    return buffer.asUint8Array();\n  };\n  /** Serialize context-free data */\n  Api.prototype.serializeContextFreeData = function (contextFreeData) {\n    var e_3, _a;\n    if (!contextFreeData || !contextFreeData.length) {\n      return null;\n    }\n    var buffer = new ser.SerialBuffer({\n      textEncoder: this.textEncoder,\n      textDecoder: this.textDecoder\n    });\n    buffer.pushVaruint32(contextFreeData.length);\n    try {\n      for (var contextFreeData_1 = __values(contextFreeData), contextFreeData_1_1 = contextFreeData_1.next(); !contextFreeData_1_1.done; contextFreeData_1_1 = contextFreeData_1.next()) {\n        var data = contextFreeData_1_1.value;\n        buffer.pushBytes(data);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (contextFreeData_1_1 && !contextFreeData_1_1.done && (_a = contextFreeData_1.return)) _a.call(contextFreeData_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    return buffer.asUint8Array();\n  };\n  /** Convert a transaction from binary. Leaves actions in hex. */\n  Api.prototype.deserializeTransaction = function (transaction) {\n    var buffer = new ser.SerialBuffer({\n      textEncoder: this.textEncoder,\n      textDecoder: this.textDecoder\n    });\n    buffer.pushArray(transaction);\n    return this.deserialize(buffer, 'transaction');\n  };\n  // Order of adding to transaction_extension is transaction_extension id ascending\n  Api.prototype.serializeTransactionExtensions = function (transaction) {\n    var transaction_extensions = [];\n    if (transaction.resource_payer) {\n      var extensionBuffer = new ser.SerialBuffer({\n        textEncoder: this.textEncoder,\n        textDecoder: this.textDecoder\n      });\n      var types = ser.getTypesFromAbi(ser.createTransactionExtensionTypes());\n      types.get('resource_payer').serialize(extensionBuffer, transaction.resource_payer);\n      transaction_extensions = __spreadArray(__spreadArray([], __read(transaction_extensions)), [[1, ser.arrayToHex(extensionBuffer.asUint8Array())]]);\n    }\n    return transaction_extensions;\n  };\n  ;\n  // Usage: transaction = {...transaction, ...this.deserializeTransactionExtensions(transaction.transaction_extensions)}\n  Api.prototype.deserializeTransactionExtensions = function (data) {\n    var _this = this;\n    var transaction = {};\n    data.forEach(function (extensionData) {\n      var transactionExtension = _this.transactionExtensions.find(function (extension) {\n        return extension.id === extensionData[0];\n      });\n      if (transactionExtension === undefined) {\n        throw new Error(\"Transaction Extension could not be determined: \" + extensionData);\n      }\n      var types = ser.getTypesFromAbi(ser.createTransactionExtensionTypes());\n      var extensionBuffer = new ser.SerialBuffer({\n        textEncoder: _this.textEncoder,\n        textDecoder: _this.textDecoder\n      });\n      extensionBuffer.pushArray(ser.hexToUint8Array(extensionData[1]));\n      var deserializedObj = types.get(transactionExtension.type).deserialize(extensionBuffer);\n      if (extensionData[0] === 1) {\n        deserializedObj.max_net_bytes = Number(deserializedObj.max_net_bytes);\n        deserializedObj.max_cpu_us = Number(deserializedObj.max_cpu_us);\n        deserializedObj.max_memory_bytes = Number(deserializedObj.max_memory_bytes);\n        transaction.resource_payer = deserializedObj;\n      }\n    });\n    return transaction;\n  };\n  ;\n  // Transaction extensions are serialized and moved to `transaction_extensions`, deserialized objects are not needed on the transaction\n  Api.prototype.deleteTransactionExtensionObjects = function (transaction) {\n    delete transaction.resource_payer;\n    return transaction;\n  };\n  /** Convert actions to hex */\n  Api.prototype.serializeActions = function (actions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all(actions.map(function (action) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var account, name, authorization, data, contract;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      account = action.account, name = action.name, authorization = action.authorization, data = action.data;\n                      return [4 /*yield*/, this.getContract(account)];\n                    case 1:\n                      contract = _a.sent();\n                      if (typeof data !== 'object') {\n                        return [2 /*return*/, action];\n                      }\n                      return [2 /*return*/, ser.serializeAction(contract, account, name, authorization, data, this.textEncoder, this.textDecoder)];\n                  }\n                });\n              });\n            }))];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /** Convert actions from hex */\n  Api.prototype.deserializeActions = function (actions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all(actions.map(function (_a) {\n              var account = _a.account,\n                name = _a.name,\n                authorization = _a.authorization,\n                data = _a.data;\n              return __awaiter(_this, void 0, void 0, function () {\n                var contract;\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      return [4 /*yield*/, this.getContract(account)];\n                    case 1:\n                      contract = _b.sent();\n                      return [2 /*return*/, ser.deserializeAction(contract, account, name, authorization, data, this.textEncoder, this.textDecoder)];\n                  }\n                });\n              });\n            }))];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /** Convert a transaction from binary. Also deserializes actions. */\n  Api.prototype.deserializeTransactionWithActions = function (transaction) {\n    return __awaiter(this, void 0, void 0, function () {\n      var deserializedTransaction, deserializedCFActions, deserializedActions;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof transaction === 'string') {\n              transaction = ser.hexToUint8Array(transaction);\n            }\n            deserializedTransaction = this.deserializeTransaction(transaction);\n            return [4 /*yield*/, this.deserializeActions(deserializedTransaction.context_free_actions)];\n          case 1:\n            deserializedCFActions = _a.sent();\n            return [4 /*yield*/, this.deserializeActions(deserializedTransaction.actions)];\n          case 2:\n            deserializedActions = _a.sent();\n            return [2 /*return*/, __assign(__assign({}, deserializedTransaction), {\n              context_free_actions: deserializedCFActions,\n              actions: deserializedActions\n            })];\n        }\n      });\n    });\n  };\n  /** Deflate a serialized object */\n  Api.prototype.deflateSerializedArray = function (serializedArray) {\n    return pako_1.deflate(serializedArray, {\n      level: 9\n    });\n  };\n  /** Inflate a compressed serialized object */\n  Api.prototype.inflateSerializedArray = function (compressedSerializedArray) {\n    return pako_1.inflate(compressedSerializedArray);\n  };\n  /**\n   * Create and optionally broadcast a transaction.\n   *\n   * Named Parameters:\n   * `broadcast`: broadcast this transaction?\n   * `sign`: sign this transaction?\n   * `compression`: compress this transaction?\n   * `readOnlyTrx`: read only transaction?\n   * `returnFailureTraces`: return failure traces? (only available for read only transactions currently)\n   *\n   * If both `blocksBehind` and `expireSeconds` are present,\n   * then fetch the block which is `blocksBehind` behind head block,\n   * use it as a reference for TAPoS, and expire the transaction `expireSeconds` after that block's time.\n   *\n   * If both `useLastIrreversible` and `expireSeconds` are present,\n   * then fetch the last irreversible block, use it as a reference for TAPoS,\n   * and expire the transaction `expireSeconds` after that block's time.\n   *\n   * @returns node response if `broadcast`, `{signatures, serializedTransaction}` if `!broadcast`\n   */\n  Api.prototype.transact = function (transaction, _a) {\n    var _b = _a === void 0 ? {} : _a,\n      _c = _b.broadcast,\n      broadcast = _c === void 0 ? true : _c,\n      _d = _b.sign,\n      sign = _d === void 0 ? true : _d,\n      readOnlyTrx = _b.readOnlyTrx,\n      returnFailureTraces = _b.returnFailureTraces,\n      requiredKeys = _b.requiredKeys,\n      compression = _b.compression,\n      blocksBehind = _b.blocksBehind,\n      useLastIrreversible = _b.useLastIrreversible,\n      expireSeconds = _b.expireSeconds;\n    return __awaiter(this, void 0, void 0, function () {\n      var info, abis, _e, serializedTransaction, serializedContextFreeData, pushTransactionArgs, availableKeys;\n      var _f;\n      return __generator(this, function (_g) {\n        switch (_g.label) {\n          case 0:\n            if (typeof blocksBehind === 'number' && useLastIrreversible) {\n              throw new Error('Use either blocksBehind or useLastIrreversible');\n            }\n            if (!!this.chainId) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.rpc.get_info()];\n          case 1:\n            info = _g.sent();\n            this.chainId = info.chain_id;\n            _g.label = 2;\n          case 2:\n            if (!((typeof blocksBehind === 'number' || useLastIrreversible) && expireSeconds)) return [3 /*break*/, 4];\n            return [4 /*yield*/, this.generateTapos(info, transaction, blocksBehind, useLastIrreversible, expireSeconds)];\n          case 3:\n            transaction = _g.sent();\n            _g.label = 4;\n          case 4:\n            if (!this.hasRequiredTaposFields(transaction)) {\n              throw new Error('Required configuration or TAPOS fields are not present');\n            }\n            return [4 /*yield*/, this.getTransactionAbis(transaction)];\n          case 5:\n            abis = _g.sent();\n            _e = [__assign({}, transaction)];\n            _f = {};\n            return [4 /*yield*/, this.serializeTransactionExtensions(transaction)];\n          case 6:\n            _f.transaction_extensions = _g.sent();\n            return [4 /*yield*/, this.serializeActions(transaction.context_free_actions || [])];\n          case 7:\n            _f.context_free_actions = _g.sent();\n            return [4 /*yield*/, this.serializeActions(transaction.actions)];\n          case 8:\n            transaction = __assign.apply(void 0, _e.concat([(_f.actions = _g.sent(), _f)]));\n            transaction = this.deleteTransactionExtensionObjects(transaction);\n            serializedTransaction = this.serializeTransaction(transaction);\n            serializedContextFreeData = this.serializeContextFreeData(transaction.context_free_data);\n            pushTransactionArgs = {\n              serializedTransaction: serializedTransaction,\n              serializedContextFreeData: serializedContextFreeData,\n              signatures: []\n            };\n            if (!sign) return [3 /*break*/, 13];\n            if (!!requiredKeys) return [3 /*break*/, 11];\n            return [4 /*yield*/, this.signatureProvider.getAvailableKeys()];\n          case 9:\n            availableKeys = _g.sent();\n            return [4 /*yield*/, this.authorityProvider.getRequiredKeys({\n              transaction: transaction,\n              availableKeys: availableKeys\n            })];\n          case 10:\n            requiredKeys = _g.sent();\n            _g.label = 11;\n          case 11:\n            return [4 /*yield*/, this.signatureProvider.sign({\n              chainId: this.chainId,\n              requiredKeys: requiredKeys,\n              serializedTransaction: serializedTransaction,\n              serializedContextFreeData: serializedContextFreeData,\n              abis: abis\n            })];\n          case 12:\n            pushTransactionArgs = _g.sent();\n            _g.label = 13;\n          case 13:\n            if (broadcast) {\n              if (compression) {\n                return [2 /*return*/, this.pushCompressedSignedTransaction(pushTransactionArgs, readOnlyTrx, returnFailureTraces)];\n              }\n              return [2 /*return*/, this.pushSignedTransaction(pushTransactionArgs, readOnlyTrx, returnFailureTraces)];\n            }\n            return [2 /*return*/, pushTransactionArgs];\n        }\n      });\n    });\n  };\n  Api.prototype.query = function (account, short, query, _a) {\n    var sign = _a.sign,\n      requiredKeys = _a.requiredKeys,\n      _b = _a.authorization,\n      authorization = _b === void 0 ? [] : _b;\n    return __awaiter(this, void 0, void 0, function () {\n      var info, refBlock, queryBuffer, transaction, serializedTransaction, signatures, abis, availableKeys, signResponse, response, returnBuffer;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this.rpc.get_info()];\n          case 1:\n            info = _c.sent();\n            return [4 /*yield*/, this.tryRefBlockFromGetInfo(info)];\n          case 2:\n            refBlock = _c.sent();\n            queryBuffer = new ser.SerialBuffer({\n              textEncoder: this.textEncoder,\n              textDecoder: this.textDecoder\n            });\n            ser.serializeQuery(queryBuffer, query);\n            transaction = __assign(__assign({}, ser.transactionHeader(refBlock, 60 * 30)), {\n              context_free_actions: [],\n              actions: [{\n                account: account,\n                name: 'queryit',\n                authorization: authorization,\n                data: ser.arrayToHex(queryBuffer.asUint8Array())\n              }]\n            });\n            serializedTransaction = this.serializeTransaction(transaction);\n            signatures = [];\n            if (!sign) return [3 /*break*/, 8];\n            return [4 /*yield*/, this.getTransactionAbis(transaction)];\n          case 3:\n            abis = _c.sent();\n            if (!!requiredKeys) return [3 /*break*/, 6];\n            return [4 /*yield*/, this.signatureProvider.getAvailableKeys()];\n          case 4:\n            availableKeys = _c.sent();\n            return [4 /*yield*/, this.authorityProvider.getRequiredKeys({\n              transaction: transaction,\n              availableKeys: availableKeys\n            })];\n          case 5:\n            requiredKeys = _c.sent();\n            _c.label = 6;\n          case 6:\n            return [4 /*yield*/, this.signatureProvider.sign({\n              chainId: this.chainId,\n              requiredKeys: requiredKeys,\n              serializedTransaction: serializedTransaction,\n              serializedContextFreeData: null,\n              abis: abis\n            })];\n          case 7:\n            signResponse = _c.sent();\n            signatures = signResponse.signatures;\n            _c.label = 8;\n          case 8:\n            return [4 /*yield*/, this.rpc.send_transaction({\n              signatures: signatures,\n              compression: 0,\n              serializedTransaction: serializedTransaction\n            })];\n          case 9:\n            response = _c.sent();\n            returnBuffer = new ser.SerialBuffer({\n              textEncoder: this.textEncoder,\n              textDecoder: this.textDecoder,\n              array: ser.hexToUint8Array(response.processed.action_traces[0][1].return_value)\n            });\n            if (short) {\n              return [2 /*return*/, ser.deserializeAnyvarShort(returnBuffer)];\n            } else {\n              return [2 /*return*/, ser.deserializeAnyvar(returnBuffer)];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /** Broadcast a signed transaction */\n  Api.prototype.pushSignedTransaction = function (_a, readOnlyTrx, returnFailureTraces) {\n    var signatures = _a.signatures,\n      serializedTransaction = _a.serializedTransaction,\n      serializedContextFreeData = _a.serializedContextFreeData;\n    if (readOnlyTrx === void 0) {\n      readOnlyTrx = false;\n    }\n    if (returnFailureTraces === void 0) {\n      returnFailureTraces = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        if (readOnlyTrx) {\n          return [2 /*return*/, this.rpc.push_ro_transaction({\n            signatures: signatures,\n            serializedTransaction: serializedTransaction,\n            serializedContextFreeData: serializedContextFreeData\n          }, returnFailureTraces)];\n        }\n        return [2 /*return*/, this.rpc.push_transaction({\n          signatures: signatures,\n          serializedTransaction: serializedTransaction,\n          serializedContextFreeData: serializedContextFreeData\n        })];\n      });\n    });\n  };\n  Api.prototype.pushCompressedSignedTransaction = function (_a, readOnlyTrx, returnFailureTraces) {\n    var signatures = _a.signatures,\n      serializedTransaction = _a.serializedTransaction,\n      serializedContextFreeData = _a.serializedContextFreeData;\n    if (readOnlyTrx === void 0) {\n      readOnlyTrx = false;\n    }\n    if (returnFailureTraces === void 0) {\n      returnFailureTraces = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var compressedSerializedTransaction, compressedSerializedContextFreeData;\n      return __generator(this, function (_b) {\n        compressedSerializedTransaction = this.deflateSerializedArray(serializedTransaction);\n        compressedSerializedContextFreeData = this.deflateSerializedArray(serializedContextFreeData || new Uint8Array(0));\n        if (readOnlyTrx) {\n          return [2 /*return*/, this.rpc.push_ro_transaction({\n            signatures: signatures,\n            compression: 1,\n            serializedTransaction: compressedSerializedTransaction,\n            serializedContextFreeData: compressedSerializedContextFreeData\n          }, returnFailureTraces)];\n        }\n        return [2 /*return*/, this.rpc.push_transaction({\n          signatures: signatures,\n          compression: 1,\n          serializedTransaction: compressedSerializedTransaction,\n          serializedContextFreeData: compressedSerializedContextFreeData\n        })];\n      });\n    });\n  };\n  Api.prototype.generateTapos = function (info, transaction, blocksBehind, useLastIrreversible, expireSeconds) {\n    return __awaiter(this, void 0, void 0, function () {\n      var block, taposBlockNumber, refBlock, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!!info) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.rpc.get_info()];\n          case 1:\n            info = _b.sent();\n            _b.label = 2;\n          case 2:\n            if (!useLastIrreversible) return [3 /*break*/, 4];\n            return [4 /*yield*/, this.tryRefBlockFromGetInfo(info)];\n          case 3:\n            block = _b.sent();\n            return [2 /*return*/, __assign(__assign({}, ser.transactionHeader(block, expireSeconds)), transaction)];\n          case 4:\n            taposBlockNumber = info.head_block_num - blocksBehind;\n            if (!(taposBlockNumber <= info.last_irreversible_block_num)) return [3 /*break*/, 6];\n            return [4 /*yield*/, this.tryGetBlockInfo(taposBlockNumber)];\n          case 5:\n            _a = _b.sent();\n            return [3 /*break*/, 8];\n          case 6:\n            return [4 /*yield*/, this.tryGetBlockHeaderState(taposBlockNumber)];\n          case 7:\n            _a = _b.sent();\n            _b.label = 8;\n          case 8:\n            refBlock = _a;\n            return [2 /*return*/, __assign(__assign({}, ser.transactionHeader(refBlock, expireSeconds)), transaction)];\n        }\n      });\n    });\n  };\n  // eventually break out into TransactionValidator class\n  Api.prototype.hasRequiredTaposFields = function (_a) {\n    var expiration = _a.expiration,\n      ref_block_num = _a.ref_block_num,\n      ref_block_prefix = _a.ref_block_prefix;\n    return !!(expiration && typeof ref_block_num === 'number' && typeof ref_block_prefix === 'number');\n  };\n  Api.prototype.tryGetBlockHeaderState = function (taposBlockNumber) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 4]);\n            return [4 /*yield*/, this.rpc.get_block_header_state(taposBlockNumber)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n          case 2:\n            error_1 = _a.sent();\n            return [4 /*yield*/, this.tryGetBlockInfo(taposBlockNumber)];\n          case 3:\n            return [2 /*return*/, _a.sent()];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Api.prototype.tryGetBlockInfo = function (blockNumber) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 4]);\n            return [4 /*yield*/, this.rpc.get_block_info(blockNumber)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n          case 2:\n            error_2 = _a.sent();\n            return [4 /*yield*/, this.rpc.get_block(blockNumber)];\n          case 3:\n            return [2 /*return*/, _a.sent()];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Api.prototype.tryRefBlockFromGetInfo = function (info) {\n    return __awaiter(this, void 0, void 0, function () {\n      var block;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(info.hasOwnProperty('last_irreversible_block_id') && info.hasOwnProperty('last_irreversible_block_num') && info.hasOwnProperty('last_irreversible_block_time'))) return [3 /*break*/, 1];\n            return [2 /*return*/, {\n              block_num: info.last_irreversible_block_num,\n              id: info.last_irreversible_block_id,\n              timestamp: info.last_irreversible_block_time\n            }];\n          case 1:\n            return [4 /*yield*/, this.tryGetBlockInfo(info.last_irreversible_block_num)];\n          case 2:\n            block = _a.sent();\n            return [2 /*return*/, {\n              block_num: block.block_num,\n              id: block.id,\n              timestamp: block.timestamp\n            }];\n        }\n      });\n    });\n  };\n  Api.prototype.with = function (accountName) {\n    return new ActionBuilder(this, accountName);\n  };\n  Api.prototype.buildTransaction = function (cb) {\n    var tx = new TransactionBuilder(this);\n    if (cb) {\n      return cb(tx);\n    }\n    return tx;\n  };\n  return Api;\n}(); // Api\nexports.Api = Api;\nvar TransactionBuilder = /** @class */function () {\n  function TransactionBuilder(api) {\n    this.actions = [];\n    this.contextFreeGroups = [];\n    this.api = api;\n  }\n  TransactionBuilder.prototype.with = function (accountName) {\n    var actionBuilder = new ActionBuilder(this.api, accountName);\n    this.actions.push(actionBuilder);\n    return actionBuilder;\n  };\n  TransactionBuilder.prototype.associateContextFree = function (contextFreeGroup) {\n    this.contextFreeGroups.push(contextFreeGroup);\n    return this;\n  };\n  TransactionBuilder.prototype.send = function (config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var contextFreeDataSet, contextFreeActions, actions;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            contextFreeDataSet = [];\n            contextFreeActions = [];\n            actions = this.actions.map(function (actionBuilder) {\n              return actionBuilder.serializedData;\n            });\n            return [4 /*yield*/, Promise.all(this.contextFreeGroups.map(function (contextFreeCallback) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a, action, contextFreeAction, contextFreeData;\n                return __generator(this, function (_b) {\n                  _a = contextFreeCallback({\n                    cfd: contextFreeDataSet.length,\n                    cfa: contextFreeActions.length\n                  }), action = _a.action, contextFreeAction = _a.contextFreeAction, contextFreeData = _a.contextFreeData;\n                  if (action) {\n                    actions.push(action);\n                  }\n                  if (contextFreeAction) {\n                    contextFreeActions.push(contextFreeAction);\n                  }\n                  if (contextFreeData) {\n                    contextFreeDataSet.push(contextFreeData);\n                  }\n                  return [2 /*return*/];\n                });\n              });\n            }))];\n\n          case 1:\n            _a.sent();\n            this.contextFreeGroups = [];\n            this.actions = [];\n            return [4 /*yield*/, this.api.transact({\n              context_free_data: contextFreeDataSet,\n              context_free_actions: contextFreeActions,\n              actions: actions\n            }, config)];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  return TransactionBuilder;\n}();\nexports.TransactionBuilder = TransactionBuilder;\nvar ActionBuilder = /** @class */function () {\n  function ActionBuilder(api, accountName) {\n    this.api = api;\n    this.accountName = accountName;\n  }\n  ActionBuilder.prototype.as = function (actorName) {\n    if (actorName === void 0) {\n      actorName = [];\n    }\n    var authorization = [];\n    if (actorName && typeof actorName === 'string') {\n      authorization = [{\n        actor: actorName,\n        permission: 'active'\n      }];\n    } else {\n      authorization = actorName;\n    }\n    return new ActionSerializer(this, this.api, this.accountName, authorization);\n  };\n  return ActionBuilder;\n}();\nexports.ActionBuilder = ActionBuilder;\nvar ActionSerializer = /** @class */function () {\n  function ActionSerializer(parent, api, accountName, authorization) {\n    var e_4, _a;\n    var _this = this;\n    var jsonAbi = api.cachedAbis.get(accountName);\n    if (!jsonAbi) {\n      throw new Error('ABI must be cached before using ActionBuilder, run api.getAbi()');\n    }\n    var types = ser.getTypesFromAbi(ser.createInitialTypes(), jsonAbi.abi);\n    var actions = new Map();\n    try {\n      for (var _b = __values(jsonAbi.abi.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = _c.value,\n          name_2 = _d.name,\n          type = _d.type;\n        actions.set(name_2, ser.getType(types, type));\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    actions.forEach(function (type, name) {\n      var _a;\n      Object.assign(_this, (_a = {}, _a[name] = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var data = {};\n        args.forEach(function (arg, index) {\n          var field = type.fields[index];\n          data[field.name] = arg;\n        });\n        var serializedData = ser.serializeAction({\n          types: types,\n          actions: actions\n        }, accountName, name, authorization, data, api.textEncoder, api.textDecoder);\n        parent.serializedData = serializedData;\n        return serializedData;\n      }, _a));\n    });\n  }\n  return ActionSerializer;\n}();","map":{"version":3,"names":["pako_1","require","ser","Api","args","contracts","Map","cachedAbis","transactionExtensions","id","type","keys","rpc","authorityProvider","abiProvider","signatureProvider","chainId","textEncoder","textDecoder","abiTypes","getTypesFromAbi","createAbiTypes","transactionTypes","createTransactionTypes","prototype","rawAbiToJson","rawAbi","buffer","SerialBuffer","array","supportedAbiVersion","getString","Error","restartRead","get","deserialize","jsonToRawAbi","jsonAbi","serialize","asUint8Array","getCachedAbi","accountName","reload","getRawAbi","_a","sent","abi","cachedAbi","e_1","message","set","getAbi","getTransactionAbis","transaction","actions","context_free_actions","concat","accounts","map","action","account","uniqueAccounts","Set","actionPromises","__spreadArray","__read","__awaiter","_this","_b","Promise","all","getContract","_e","types","createInitialTypes","__values","next","done","_c","value","name_1","name","getType","result","serializeTransaction","__assign","max_net_usage_words","max_cpu_usage_ms","delay_sec","transaction_extensions","serializeContextFreeData","contextFreeData","length","pushVaruint32","contextFreeData_1","contextFreeData_1_1","data","pushBytes","deserializeTransaction","pushArray","serializeTransactionExtensions","resource_payer","extensionBuffer","createTransactionExtensionTypes","arrayToHex","deserializeTransactionExtensions","forEach","extensionData","transactionExtension","find","extension","undefined","hexToUint8Array","deserializedObj","max_net_bytes","Number","max_cpu_us","max_memory_bytes","deleteTransactionExtensionObjects","serializeActions","authorization","contract","serializeAction","deserializeActions","deserializeAction","deserializeTransactionWithActions","deserializedTransaction","deserializedCFActions","deserializedActions","deflateSerializedArray","serializedArray","deflate","level","inflateSerializedArray","compressedSerializedArray","inflate","transact","broadcast","_d","sign","readOnlyTrx","returnFailureTraces","requiredKeys","compression","blocksBehind","useLastIrreversible","expireSeconds","get_info","info","_g","chain_id","generateTapos","hasRequiredTaposFields","abis","_f","apply","serializedTransaction","serializedContextFreeData","context_free_data","pushTransactionArgs","signatures","getAvailableKeys","availableKeys","getRequiredKeys","pushCompressedSignedTransaction","pushSignedTransaction","query","short","tryRefBlockFromGetInfo","refBlock","queryBuffer","serializeQuery","transactionHeader","signResponse","send_transaction","response","returnBuffer","processed","action_traces","return_value","deserializeAnyvarShort","deserializeAnyvar","push_ro_transaction","push_transaction","compressedSerializedTransaction","compressedSerializedContextFreeData","Uint8Array","block","taposBlockNumber","head_block_num","last_irreversible_block_num","tryGetBlockInfo","tryGetBlockHeaderState","expiration","ref_block_num","ref_block_prefix","get_block_header_state","blockNumber","get_block_info","get_block","hasOwnProperty","block_num","last_irreversible_block_id","timestamp","last_irreversible_block_time","with","ActionBuilder","buildTransaction","cb","tx","TransactionBuilder","exports","api","contextFreeGroups","actionBuilder","push","associateContextFree","contextFreeGroup","send","config","contextFreeDataSet","contextFreeActions","serializedData","contextFreeCallback","cfd","cfa","contextFreeAction","as","actorName","actor","permission","ActionSerializer","parent","name_2","Object","assign","_i","arguments","arg","index","field","fields"],"sources":["../src/eosjs-api.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}