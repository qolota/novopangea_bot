{"ast":null,"code":"const qs = require('query-string');\nconst {\n  wax\n} = require('../../core/wax');\nconst API_TOKENS = require('../../configs/API_TOKENS');\nconst {\n  LOCAL_BEAST_GARDEN_SIGNAL_ENDPOINT\n} = require('../../configs/ENDPOINTS');\nconst feedingCalcNextAction = require('../feeding/feedingCalcNextAction');\n\n// const fetchAvgAlphaPayoutAfterCosts = require('./api/fetchAvgAlphaPayoutAfterCosts');\n// const fetchAvgFeedingPayoutAfterCosts = require('../feeding/api/fetchAvgFeedingPayoutAfterCosts');\n// const {\n//   NUM_TRAINER_BEASTS_IN_BATTLE,\n//   TRAINER_BATTLE_BEAST_COOLDOWN_HOURS,\n//   FEEDING_BEAST_COOLDOWN_HOURS,\n// } = require('../consts/GAME_VALUES');\n\nconst farmingAlphaCalcNextAction = async () => {\n  // const avgTrainerBattlePayout = await fetchAvgAlphaPayoutAfterCosts({\n  //   accountName: wax.userAccount,\n  // });\n  // const normAvgTrainerBattlePayout = avgTrainerBattlePayout / (NUM_TRAINER_BEASTS_IN_BATTLE * TRAINER_BATTLE_BEAST_COOLDOWN_HOURS);\n\n  // const avgFeedingPayout = await fetchAvgFeedingPayoutAfterCosts({\n  //   accountName: wax.userAccount,\n  // });\n  // const normAvgFeedingPayout = avgFeedingPayout / FEEDING_BEAST_COOLDOWN_HOURS;\n\n  // console.log(avgTrainerBattlePayout, normAvgTrainerBattlePayout);\n  // console.log(avgFeedingPayout, normAvgFeedingPayout);\n\n  const feedingAction = await feedingCalcNextAction({\n    accountName: wax.userAccount\n  });\n  if (feedingAction.action === 'feed_beasts') {\n    return feedingAction;\n  }\n  let signal = await fetch(`${LOCAL_BEAST_GARDEN_SIGNAL_ENDPOINT}?${qs.stringify({\n    accountName: wax.userAccount,\n    accessToken: API_TOKENS[wax.userAccount]\n  })}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  return await signal.json();\n};\nmodule.exports = farmingAlphaCalcNextAction;","map":{"version":3,"names":["qs","require","wax","API_TOKENS","LOCAL_BEAST_GARDEN_SIGNAL_ENDPOINT","feedingCalcNextAction","farmingAlphaCalcNextAction","feedingAction","accountName","userAccount","action","signal","fetch","stringify","accessToken","method","headers","json","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/beastgarden/battles/farmingAlphaCalcNextAction.js"],"sourcesContent":["const qs = require('query-string');\nconst { wax } = require('../../core/wax');\nconst API_TOKENS = require('../../configs/API_TOKENS');\nconst { LOCAL_BEAST_GARDEN_SIGNAL_ENDPOINT } = require('../../configs/ENDPOINTS');\nconst feedingCalcNextAction = require('../feeding/feedingCalcNextAction');\n\n// const fetchAvgAlphaPayoutAfterCosts = require('./api/fetchAvgAlphaPayoutAfterCosts');\n// const fetchAvgFeedingPayoutAfterCosts = require('../feeding/api/fetchAvgFeedingPayoutAfterCosts');\n// const {\n//   NUM_TRAINER_BEASTS_IN_BATTLE,\n//   TRAINER_BATTLE_BEAST_COOLDOWN_HOURS,\n//   FEEDING_BEAST_COOLDOWN_HOURS,\n// } = require('../consts/GAME_VALUES');\n\nconst farmingAlphaCalcNextAction = async () => {\n  // const avgTrainerBattlePayout = await fetchAvgAlphaPayoutAfterCosts({\n  //   accountName: wax.userAccount,\n  // });\n  // const normAvgTrainerBattlePayout = avgTrainerBattlePayout / (NUM_TRAINER_BEASTS_IN_BATTLE * TRAINER_BATTLE_BEAST_COOLDOWN_HOURS);\n\n  // const avgFeedingPayout = await fetchAvgFeedingPayoutAfterCosts({\n  //   accountName: wax.userAccount,\n  // });\n  // const normAvgFeedingPayout = avgFeedingPayout / FEEDING_BEAST_COOLDOWN_HOURS;\n\n  // console.log(avgTrainerBattlePayout, normAvgTrainerBattlePayout);\n  // console.log(avgFeedingPayout, normAvgFeedingPayout);\n\n  const feedingAction = await feedingCalcNextAction({\n    accountName: wax.userAccount,\n  });\n\n  if (feedingAction.action === 'feed_beasts') {\n    return feedingAction;\n  }\n\n  let signal = await fetch(\n    `${LOCAL_BEAST_GARDEN_SIGNAL_ENDPOINT}?${qs.stringify({\n      accountName: wax.userAccount,\n      accessToken: API_TOKENS[wax.userAccount],\n    })}`,\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    },\n  );\n\n  return await signal.json();\n};\n\nmodule.exports = farmingAlphaCalcNextAction;\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,cAAc,CAAC;AAClC,MAAM;EAAEC;AAAI,CAAC,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAME,UAAU,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AACtD,MAAM;EAAEG;AAAmC,CAAC,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AACjF,MAAMI,qBAAqB,GAAGJ,OAAO,CAAC,kCAAkC,CAAC;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,0BAA0B,GAAG,MAAAA,CAAA,KAAY;EAC7C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAMC,aAAa,GAAG,MAAMF,qBAAqB,CAAC;IAChDG,WAAW,EAAEN,GAAG,CAACO;EACnB,CAAC,CAAC;EAEF,IAAIF,aAAa,CAACG,MAAM,KAAK,aAAa,EAAE;IAC1C,OAAOH,aAAa;EACtB;EAEA,IAAII,MAAM,GAAG,MAAMC,KAAK,CACrB,GAAER,kCAAmC,IAAGJ,EAAE,CAACa,SAAS,CAAC;IACpDL,WAAW,EAAEN,GAAG,CAACO,WAAW;IAC5BK,WAAW,EAAEX,UAAU,CAACD,GAAG,CAACO,WAAW;EACzC,CAAC,CAAE,EAAC,EACJ;IACEM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CACF,CAAC;EAED,OAAO,MAAML,MAAM,CAACM,IAAI,CAAC,CAAC;AAC5B,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGb,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}