{"ast":null,"code":"const _ = require('lodash');\nconst fetchAtomichub = require('../utils/fetchAtomichub');\nconst API_ENDPOINTS = require('../consts/API_ENGPOINTS');\nconst ASSETS_LIMIT = 100;\nconst fetchAssets = async ({\n  params,\n  customProcessor = () => {}\n}) => {\n  let page = 1;\n  let assets = [];\n  while (true) {\n    const data = await fetchAtomichub({\n      type: API_ENDPOINTS.ASSETS,\n      params: {\n        limit: ASSETS_LIMIT,\n        order: 'desc',\n        sort: 'created',\n        page,\n        ...params\n      }\n    });\n    const pageAssets = _(data.data).map(asset => {\n      return {\n        id: asset.asset_id,\n        mintId: Number(asset.template_mint),\n        owner: asset.owner,\n        schemaName: asset.schema.schema_name,\n        collectionName: asset.collection.collection_name,\n        templateId: asset.template.template_id,\n        isBurned: asset.burned_at_time != null,\n        name: asset.name,\n        ...customProcessor({\n          asset\n        })\n      };\n    }).value();\n    assets = [...assets, ...pageAssets];\n    if (pageAssets.length < ASSETS_LIMIT) {\n      break;\n    }\n    page++;\n  }\n  return assets;\n};\nmodule.exports = fetchAssets;","map":{"version":3,"names":["_","require","fetchAtomichub","API_ENDPOINTS","ASSETS_LIMIT","fetchAssets","params","customProcessor","page","assets","data","type","ASSETS","limit","order","sort","pageAssets","map","asset","id","asset_id","mintId","Number","template_mint","owner","schemaName","schema","schema_name","collectionName","collection","collection_name","templateId","template","template_id","isBurned","burned_at_time","name","value","length","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/atomicassets/api/fetchAssets.js"],"sourcesContent":["const _ = require('lodash');\nconst fetchAtomichub = require('../utils/fetchAtomichub');\nconst API_ENDPOINTS = require('../consts/API_ENGPOINTS');\n\nconst ASSETS_LIMIT = 100;\n\nconst fetchAssets = async ({\n    params,\n    customProcessor = () => {},\n}) => {\n  let page = 1;\n  let assets = [];\n\n  while (true) {\n    const data = await fetchAtomichub({\n        type: API_ENDPOINTS.ASSETS,\n        params: {\n            limit: ASSETS_LIMIT,\n            order: 'desc',\n            sort: 'created',\n            page,\n            ...params,\n        },\n    });\n\n    const pageAssets = _(data.data)\n        .map((asset) => {\n\n            return {\n                id: asset.asset_id,\n                mintId: Number(asset.template_mint),\n                owner: asset.owner,\n                schemaName: asset.schema.schema_name,\n                collectionName: asset.collection.collection_name,\n                templateId: asset.template.template_id,\n                isBurned: asset.burned_at_time != null,\n                name: asset.name,\n                ...customProcessor({\n                    asset,\n                }),\n            };\n        })\n        .value();\n\n    assets = [\n        ...assets,\n        ...pageAssets,\n    ];\n    if (pageAssets.length < ASSETS_LIMIT) {\n        break;\n    }\n    page++;\n  }\n\n  return assets;\n};\n\nmodule.exports = fetchAssets;"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,cAAc,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AACzD,MAAME,aAAa,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAExD,MAAMG,YAAY,GAAG,GAAG;AAExB,MAAMC,WAAW,GAAG,MAAAA,CAAO;EACvBC,MAAM;EACNC,eAAe,GAAGA,CAAA,KAAM,CAAC;AAC7B,CAAC,KAAK;EACJ,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAG,EAAE;EAEf,OAAO,IAAI,EAAE;IACX,MAAMC,IAAI,GAAG,MAAMR,cAAc,CAAC;MAC9BS,IAAI,EAAER,aAAa,CAACS,MAAM;MAC1BN,MAAM,EAAE;QACJO,KAAK,EAAET,YAAY;QACnBU,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE,SAAS;QACfP,IAAI;QACJ,GAAGF;MACP;IACJ,CAAC,CAAC;IAEF,MAAMU,UAAU,GAAGhB,CAAC,CAACU,IAAI,CAACA,IAAI,CAAC,CAC1BO,GAAG,CAAEC,KAAK,IAAK;MAEZ,OAAO;QACHC,EAAE,EAAED,KAAK,CAACE,QAAQ;QAClBC,MAAM,EAAEC,MAAM,CAACJ,KAAK,CAACK,aAAa,CAAC;QACnCC,KAAK,EAAEN,KAAK,CAACM,KAAK;QAClBC,UAAU,EAAEP,KAAK,CAACQ,MAAM,CAACC,WAAW;QACpCC,cAAc,EAAEV,KAAK,CAACW,UAAU,CAACC,eAAe;QAChDC,UAAU,EAAEb,KAAK,CAACc,QAAQ,CAACC,WAAW;QACtCC,QAAQ,EAAEhB,KAAK,CAACiB,cAAc,IAAI,IAAI;QACtCC,IAAI,EAAElB,KAAK,CAACkB,IAAI;QAChB,GAAG7B,eAAe,CAAC;UACfW;QACJ,CAAC;MACL,CAAC;IACL,CAAC,CAAC,CACDmB,KAAK,CAAC,CAAC;IAEZ5B,MAAM,GAAG,CACL,GAAGA,MAAM,EACT,GAAGO,UAAU,CAChB;IACD,IAAIA,UAAU,CAACsB,MAAM,GAAGlC,YAAY,EAAE;MAClC;IACJ;IACAI,IAAI,EAAE;EACR;EAEA,OAAOC,MAAM;AACf,CAAC;AAED8B,MAAM,CAACC,OAAO,GAAGnC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}