{"ast":null,"code":"const _ = require('lodash');\nconst fetchWaxData = require('../../../core/fetchWaxData');\nconst fetchBeasts = async ({\n  accountName\n}) => {\n  const beastsRaw = await fetchWaxData({\n    json: true,\n    code: 'beastbattles',\n    scope: accountName,\n    table: 'cards',\n    index_position: 1,\n    key_type: '',\n    limit: 2000,\n    reverse: false,\n    show_payer: false\n  });\n  const beasts = _(beastsRaw).map(beast => {\n    return {\n      id: beast.asset_id,\n      beastId: beast.beast_id,\n      experience: beast.experience,\n      wins: beast.wins,\n      played: beast.played,\n      cooldown: beast.cooldown == null ? Date.now() - 100 : new Date(`${beast.cooldown}Z`).getTime()\n    };\n  }).map(beast => ({\n    ...beast,\n    isAvailable: beast.cooldown < Date.now()\n  })).value();\n  return beasts;\n};\nmodule.exports = fetchBeasts;","map":{"version":3,"names":["_","require","fetchWaxData","fetchBeasts","accountName","beastsRaw","json","code","scope","table","index_position","key_type","limit","reverse","show_payer","beasts","map","beast","id","asset_id","beastId","beast_id","experience","wins","played","cooldown","Date","now","getTime","isAvailable","value","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/beastgarden/battles/api/fetchBeasts.js"],"sourcesContent":["const _ = require('lodash');\nconst fetchWaxData = require('../../../core/fetchWaxData');\n\nconst fetchBeasts = async ({accountName}) => {\n  const beastsRaw = await fetchWaxData({\n      json: true,\n      code: 'beastbattles',\n      scope: accountName,\n      table: 'cards',\n      index_position: 1,\n      key_type: '',\n      limit: 2000,\n      reverse: false,\n      show_payer: false,\n  });\n\n  const beasts = _(beastsRaw)\n    .map((beast) => {\n        return {\n            id: beast.asset_id,\n            beastId: beast.beast_id,\n            experience: beast.experience,\n            wins: beast.wins,\n            played: beast.played,\n            cooldown: beast.cooldown == null\n                ? Date.now() - 100\n                : new Date(`${beast.cooldown}Z`).getTime(),\n        };\n    })\n    .map(beast => ({\n        ...beast,\n        isAvailable: beast.cooldown < Date.now(),\n    }))\n    .value();\n\n    return beasts;\n};\n\nmodule.exports = fetchBeasts;\n"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,YAAY,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAE1D,MAAME,WAAW,GAAG,MAAAA,CAAO;EAACC;AAAW,CAAC,KAAK;EAC3C,MAAMC,SAAS,GAAG,MAAMH,YAAY,CAAC;IACjCI,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,cAAc;IACpBC,KAAK,EAAEJ,WAAW;IAClBK,KAAK,EAAE,OAAO;IACdC,cAAc,EAAE,CAAC;IACjBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE,KAAK;IACdC,UAAU,EAAE;EAChB,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAGf,CAAC,CAACK,SAAS,CAAC,CACxBW,GAAG,CAAEC,KAAK,IAAK;IACZ,OAAO;MACHC,EAAE,EAAED,KAAK,CAACE,QAAQ;MAClBC,OAAO,EAAEH,KAAK,CAACI,QAAQ;MACvBC,UAAU,EAAEL,KAAK,CAACK,UAAU;MAC5BC,IAAI,EAAEN,KAAK,CAACM,IAAI;MAChBC,MAAM,EAAEP,KAAK,CAACO,MAAM;MACpBC,QAAQ,EAAER,KAAK,CAACQ,QAAQ,IAAI,IAAI,GAC1BC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,GAAG,GAChB,IAAID,IAAI,CAAE,GAAET,KAAK,CAACQ,QAAS,GAAE,CAAC,CAACG,OAAO,CAAC;IACjD,CAAC;EACL,CAAC,CAAC,CACDZ,GAAG,CAACC,KAAK,KAAK;IACX,GAAGA,KAAK;IACRY,WAAW,EAAEZ,KAAK,CAACQ,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC;EAC3C,CAAC,CAAC,CAAC,CACFG,KAAK,CAAC,CAAC;EAER,OAAOf,MAAM;AACjB,CAAC;AAEDgB,MAAM,CAACC,OAAO,GAAG7B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}