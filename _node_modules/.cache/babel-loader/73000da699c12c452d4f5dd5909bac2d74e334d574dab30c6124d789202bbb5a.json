{"ast":null,"code":"const _ = require('lodash');\nconst fetchWaxData = require('../../../core/fetchWaxData');\nconst CONTRACTS = require('../../consts/CONTRACTS');\nconst fetchBattlepass = async ({\n  accountName\n}) => {\n  const rows = await fetchWaxData({\n    json: true,\n    code: CONTRACTS.BATTLE_PASS,\n    scope: CONTRACTS.BATTLE_PASS,\n    table: 'wallets',\n    table_key: '',\n    lower_bound: accountName,\n    upper_bound: accountName,\n    index_position: 1,\n    key_type: '',\n    limit: '1000',\n    reverse: false,\n    show_payer: false\n  });\n  const battlepassRawData = rows[0];\n  const battlepass = {\n    totalAlphaBonusReward: 1 + Number(battlepassRawData.total_alpha_bonus_reward),\n    totalHarvestingPowerBonus: 1 + Number(battlepassRawData.total_harvesting_power_bonus),\n    totalNftChanceBonus: 1 + Number(battlepassRawData.total_nft_chance_bonus),\n    totalWateringPowerBonus: 1 + Number(battlepassRawData.total_watering_power_bonus)\n  };\n  return battlepass;\n};\nmodule.exports = fetchBattlepass;","map":{"version":3,"names":["_","require","fetchWaxData","CONTRACTS","fetchBattlepass","accountName","rows","json","code","BATTLE_PASS","scope","table","table_key","lower_bound","upper_bound","index_position","key_type","limit","reverse","show_payer","battlepassRawData","battlepass","totalAlphaBonusReward","Number","total_alpha_bonus_reward","totalHarvestingPowerBonus","total_harvesting_power_bonus","totalNftChanceBonus","total_nft_chance_bonus","totalWateringPowerBonus","total_watering_power_bonus","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/beastgarden/battlepass/api/fetchBattlepass.js"],"sourcesContent":["const _ = require('lodash');\nconst fetchWaxData = require('../../../core/fetchWaxData');\nconst CONTRACTS = require('../../consts/CONTRACTS');\n\nconst fetchBattlepass = async ({accountName}) => {\n  const rows = await fetchWaxData({\n      json: true,\n      code: CONTRACTS.BATTLE_PASS,\n      scope: CONTRACTS.BATTLE_PASS,\n      table: 'wallets',\n      table_key: '',\n      lower_bound: accountName,\n      upper_bound: accountName,\n      index_position: 1,\n      key_type: '',\n      limit: '1000',\n      reverse: false,\n      show_payer: false,\n  });\n\n  const battlepassRawData = rows[0];\n  const battlepass = {\n    totalAlphaBonusReward: 1 + Number(battlepassRawData.total_alpha_bonus_reward),\n    totalHarvestingPowerBonus:\n      1 + Number(battlepassRawData.total_harvesting_power_bonus),\n    totalNftChanceBonus: 1 + Number(battlepassRawData.total_nft_chance_bonus),\n    totalWateringPowerBonus:\n      1 + Number(battlepassRawData.total_watering_power_bonus),\n  };\n\n  return battlepass;\n};\n\nmodule.exports = fetchBattlepass;\n"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,YAAY,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAC1D,MAAME,SAAS,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAEnD,MAAMG,eAAe,GAAG,MAAAA,CAAO;EAACC;AAAW,CAAC,KAAK;EAC/C,MAAMC,IAAI,GAAG,MAAMJ,YAAY,CAAC;IAC5BK,IAAI,EAAE,IAAI;IACVC,IAAI,EAAEL,SAAS,CAACM,WAAW;IAC3BC,KAAK,EAAEP,SAAS,CAACM,WAAW;IAC5BE,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAER,WAAW;IACxBS,WAAW,EAAET,WAAW;IACxBU,cAAc,EAAE,CAAC;IACjBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,MAAM;IACbC,OAAO,EAAE,KAAK;IACdC,UAAU,EAAE;EAChB,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAGd,IAAI,CAAC,CAAC,CAAC;EACjC,MAAMe,UAAU,GAAG;IACjBC,qBAAqB,EAAE,CAAC,GAAGC,MAAM,CAACH,iBAAiB,CAACI,wBAAwB,CAAC;IAC7EC,yBAAyB,EACvB,CAAC,GAAGF,MAAM,CAACH,iBAAiB,CAACM,4BAA4B,CAAC;IAC5DC,mBAAmB,EAAE,CAAC,GAAGJ,MAAM,CAACH,iBAAiB,CAACQ,sBAAsB,CAAC;IACzEC,uBAAuB,EACrB,CAAC,GAAGN,MAAM,CAACH,iBAAiB,CAACU,0BAA0B;EAC3D,CAAC;EAED,OAAOT,UAAU;AACnB,CAAC;AAEDU,MAAM,CAACC,OAAO,GAAG5B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}