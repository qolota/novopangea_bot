{"ast":null,"code":"const _ = require('lodash');\nconst fetchAccountPlantsPower = require('./api/fetchAccountPlantsPower');\nconst mintFruits = require('./actions/mintFruits');\nconst PLANTS = require('./configs/PLANTS');\nconst NUM_MINTING_FRUITS = 10;\nconst NUM_CHUNKS = 3;\nconst mintFruitsCalcNextAction = async ({\n  accountName\n}) => {\n  const accountPlants = await fetchAccountPlantsPower({\n    accountName: '5oyiw.wam'\n  });\n  const mingingTemplateActions = _(accountPlants).map(plant => _(_.range(_.floor(plant.numFruits))).map(() => plant).value()).flatten().map(plant => PLANTS.find(p => p.id === plant.id).fruitTemplateId).chunk(NUM_MINTING_FRUITS).slice(0, NUM_CHUNKS).map(mintingFruits => mintFruits({\n    accountName,\n    mintingFruits\n  })).flatten().value();\n  if (mingingTemplateActions.length > 0) {\n    return {\n      action: 'minting_fruits',\n      actions: mingingTemplateActions,\n      message: `Minting fruits`\n    };\n  }\n  return {\n    action: 'wait',\n    message: `Nothing to claim`\n  };\n};\nmodule.exports = mintFruitsCalcNextAction;","map":{"version":3,"names":["_","require","fetchAccountPlantsPower","mintFruits","PLANTS","NUM_MINTING_FRUITS","NUM_CHUNKS","mintFruitsCalcNextAction","accountName","accountPlants","mingingTemplateActions","map","plant","range","floor","numFruits","value","flatten","find","p","id","fruitTemplateId","chunk","slice","mintingFruits","length","action","actions","message","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/beastgarden/plants/mintFruitsCalcNextAction.js"],"sourcesContent":["const _ = require('lodash');\nconst fetchAccountPlantsPower = require('./api/fetchAccountPlantsPower');\nconst mintFruits = require('./actions/mintFruits');\nconst PLANTS = require('./configs/PLANTS');\n\nconst NUM_MINTING_FRUITS = 10;\nconst NUM_CHUNKS = 3;\n\nconst mintFruitsCalcNextAction = async ({accountName}) => {\n    const accountPlants = await fetchAccountPlantsPower({\n        accountName: '5oyiw.wam',\n    });\n\n    const mingingTemplateActions = _(accountPlants)\n        .map(plant => _(_.range(_.floor(plant.numFruits)))\n            .map(() => plant)\n            .value()\n        )\n        .flatten()\n        .map(plant => PLANTS.find(p => p.id === plant.id).fruitTemplateId)\n        .chunk(NUM_MINTING_FRUITS)\n        .slice(0, NUM_CHUNKS)\n        .map(mintingFruits => mintFruits({\n            accountName,\n            mintingFruits,\n        }))\n        .flatten()\n        .value();\n    \n    if (mingingTemplateActions.length > 0) {\n        return {\n            action: 'minting_fruits',\n            actions: mingingTemplateActions,\n            message: `Minting fruits`,\n        };\n    }\n\n    return {\n        action: 'wait',\n        message: `Nothing to claim`,\n    };\n};\n\nmodule.exports = mintFruitsCalcNextAction;"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AACxE,MAAME,UAAU,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAClD,MAAMG,MAAM,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAE1C,MAAMI,kBAAkB,GAAG,EAAE;AAC7B,MAAMC,UAAU,GAAG,CAAC;AAEpB,MAAMC,wBAAwB,GAAG,MAAAA,CAAO;EAACC;AAAW,CAAC,KAAK;EACtD,MAAMC,aAAa,GAAG,MAAMP,uBAAuB,CAAC;IAChDM,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,MAAME,sBAAsB,GAAGV,CAAC,CAACS,aAAa,CAAC,CAC1CE,GAAG,CAACC,KAAK,IAAIZ,CAAC,CAACA,CAAC,CAACa,KAAK,CAACb,CAAC,CAACc,KAAK,CAACF,KAAK,CAACG,SAAS,CAAC,CAAC,CAAC,CAC7CJ,GAAG,CAAC,MAAMC,KAAK,CAAC,CAChBI,KAAK,CAAC,CACX,CAAC,CACAC,OAAO,CAAC,CAAC,CACTN,GAAG,CAACC,KAAK,IAAIR,MAAM,CAACc,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKR,KAAK,CAACQ,EAAE,CAAC,CAACC,eAAe,CAAC,CACjEC,KAAK,CAACjB,kBAAkB,CAAC,CACzBkB,KAAK,CAAC,CAAC,EAAEjB,UAAU,CAAC,CACpBK,GAAG,CAACa,aAAa,IAAIrB,UAAU,CAAC;IAC7BK,WAAW;IACXgB;EACJ,CAAC,CAAC,CAAC,CACFP,OAAO,CAAC,CAAC,CACTD,KAAK,CAAC,CAAC;EAEZ,IAAIN,sBAAsB,CAACe,MAAM,GAAG,CAAC,EAAE;IACnC,OAAO;MACHC,MAAM,EAAE,gBAAgB;MACxBC,OAAO,EAAEjB,sBAAsB;MAC/BkB,OAAO,EAAG;IACd,CAAC;EACL;EAEA,OAAO;IACHF,MAAM,EAAE,MAAM;IACdE,OAAO,EAAG;EACd,CAAC;AACL,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGvB,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}