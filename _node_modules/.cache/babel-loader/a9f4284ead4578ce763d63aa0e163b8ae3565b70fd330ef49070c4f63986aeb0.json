{"ast":null,"code":"const qs = require('query-string');\nconst _ = require('lodash');\nconst sleep = require('../../utils/sleep');\nconst API_ENDPOINTS = require('../consts/API_ENGPOINTS');\nconst URLS = {\n  [API_ENDPOINTS.ASSETS]: 'https://wax.api.atomicassets.io/atomicmarket/v1/assets/',\n  [API_ENDPOINTS.ACCOUNTS]: 'https://wax.api.atomicassets.io/atomicassets/v1/accounts/',\n  [API_ENDPOINTS.SALES]: 'https://wax.api.atomicassets.io/atomicmarket/v2/sales/',\n  [API_ENDPOINTS.TEMPLATES]: 'https://wax.api.atomicassets.io/atomicassets/v1/templates/',\n  [API_ENDPOINTS.TEMPLATES_STATS]: 'https://wax.api.atomichub.io/atomicassets/v1/templates/${template_id}/stats',\n  [API_ENDPOINTS.LOGS]: 'https://wax.api.atomicassets.io/atomicassets/v1/assets/${asset_id}/logs/',\n  [API_ENDPOINTS.TRANSFERS]: 'https://wax.api.atomicassets.io/atomicassets/v1/transfers/'\n};\nconst MIN_POSTPONE_REQUEST_TIME = 500;\nlet postponeRequestTime = MIN_POSTPONE_REQUEST_TIME;\nconst fetchAtomichub = async ({\n  type,\n  params\n}) => {\n  let url = URLS[type];\n  let _param = params;\n  switch (type) {\n    case API_ENDPOINTS.LOGS:\n      url = url.replace('${asset_id}', params.asset_id);\n      _param = _.omit(params, 'asset_id');\n      break;\n  }\n  if (url == null) {\n    throw new Error(`Atomic hub utils: type ${type} is not found`);\n  }\n  const atomicAssetsUrl = `${url}?${qs.stringify(_param)}`;\n  console.log(`Loading [${type}] page=[${_param.page}] ${atomicAssetsUrl}`);\n  while (true) {\n    const res = await fetch(atomicAssetsUrl, {\n      headers: new Headers({\n        mode: 'no-cors'\n      })\n    });\n    const data = await res.json();\n    if (!data.success) {\n      if (data.message === 'Rate limit') {\n        postponeRequestTime = postponeRequestTime * 2;\n        console.log(`Wait ${postponeRequestTime}ms befor making another AH request`);\n        await sleep(postponeRequestTime);\n      }\n      continue;\n    }\n    postponeRequestTime = MIN_POSTPONE_REQUEST_TIME;\n    return data;\n  }\n};\nmodule.exports = fetchAtomichub;","map":{"version":3,"names":["qs","require","_","sleep","API_ENDPOINTS","URLS","ASSETS","ACCOUNTS","SALES","TEMPLATES","TEMPLATES_STATS","LOGS","TRANSFERS","MIN_POSTPONE_REQUEST_TIME","postponeRequestTime","fetchAtomichub","type","params","url","_param","replace","asset_id","omit","Error","atomicAssetsUrl","stringify","console","log","page","res","fetch","headers","Headers","mode","data","json","success","message","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/atomicassets/utils/fetchAtomichub.js"],"sourcesContent":["const qs = require('query-string');\nconst _ = require('lodash');\nconst sleep = require('../../utils/sleep');\nconst API_ENDPOINTS = require('../consts/API_ENGPOINTS');\n\nconst URLS = {\n    [API_ENDPOINTS.ASSETS]: 'https://wax.api.atomicassets.io/atomicmarket/v1/assets/',\n    [API_ENDPOINTS.ACCOUNTS]: 'https://wax.api.atomicassets.io/atomicassets/v1/accounts/',\n    [API_ENDPOINTS.SALES]: 'https://wax.api.atomicassets.io/atomicmarket/v2/sales/',\n    [API_ENDPOINTS.TEMPLATES]: 'https://wax.api.atomicassets.io/atomicassets/v1/templates/',\n    [API_ENDPOINTS.TEMPLATES_STATS]: 'https://wax.api.atomichub.io/atomicassets/v1/templates/${template_id}/stats',\n    [API_ENDPOINTS.LOGS]: 'https://wax.api.atomicassets.io/atomicassets/v1/assets/${asset_id}/logs/',\n    [API_ENDPOINTS.TRANSFERS]: 'https://wax.api.atomicassets.io/atomicassets/v1/transfers/',\n};\n\nconst MIN_POSTPONE_REQUEST_TIME = 500;\nlet postponeRequestTime = MIN_POSTPONE_REQUEST_TIME;\n\nconst fetchAtomichub = async ({\n    type,\n    params,\n}) => {\n    let url = URLS[type];\n    let _param = params;\n    switch (type) {\n        case API_ENDPOINTS.LOGS:\n            url = url.replace('${asset_id}', params.asset_id);\n            _param = _.omit(params, 'asset_id');\n            break;\n    }\n    if (url == null) {\n        throw new Error(`Atomic hub utils: type ${type} is not found`);\n    }\n    const atomicAssetsUrl = `${url}?${qs.stringify(_param)}`;\n    console.log(`Loading [${type}] page=[${_param.page}] ${atomicAssetsUrl}`);\n\n    while (true) {\n        const res = await fetch(atomicAssetsUrl, {\n            headers: new Headers({\n                mode: 'no-cors',\n            }),\n        });\n        const data = await res.json();\n        if (!data.success) {\n            if (data.message === 'Rate limit') {\n                postponeRequestTime = postponeRequestTime * 2;\n                console.log(`Wait ${postponeRequestTime}ms befor making another AH request`);\n                await sleep(postponeRequestTime);\n            }\n            \n            continue;\n        }\n\n        postponeRequestTime = MIN_POSTPONE_REQUEST_TIME;\n        return data;\n    }\n};\n\nmodule.exports = fetchAtomichub;\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,cAAc,CAAC;AAClC,MAAMC,CAAC,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAME,KAAK,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAC1C,MAAMG,aAAa,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAExD,MAAMI,IAAI,GAAG;EACT,CAACD,aAAa,CAACE,MAAM,GAAG,yDAAyD;EACjF,CAACF,aAAa,CAACG,QAAQ,GAAG,2DAA2D;EACrF,CAACH,aAAa,CAACI,KAAK,GAAG,wDAAwD;EAC/E,CAACJ,aAAa,CAACK,SAAS,GAAG,4DAA4D;EACvF,CAACL,aAAa,CAACM,eAAe,GAAG,6EAA6E;EAC9G,CAACN,aAAa,CAACO,IAAI,GAAG,0EAA0E;EAChG,CAACP,aAAa,CAACQ,SAAS,GAAG;AAC/B,CAAC;AAED,MAAMC,yBAAyB,GAAG,GAAG;AACrC,IAAIC,mBAAmB,GAAGD,yBAAyB;AAEnD,MAAME,cAAc,GAAG,MAAAA,CAAO;EAC1BC,IAAI;EACJC;AACJ,CAAC,KAAK;EACF,IAAIC,GAAG,GAAGb,IAAI,CAACW,IAAI,CAAC;EACpB,IAAIG,MAAM,GAAGF,MAAM;EACnB,QAAQD,IAAI;IACR,KAAKZ,aAAa,CAACO,IAAI;MACnBO,GAAG,GAAGA,GAAG,CAACE,OAAO,CAAC,aAAa,EAAEH,MAAM,CAACI,QAAQ,CAAC;MACjDF,MAAM,GAAGjB,CAAC,CAACoB,IAAI,CAACL,MAAM,EAAE,UAAU,CAAC;MACnC;EACR;EACA,IAAIC,GAAG,IAAI,IAAI,EAAE;IACb,MAAM,IAAIK,KAAK,CAAE,0BAAyBP,IAAK,eAAc,CAAC;EAClE;EACA,MAAMQ,eAAe,GAAI,GAAEN,GAAI,IAAGlB,EAAE,CAACyB,SAAS,CAACN,MAAM,CAAE,EAAC;EACxDO,OAAO,CAACC,GAAG,CAAE,YAAWX,IAAK,WAAUG,MAAM,CAACS,IAAK,KAAIJ,eAAgB,EAAC,CAAC;EAEzE,OAAO,IAAI,EAAE;IACT,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAACN,eAAe,EAAE;MACrCO,OAAO,EAAE,IAAIC,OAAO,CAAC;QACjBC,IAAI,EAAE;MACV,CAAC;IACL,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAC7B,IAAI,CAACD,IAAI,CAACE,OAAO,EAAE;MACf,IAAIF,IAAI,CAACG,OAAO,KAAK,YAAY,EAAE;QAC/BvB,mBAAmB,GAAGA,mBAAmB,GAAG,CAAC;QAC7CY,OAAO,CAACC,GAAG,CAAE,QAAOb,mBAAoB,oCAAmC,CAAC;QAC5E,MAAMX,KAAK,CAACW,mBAAmB,CAAC;MACpC;MAEA;IACJ;IAEAA,mBAAmB,GAAGD,yBAAyB;IAC/C,OAAOqB,IAAI;EACf;AACJ,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGxB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}