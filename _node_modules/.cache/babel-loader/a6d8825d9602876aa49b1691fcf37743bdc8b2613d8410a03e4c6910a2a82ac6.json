{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha256 = exports.generateKeyPair = exports.constructElliptic = exports.Signature = exports.PublicKey = exports.PrivateKey = void 0;\nvar elliptic_1 = require(\"elliptic\");\nvar hash = require(\"hash.js\");\nvar eosjs_numeric_1 = require(\"./eosjs-numeric\");\nvar PublicKey_1 = require(\"./PublicKey\");\nvar PrivateKey_1 = require(\"./PrivateKey\");\nvar PrivateKey_2 = require(\"./PrivateKey\");\nObject.defineProperty(exports, \"PrivateKey\", {\n  enumerable: true,\n  get: function get() {\n    return PrivateKey_2.PrivateKey;\n  }\n});\nvar PublicKey_2 = require(\"./PublicKey\");\nObject.defineProperty(exports, \"PublicKey\", {\n  enumerable: true,\n  get: function get() {\n    return PublicKey_2.PublicKey;\n  }\n});\nvar Signature_1 = require(\"./Signature\");\nObject.defineProperty(exports, \"Signature\", {\n  enumerable: true,\n  get: function get() {\n    return Signature_1.Signature;\n  }\n});\n/** Construct the elliptic curve object based on key type */\nvar constructElliptic = function constructElliptic(type) {\n  if (type === eosjs_numeric_1.KeyType.k1) {\n    return new elliptic_1.ec('secp256k1');\n  }\n  return new elliptic_1.ec('p256');\n};\nexports.constructElliptic = constructElliptic;\nvar generateKeyPair = function generateKeyPair(type, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (!options.secureEnv) {\n    throw new Error('Key generation is completely INSECURE in production environments in the browser. ' + 'If you are absolutely certain this does NOT describe your environment, set `secureEnv` in your ' + 'options to `true`.  If this does describe your environment and you set `secureEnv` to `true`, ' + 'YOU DO SO AT YOUR OWN RISK AND THE RISK OF YOUR USERS.');\n  }\n  var ec;\n  if (type === eosjs_numeric_1.KeyType.k1) {\n    ec = new elliptic_1.ec('secp256k1');\n  } else {\n    ec = new elliptic_1.ec('p256');\n  }\n  var ellipticKeyPair = ec.genKeyPair(options.ecOptions);\n  var publicKey = PublicKey_1.PublicKey.fromElliptic(ellipticKeyPair, type, ec);\n  var privateKey = PrivateKey_1.PrivateKey.fromElliptic(ellipticKeyPair, type, ec);\n  return {\n    publicKey: publicKey,\n    privateKey: privateKey\n  };\n};\nexports.generateKeyPair = generateKeyPair;\nvar sha256 = function sha256(data) {\n  return hash.sha256().update(data).digest();\n};\nexports.sha256 = sha256;","map":{"version":3,"names":["elliptic_1","require","hash","eosjs_numeric_1","PublicKey_1","PrivateKey_1","PrivateKey_2","Object","defineProperty","exports","enumerable","get","PrivateKey","PublicKey_2","PublicKey","Signature_1","Signature","constructElliptic","type","KeyType","k1","ec","generateKeyPair","options","secureEnv","Error","ellipticKeyPair","genKeyPair","ecOptions","publicKey","fromElliptic","privateKey","sha256","data","update","digest"],"sources":["../src/eosjs-key-conversions.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,IAAA,GAAAD,OAAA;AACA,IAAAE,eAAA,GAAAF,OAAA;AACA,IAAAG,WAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAJ,OAAA;AAEA,IAAAK,YAAA,GAAAL,OAAA;AAASM,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAL,YAAA,CAAAM,UAAU;EAAA;AAAA;AACnB,IAAAC,WAAA,GAAAZ,OAAA;AAASM,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAE,WAAA,CAAAC,SAAS;EAAA;AAAA;AAClB,IAAAC,WAAA,GAAAd,OAAA;AAASM,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAI,WAAA,CAAAC,SAAS;EAAA;AAAA;AAElB;AACO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,IAAa;EAC3C,IAAIA,IAAI,KAAKf,eAAA,CAAAgB,OAAO,CAACC,EAAE,EAAE;IACrB,OAAO,IAAIpB,UAAA,CAAAqB,EAAE,CAAC,WAAW,CAAC;;EAE9B,OAAO,IAAIrB,UAAA,CAAAqB,EAAE,CAAC,MAAM,CAAC;AACzB,CAAC;AALYZ,OAAA,CAAAQ,iBAAiB,GAAAA,iBAAA;AAOvB,IAAMK,eAAe,GAAG,SAAlBA,eAAeA,CACxBJ,IAAa,EAAEK,OAAuE;EAAvE,IAAAA,OAAA;IAAAA,OAAA,KAAuE;EAAA;EAEtF,IAAI,CAACA,OAAO,CAACC,SAAS,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,mFAAmF,GAC/F,iGAAiG,GACjG,gGAAgG,GAChG,wDAAwD,CAAC;;EAEjE,IAAIJ,EAAE;EACN,IAAIH,IAAI,KAAKf,eAAA,CAAAgB,OAAO,CAACC,EAAE,EAAE;IACrBC,EAAE,GAAG,IAAIrB,UAAA,CAAAqB,EAAE,CAAC,WAAW,CAAC;GAC3B,MAAM;IACHA,EAAE,GAAG,IAAIrB,UAAA,CAAAqB,EAAE,CAAC,MAAM,CAAC;;EAEvB,IAAMK,eAAe,GAAGL,EAAE,CAACM,UAAU,CAACJ,OAAO,CAACK,SAAS,CAAC;EACxD,IAAMC,SAAS,GAAGzB,WAAA,CAAAU,SAAS,CAACgB,YAAY,CAACJ,eAAe,EAAER,IAAI,EAAEG,EAAE,CAAC;EACnE,IAAMU,UAAU,GAAG1B,YAAA,CAAAO,UAAU,CAACkB,YAAY,CAACJ,eAAe,EAAER,IAAI,EAAEG,EAAE,CAAC;EACrE,OAAO;IAACQ,SAAS,EAAAA,SAAA;IAAEE,UAAU,EAAAA;EAAA,CAAC;AAClC,CAAC;AAnBYtB,OAAA,CAAAa,eAAe,GAAAA,eAAA;AAqBrB,IAAMU,MAAM,GAAG,SAATA,MAAMA,CAAIC,IAAmB;EACtC,OAAO/B,IAAI,CAAC8B,MAAM,EAAE,CAACE,MAAM,CAACD,IAAI,CAAC,CAACE,MAAM,EAAE;AAC9C,CAAC;AAFY1B,OAAA,CAAAuB,MAAM,GAAAA,MAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}