{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst big_integer_1 = __importDefault(require(\"big-integer\"));\nconst DeserializationError_1 = __importDefault(require(\"../../Errors/DeserializationError\"));\nconst SerializationError_1 = __importDefault(require(\"../../Errors/SerializationError\"));\nconst Binary_1 = require(\"../Binary\");\nclass VariableIntegerParser {\n  constructor(size, unsigned) {\n    this.size = size;\n    this.unsigned = unsigned;\n  }\n  deserialize(state) {\n    let n = (0, Binary_1.varint_decode)(state);\n    if (!this.unsigned) {\n      n = (0, Binary_1.zigzag_decode)(n);\n    }\n    if (n.greaterOrEquals((0, big_integer_1.default)(2).pow(this.size * 8 - (this.unsigned ? 0 : 1)))) {\n      throw new DeserializationError_1.default('number \\'' + n.toString() + '\\' too large for given type');\n    }\n    if (this.size <= 6) {\n      return n.toJSNumber();\n    }\n    return n.toString();\n  }\n  serialize(data) {\n    let n = (0, big_integer_1.default)(data);\n    if (n.greaterOrEquals((0, big_integer_1.default)(2).pow(this.size * 8 - (this.unsigned ? 0 : 1)))) {\n      throw new SerializationError_1.default('number \\'' + n.toString() + '\\' too large for given type');\n    }\n    if (!this.unsigned) {\n      n = (0, Binary_1.zigzag_encode)(n);\n    }\n    return (0, Binary_1.varint_encode)(n);\n  }\n}\nexports.default = VariableIntegerParser;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","big_integer_1","require","DeserializationError_1","SerializationError_1","Binary_1","VariableIntegerParser","constructor","size","unsigned","deserialize","state","n","varint_decode","zigzag_decode","greaterOrEquals","default","pow","toString","toJSNumber","serialize","data","zigzag_encode","varint_encode"],"sources":["/Users/germangurov/projects/wax_bot/node_modules/atomicassets/build/Serialization/TypeParser/VariableIntegerParser.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst big_integer_1 = __importDefault(require(\"big-integer\"));\nconst DeserializationError_1 = __importDefault(require(\"../../Errors/DeserializationError\"));\nconst SerializationError_1 = __importDefault(require(\"../../Errors/SerializationError\"));\nconst Binary_1 = require(\"../Binary\");\nclass VariableIntegerParser {\n    constructor(size, unsigned) {\n        this.size = size;\n        this.unsigned = unsigned;\n    }\n    deserialize(state) {\n        let n = (0, Binary_1.varint_decode)(state);\n        if (!this.unsigned) {\n            n = (0, Binary_1.zigzag_decode)(n);\n        }\n        if (n.greaterOrEquals((0, big_integer_1.default)(2).pow(this.size * 8 - (this.unsigned ? 0 : 1)))) {\n            throw new DeserializationError_1.default('number \\'' + n.toString() + '\\' too large for given type');\n        }\n        if (this.size <= 6) {\n            return n.toJSNumber();\n        }\n        return n.toString();\n    }\n    serialize(data) {\n        let n = (0, big_integer_1.default)(data);\n        if (n.greaterOrEquals((0, big_integer_1.default)(2).pow(this.size * 8 - (this.unsigned ? 0 : 1)))) {\n            throw new SerializationError_1.default('number \\'' + n.toString() + '\\' too large for given type');\n        }\n        if (!this.unsigned) {\n            n = (0, Binary_1.zigzag_encode)(n);\n        }\n        return (0, Binary_1.varint_encode)(n);\n    }\n}\nexports.default = VariableIntegerParser;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,aAAa,GAAGP,eAAe,CAACQ,OAAO,CAAC,aAAa,CAAC,CAAC;AAC7D,MAAMC,sBAAsB,GAAGT,eAAe,CAACQ,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAC5F,MAAME,oBAAoB,GAAGV,eAAe,CAACQ,OAAO,CAAC,iCAAiC,CAAC,CAAC;AACxF,MAAMG,QAAQ,GAAGH,OAAO,CAAC,WAAW,CAAC;AACrC,MAAMI,qBAAqB,CAAC;EACxBC,WAAWA,CAACC,IAAI,EAAEC,QAAQ,EAAE;IACxB,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EACAC,WAAWA,CAACC,KAAK,EAAE;IACf,IAAIC,CAAC,GAAG,CAAC,CAAC,EAAEP,QAAQ,CAACQ,aAAa,EAAEF,KAAK,CAAC;IAC1C,IAAI,CAAC,IAAI,CAACF,QAAQ,EAAE;MAChBG,CAAC,GAAG,CAAC,CAAC,EAAEP,QAAQ,CAACS,aAAa,EAAEF,CAAC,CAAC;IACtC;IACA,IAAIA,CAAC,CAACG,eAAe,CAAC,CAAC,CAAC,EAAEd,aAAa,CAACe,OAAO,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,IAAI,CAACT,IAAI,GAAG,CAAC,IAAI,IAAI,CAACC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;MAC/F,MAAM,IAAIN,sBAAsB,CAACa,OAAO,CAAC,WAAW,GAAGJ,CAAC,CAACM,QAAQ,CAAC,CAAC,GAAG,6BAA6B,CAAC;IACxG;IACA,IAAI,IAAI,CAACV,IAAI,IAAI,CAAC,EAAE;MAChB,OAAOI,CAAC,CAACO,UAAU,CAAC,CAAC;IACzB;IACA,OAAOP,CAAC,CAACM,QAAQ,CAAC,CAAC;EACvB;EACAE,SAASA,CAACC,IAAI,EAAE;IACZ,IAAIT,CAAC,GAAG,CAAC,CAAC,EAAEX,aAAa,CAACe,OAAO,EAAEK,IAAI,CAAC;IACxC,IAAIT,CAAC,CAACG,eAAe,CAAC,CAAC,CAAC,EAAEd,aAAa,CAACe,OAAO,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,IAAI,CAACT,IAAI,GAAG,CAAC,IAAI,IAAI,CAACC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;MAC/F,MAAM,IAAIL,oBAAoB,CAACY,OAAO,CAAC,WAAW,GAAGJ,CAAC,CAACM,QAAQ,CAAC,CAAC,GAAG,6BAA6B,CAAC;IACtG;IACA,IAAI,CAAC,IAAI,CAACT,QAAQ,EAAE;MAChBG,CAAC,GAAG,CAAC,CAAC,EAAEP,QAAQ,CAACiB,aAAa,EAAEV,CAAC,CAAC;IACtC;IACA,OAAO,CAAC,CAAC,EAAEP,QAAQ,CAACkB,aAAa,EAAEX,CAAC,CAAC;EACzC;AACJ;AACAb,OAAO,CAACiB,OAAO,GAAGV,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}