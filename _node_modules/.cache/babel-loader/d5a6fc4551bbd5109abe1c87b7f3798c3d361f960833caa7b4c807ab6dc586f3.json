{"ast":null,"code":"import _ from 'lodash';\nimport { wax, execTransaction } from '../core/wax';\nimport log from '../utils/log';\nimport fetchWaxAccount from '../core/fetchWaxAccount';\n// import * as Sentry from \"@sentry/react\";\n\nimport ACCOUNT_CAPABILITIES from '../configs/ACCOUNT_CAPABILITIES';\n\n// novopangea\nimport playGameCalcNextAction from '../novopangea/playGameCalcNextAction';\n\n// core \nimport claimWaxRewardCalcNextAction from '../core/claimWaxRewardCalcNextAction';\nlet isBotStarted = false;\nconst GAMES = {\n  // beast gardens\n  BG_BATTLES: {\n    duration: 20000,\n    validatorName: 'beastgarden_battles',\n    calcNextAction: beastGardenFarmingAlphaCalcNextAction\n  },\n  BG_CLAIM: {\n    duration: 10 * 60 * 1000,\n    validatorName: 'beastgarden_claim',\n    calcNextAction: beastGardenClaimCalcNextAction\n  },\n  BG_MINTING_FRUITS: {\n    duration: 20 * 1000,\n    validatorName: 'beastgarden_minting_fruits',\n    calcNextAction: beastGardenMintFruitsCalcNextAction\n  },\n  BG_HARVESTING_FRUITS: {\n    duration: 25 * 1000,\n    validatorName: 'beastgarden_harvesting_fruits',\n    calcNextAction: harvestFruitsCalcNextAction\n  },\n  // BG_AUCTION: {\n  //   duration: 15 * 60 * 1000,\n  //   validatorName: 'beastgarden_auctions',\n  //   calcNextAction: beastGardernBidAuctionsCalcNextAction,\n  // },\n  // BG_CRAFTING: {\n  //   duration: 20 * 60 * 1000,\n  //   validatorName: 'beastgarden_crafting',\n  //   calcNextAction: beastGardenCraftCalcNextAction,\n  // },\n\n  // novarally\n  NR_RACES: {\n    duration: 20 * 1000,\n    validatorName: 'novarally_races',\n    calcNextAction: joinRaceCalcNextActionV2\n  },\n  NR_CLAIM: {\n    duration: 60 * 1000,\n    validatorName: 'novarally_claim',\n    calcNextAction: novarallyClaimCalcNextAction\n  },\n  NR_REPAIR_VEHICLES: {\n    duration: 2 * 60 * 1000,\n    validatorName: 'novarally_repair_vehicles',\n    calcNextAction: repairVehiclesCalcNextAction\n  },\n  NR_BUY_SHOP_ITEMS: {\n    duration: 20 * 1000,\n    validatorName: 'novarally_buy_shop_items',\n    calcNextAction: buyItemsCalcNextAction\n  },\n  NR_JOIN_DEATH_RALLY: {\n    duration: 10 * 1000,\n    validatorName: 'novarally_join_death_rally',\n    calcNextAction: joinTodayDeathRallyCalcNextAction\n  },\n  // novopangea\n  NP_PLAY_GAME: {\n    duration: 20 * 1000,\n    validatorName: 'novopangea_play_game',\n    calcNextAction: playGameCalcNextAction\n  },\n  // atomic hub\n  AH_SELL_ASSETS: {\n    duration: 32 * 1000,\n    validatorName: 'atomichub_sell_assets',\n    calcNextAction: announceSaleIterCalcNextAction\n  },\n  AH_SELL_ASSETS2: {\n    duration: 32 * 1000,\n    validatorName: 'atomichub_sell_assets2',\n    calcNextAction: announceSaleIterCalcNextAction2\n  },\n  AH_CANCEL_INVALID_SALES: {\n    duration: 50 * 1000,\n    validatorName: 'atomichub_cancel_invalid_sales',\n    calcNextAction: cancelInvalidSalesCalcNextAction\n  },\n  AH_BUY_ASSETS: {\n    duration: 10 * 1000,\n    validatorName: 'atomichub_buy_assets',\n    calcNextAction: buyAssetsCalcNextActions\n  },\n  // alcor\n  ALCOR_SEND_BULK_ORDERS: {\n    duration: 15 * 1000,\n    validatorName: 'alcor_send_orders',\n    calcNextAction: sendBulkOrdersCalcNextAction\n  },\n  // wax\n  CLAIM_WAX_REWARD: {\n    duration: 180 * 1000,\n    validatorName: 'claim_wax_reward',\n    calcNextAction: claimWaxRewardCalcNextAction\n  }\n\n  // ancient realms\n  // AR: {\n  //   duration: 90000,\n  //   validatorName: 'ancient_realms_fights',\n  //   calcNextAction: ancientRealmsCalcNextAction,\n  // },\n\n  // realms of arkovia\n  // ARK: {\n  //   duration: 80000,\n  //   validatorName: 'arkovia_realm_adventures',\n  //   calcNextAction: arkoviaRealmCalcNextAction,\n  // },\n\n  // minining network\n  // MN_CLAIM_SHARES: {\n  //   duration: 10 * 60 * 1000,\n  //   validatorName: 'mining_network_claim_shares',\n  //   calcNextAction: claimSharesCalcNextAction,\n  // },\n};\n\nconst startGameBot = ({\n  calcNextAction,\n  gameSettings\n}) => {\n  gameSettings.interval = setInterval(async () => {\n    const durationFromLastExec = Date.now() - gameSettings.lastTime;\n    if (durationFromLastExec < 5 * 60 * 1000 && gameSettings.isInProgress) {\n      return;\n    }\n    gameSettings.lastTime = Date.now();\n    gameSettings.isInProgress = true;\n    let signal;\n    try {\n      const account = await fetchWaxAccount({\n        accountName: wax.userAccount\n      });\n      // console.log(`WAX Account: `, account);\n      if (account.cpuLoad > 0.98) {\n        log({\n          project: gameSettings.name,\n          message: `<cpu_limit> There is no available CPU. CPU usage is ${_.round(account.cpuLoad * 100)}%`,\n          info: account\n        });\n        gameSettings.isInProgress = false;\n        return;\n      }\n      signal = await calcNextAction({\n        accountName: wax.userAccount,\n        gameSettings\n      });\n      log({\n        project: gameSettings.name,\n        message: `<${signal.action}> ${signal.message}`,\n        info: signal\n      });\n      if (signal.isMultipleTransactions) {\n        for (let i = 0; i < signal.actions.length; i++) {\n          await execTransaction({\n            project: gameSettings.name,\n            actions: signal.actions[i]\n          });\n        }\n      } else {\n        await execTransaction({\n          project: gameSettings.name,\n          actions: signal.actions\n        });\n      }\n    } catch (err) {\n      log({\n        project: gameSettings.name,\n        message: err.message,\n        info: err\n      });\n\n      // Sentry.captureEvent({\n      //   exception: err,\n      //   message: 'Bot captured error',\n      //   level: 'error',\n      //   extra: {\n      //     capability: gameSettings.name,\n      //     actions: signal.actions,\n      //   },\n      // });\n    }\n\n    gameSettings.isInProgress = false;\n  }, gameSettings.duration);\n};\nconst stopGameBot = ({\n  gameSettings\n}) => {\n  clearInterval(gameSettings.interval);\n  gameSettings.interval = null;\n  gameSettings.isInProgress = false;\n  gameSettings.lastTime = Date.now();\n};\nexport const startBot = () => {\n  if (wax.userAccount == null) {\n    console.log('Account is not logged in');\n    return;\n  }\n  if (isBotStarted) {\n    console.log('Bot is already started');\n    return;\n  }\n  isBotStarted = true;\n  const accountCapabilities = ACCOUNT_CAPABILITIES[wax.userAccount];\n  _(GAMES).forEach((gameSettings, name) => {\n    if (!accountCapabilities[gameSettings.validatorName]) {\n      console.log(`Capability ${name} turned off for ${wax.userAccount} account`);\n      return;\n    }\n    console.log(`Start ${name} bot ...`);\n    startGameBot({\n      calcNextAction: gameSettings.calcNextAction,\n      gameSettings: {\n        ...gameSettings,\n        isInProgress: false,\n        interval: null,\n        name,\n        lastTime: Date.now()\n      }\n    });\n  });\n};\nexport const stopBot = () => {\n  if (!isBotStarted) {\n    console.log('Bot is already stopped');\n    return;\n  }\n  isBotStarted = false;\n  _(GAMES).forEach((gameSettings, name) => {\n    console.log(`Canceled ${name} bot`);\n    stopGameBot({\n      gameSettings\n    });\n  });\n};","map":{"version":3,"names":["_","wax","execTransaction","log","fetchWaxAccount","ACCOUNT_CAPABILITIES","playGameCalcNextAction","claimWaxRewardCalcNextAction","isBotStarted","GAMES","BG_BATTLES","duration","validatorName","calcNextAction","beastGardenFarmingAlphaCalcNextAction","BG_CLAIM","beastGardenClaimCalcNextAction","BG_MINTING_FRUITS","beastGardenMintFruitsCalcNextAction","BG_HARVESTING_FRUITS","harvestFruitsCalcNextAction","NR_RACES","joinRaceCalcNextActionV2","NR_CLAIM","novarallyClaimCalcNextAction","NR_REPAIR_VEHICLES","repairVehiclesCalcNextAction","NR_BUY_SHOP_ITEMS","buyItemsCalcNextAction","NR_JOIN_DEATH_RALLY","joinTodayDeathRallyCalcNextAction","NP_PLAY_GAME","AH_SELL_ASSETS","announceSaleIterCalcNextAction","AH_SELL_ASSETS2","announceSaleIterCalcNextAction2","AH_CANCEL_INVALID_SALES","cancelInvalidSalesCalcNextAction","AH_BUY_ASSETS","buyAssetsCalcNextActions","ALCOR_SEND_BULK_ORDERS","sendBulkOrdersCalcNextAction","CLAIM_WAX_REWARD","startGameBot","gameSettings","interval","setInterval","durationFromLastExec","Date","now","lastTime","isInProgress","signal","account","accountName","userAccount","cpuLoad","project","name","message","round","info","action","isMultipleTransactions","i","actions","length","err","stopGameBot","clearInterval","startBot","console","accountCapabilities","forEach","stopBot"],"sources":["/Users/germangurov/projects/wax_bot/src/bot/bot.js"],"sourcesContent":["import _ from 'lodash';\n\nimport { wax, execTransaction } from '../core/wax';\nimport log from '../utils/log';\nimport fetchWaxAccount from '../core/fetchWaxAccount';\n// import * as Sentry from \"@sentry/react\";\n\nimport ACCOUNT_CAPABILITIES from '../configs/ACCOUNT_CAPABILITIES';\n\n// novopangea\nimport playGameCalcNextAction from '../novopangea/playGameCalcNextAction';\n\n// core \nimport claimWaxRewardCalcNextAction from '../core/claimWaxRewardCalcNextAction';\n\nlet isBotStarted = false;\nconst GAMES = {\n  // beast gardens\n  BG_BATTLES: {\n    duration: 20000,\n    validatorName: 'beastgarden_battles',\n    calcNextAction: beastGardenFarmingAlphaCalcNextAction,\n  },\n  BG_CLAIM: {\n    duration: 10 * 60 * 1000,\n    validatorName: 'beastgarden_claim',\n    calcNextAction: beastGardenClaimCalcNextAction,\n  },\n  BG_MINTING_FRUITS: {\n    duration: 20 * 1000,\n    validatorName: 'beastgarden_minting_fruits',\n    calcNextAction: beastGardenMintFruitsCalcNextAction,\n  },\n  BG_HARVESTING_FRUITS: {\n    duration: 25 * 1000,\n    validatorName: 'beastgarden_harvesting_fruits',\n    calcNextAction: harvestFruitsCalcNextAction,\n  },\n  // BG_AUCTION: {\n  //   duration: 15 * 60 * 1000,\n  //   validatorName: 'beastgarden_auctions',\n  //   calcNextAction: beastGardernBidAuctionsCalcNextAction,\n  // },\n  // BG_CRAFTING: {\n  //   duration: 20 * 60 * 1000,\n  //   validatorName: 'beastgarden_crafting',\n  //   calcNextAction: beastGardenCraftCalcNextAction,\n  // },\n\n  // novarally\n  NR_RACES: {\n    duration: 20 * 1000,\n    validatorName: 'novarally_races',\n    calcNextAction: joinRaceCalcNextActionV2,\n  },\n  NR_CLAIM: {\n    duration: 60 * 1000,\n    validatorName: 'novarally_claim',\n    calcNextAction: novarallyClaimCalcNextAction,\n  },\n  NR_REPAIR_VEHICLES: {\n    duration: 2 * 60 * 1000,\n    validatorName: 'novarally_repair_vehicles',\n    calcNextAction: repairVehiclesCalcNextAction\n  },\n  NR_BUY_SHOP_ITEMS: {\n    duration: 20 * 1000,\n    validatorName: 'novarally_buy_shop_items',\n    calcNextAction: buyItemsCalcNextAction\n  },\n  NR_JOIN_DEATH_RALLY: {\n    duration: 10 * 1000,\n    validatorName: 'novarally_join_death_rally',\n    calcNextAction: joinTodayDeathRallyCalcNextAction,\n  },\n  \n\n  // novopangea\n  NP_PLAY_GAME: {\n    duration: 20 * 1000,\n    validatorName: 'novopangea_play_game',\n    calcNextAction: playGameCalcNextAction,\n  },\n\n  // atomic hub\n  AH_SELL_ASSETS: {\n    duration: 32 * 1000,\n    validatorName: 'atomichub_sell_assets',\n    calcNextAction: announceSaleIterCalcNextAction,\n  },\n  AH_SELL_ASSETS2: {\n    duration: 32 * 1000,\n    validatorName: 'atomichub_sell_assets2',\n    calcNextAction: announceSaleIterCalcNextAction2,\n  },\n  AH_CANCEL_INVALID_SALES: {\n    duration: 50 * 1000,\n    validatorName: 'atomichub_cancel_invalid_sales',\n    calcNextAction: cancelInvalidSalesCalcNextAction,\n  },\n  AH_BUY_ASSETS: {\n    duration: 10 * 1000,\n    validatorName: 'atomichub_buy_assets',\n    calcNextAction: buyAssetsCalcNextActions,\n  },\n\n  // alcor\n  ALCOR_SEND_BULK_ORDERS: {\n    duration: 15 * 1000,\n    validatorName: 'alcor_send_orders',\n    calcNextAction: sendBulkOrdersCalcNextAction,\n  },\n\n  // wax\n  CLAIM_WAX_REWARD: {\n    duration: 180 * 1000,\n    validatorName: 'claim_wax_reward',\n    calcNextAction: claimWaxRewardCalcNextAction,\n  },\n\n\n\n\n\n  // ancient realms\n  // AR: {\n  //   duration: 90000,\n  //   validatorName: 'ancient_realms_fights',\n  //   calcNextAction: ancientRealmsCalcNextAction,\n  // },\n\n  // realms of arkovia\n  // ARK: {\n  //   duration: 80000,\n  //   validatorName: 'arkovia_realm_adventures',\n  //   calcNextAction: arkoviaRealmCalcNextAction,\n  // },\n\n  // minining network\n  // MN_CLAIM_SHARES: {\n  //   duration: 10 * 60 * 1000,\n  //   validatorName: 'mining_network_claim_shares',\n  //   calcNextAction: claimSharesCalcNextAction,\n  // },\n};\n\nconst startGameBot = ({ calcNextAction, gameSettings }) => {\n  gameSettings.interval = setInterval(async () => {\n    const durationFromLastExec = Date.now() - gameSettings.lastTime;\n    if (durationFromLastExec < 5 * 60 * 1000 && gameSettings.isInProgress) {\n      return;\n    }\n    gameSettings.lastTime = Date.now();\n    gameSettings.isInProgress = true;\n    let signal;\n    try {\n      const account = await fetchWaxAccount({\n        accountName: wax.userAccount,\n      });\n      // console.log(`WAX Account: `, account);\n      if (account.cpuLoad > 0.98) {\n        log({\n          project: gameSettings.name,\n          message: `<cpu_limit> There is no available CPU. CPU usage is ${_.round(\n            account.cpuLoad * 100,\n          )}%`,\n          info: account,\n        });\n        gameSettings.isInProgress = false;\n        return;\n      }\n\n      signal = await calcNextAction({\n        accountName: wax.userAccount,\n        gameSettings,\n      });\n      log({\n        project: gameSettings.name,\n        message: `<${signal.action}> ${signal.message}`,\n        info: signal,\n      });\n      if (signal.isMultipleTransactions) {\n        for (let i = 0; i < signal.actions.length; i++) {\n          await execTransaction({\n            project: gameSettings.name,\n            actions: signal.actions[i],\n          });  \n        }\n      } else {\n        await execTransaction({\n          project: gameSettings.name,\n          actions: signal.actions,\n        });\n      }\n    } catch (err) {\n      log({\n        project: gameSettings.name,\n        message: err.message,\n        info: err,\n      });\n\n      // Sentry.captureEvent({\n      //   exception: err,\n      //   message: 'Bot captured error',\n      //   level: 'error',\n      //   extra: {\n      //     capability: gameSettings.name,\n      //     actions: signal.actions,\n      //   },\n      // });\n    }\n    gameSettings.isInProgress = false;\n  }, gameSettings.duration);\n};\n\nconst stopGameBot = ({ gameSettings }) => {\n  clearInterval(gameSettings.interval);\n  gameSettings.interval = null;\n  gameSettings.isInProgress = false;\n  gameSettings.lastTime = Date.now();\n};\n\nexport const startBot = () => {\n  if (wax.userAccount == null) {\n    console.log('Account is not logged in');\n    return;\n  }\n  if (isBotStarted) {\n    console.log('Bot is already started');\n    return;\n  }\n  isBotStarted = true;\n\n  const accountCapabilities = ACCOUNT_CAPABILITIES[wax.userAccount];\n\n  _(GAMES)\n    .forEach((gameSettings, name) => {\n      if (!accountCapabilities[gameSettings.validatorName]) {\n        console.log(`Capability ${name} turned off for ${wax.userAccount} account`);\n        return;\n      }\n    \n      console.log(`Start ${name} bot ...`);\n\n      startGameBot({\n        calcNextAction: gameSettings.calcNextAction,\n        gameSettings: {\n          ...gameSettings,\n          isInProgress: false,\n          interval: null,\n          name,\n          lastTime: Date.now(),\n        },\n      });\n    });\n};\n\nexport const stopBot = () => {\n  if (!isBotStarted) {\n    console.log('Bot is already stopped');\n    return;\n  }\n\n  isBotStarted = false;\n\n  _(GAMES)\n    .forEach((gameSettings, name) => {\n      console.log(`Canceled ${name} bot`);\n      stopGameBot({\n        gameSettings,\n      });\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}