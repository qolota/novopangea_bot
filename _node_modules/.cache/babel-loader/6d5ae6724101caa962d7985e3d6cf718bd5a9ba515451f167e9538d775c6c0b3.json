{"ast":null,"code":"const _ = require('lodash');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst GEAR_PRICE = require('../consts/GEAR_PRICE');\nconst QUALITY_TOKENS = require('../consts/QUALITY_TOKENS');\nconst AH_CONTRACTS = require('../../atomicassets/consts/CONTRACTS');\nconst joinRaceV2 = ({\n  accountName,\n  vehicleId,\n  driverIds,\n  gear,\n  raceQuality,\n  useBoost,\n  boost\n}) => {\n  const tokenName = QUALITY_TOKENS[raceQuality];\n  const _useBoost = useBoost && boost != null;\n  return _.compact([_useBoost ? {\n    account: AH_CONTRACTS.ATOMIC_ASSETS,\n    name: 'burnasset',\n    authorization: [{\n      actor: accountName,\n      permission: 'active'\n    }],\n    data: {\n      asset_owner: accountName,\n      asset_id: boost.id\n    }\n  } : null, gear > 0 ? {\n    account: CONTRACTS.TOKEN,\n    name: 'transfer',\n    authorization: [{\n      actor: accountName,\n      permission: 'active'\n    }],\n    data: {\n      from: accountName,\n      to: CONTRACTS.APP_V2,\n      quantity: `${GEAR_PRICE[raceQuality][gear - 1].toFixed(0)} ${tokenName}`,\n      memo: ''\n    }\n  } : null, {\n    account: CONTRACTS.APP_V2,\n    name: 'join',\n    authorization: [{\n      actor: accountName,\n      permission: 'active'\n    }],\n    data: {\n      player: accountName,\n      vehicle_asset_id: vehicleId,\n      driver1_asset_id: driverIds[0],\n      driver2_asset_id: driverIds[1],\n      gear_id: gear,\n      use_boost: _useBoost,\n      races_number: 1\n    }\n  }]);\n};\nmodule.exports = joinRaceV2;","map":{"version":3,"names":["_","require","CONTRACTS","GEAR_PRICE","QUALITY_TOKENS","AH_CONTRACTS","joinRaceV2","accountName","vehicleId","driverIds","gear","raceQuality","useBoost","boost","tokenName","_useBoost","compact","account","ATOMIC_ASSETS","name","authorization","actor","permission","data","asset_owner","asset_id","id","TOKEN","from","to","APP_V2","quantity","toFixed","memo","player","vehicle_asset_id","driver1_asset_id","driver2_asset_id","gear_id","use_boost","races_number","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novarallywax/actions/joinRaceV2.js"],"sourcesContent":["const _ = require('lodash');\n\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst GEAR_PRICE = require('../consts/GEAR_PRICE');\nconst QUALITY_TOKENS = require('../consts/QUALITY_TOKENS');\nconst AH_CONTRACTS = require('../../atomicassets/consts/CONTRACTS');\n\nconst joinRaceV2 = ({\n    accountName,\n    vehicleId,\n    driverIds,\n    gear,\n    raceQuality,\n    useBoost,\n    boost,\n}) => {\n    const tokenName = QUALITY_TOKENS[raceQuality];\n    const _useBoost = useBoost && boost != null;\n    \n    return _.compact([\n        _useBoost\n            ? {\n                account: AH_CONTRACTS.ATOMIC_ASSETS,\n                name: 'burnasset',\n                authorization: [\n                    {\n                        actor: accountName,\n                        permission: 'active',\n                    },\n                ],\n                data: {\n                    asset_owner: accountName,\n                    asset_id: boost.id,\n                },\n            }\n            : null,\n        gear > 0\n            ? {\n                account: CONTRACTS.TOKEN,\n                name: 'transfer',\n                authorization: [\n                    {\n                        actor: accountName,\n                        permission: 'active',\n                    },\n                ],\n                data: {\n                    from: accountName,\n                    to: CONTRACTS.APP_V2,\n                    quantity: `${GEAR_PRICE[raceQuality][gear - 1].toFixed(0)} ${tokenName}`,\n                    memo: '',\n                },\n            }\n            : null,\n        {\n            account: CONTRACTS.APP_V2,\n            name: 'join',\n            authorization: [\n                {\n                    actor: accountName,\n                    permission: 'active',\n                },\n            ],\n            data: {\n                player: accountName,\n                vehicle_asset_id: vehicleId,\n                driver1_asset_id: driverIds[0],\n                driver2_asset_id: driverIds[1],\n                gear_id: gear,\n                use_boost: _useBoost,\n                races_number: 1,\n            },\n        },\n    ]);\n};\n\nmodule.exports = joinRaceV2;"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE3B,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAME,UAAU,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAClD,MAAMG,cAAc,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AAC1D,MAAMI,YAAY,GAAGJ,OAAO,CAAC,qCAAqC,CAAC;AAEnE,MAAMK,UAAU,GAAGA,CAAC;EAChBC,WAAW;EACXC,SAAS;EACTC,SAAS;EACTC,IAAI;EACJC,WAAW;EACXC,QAAQ;EACRC;AACJ,CAAC,KAAK;EACF,MAAMC,SAAS,GAAGV,cAAc,CAACO,WAAW,CAAC;EAC7C,MAAMI,SAAS,GAAGH,QAAQ,IAAIC,KAAK,IAAI,IAAI;EAE3C,OAAOb,CAAC,CAACgB,OAAO,CAAC,CACbD,SAAS,GACH;IACEE,OAAO,EAAEZ,YAAY,CAACa,aAAa;IACnCC,IAAI,EAAE,WAAW;IACjBC,aAAa,EAAE,CACX;MACIC,KAAK,EAAEd,WAAW;MAClBe,UAAU,EAAE;IAChB,CAAC,CACJ;IACDC,IAAI,EAAE;MACFC,WAAW,EAAEjB,WAAW;MACxBkB,QAAQ,EAAEZ,KAAK,CAACa;IACpB;EACJ,CAAC,GACC,IAAI,EACVhB,IAAI,GAAG,CAAC,GACF;IACEO,OAAO,EAAEf,SAAS,CAACyB,KAAK;IACxBR,IAAI,EAAE,UAAU;IAChBC,aAAa,EAAE,CACX;MACIC,KAAK,EAAEd,WAAW;MAClBe,UAAU,EAAE;IAChB,CAAC,CACJ;IACDC,IAAI,EAAE;MACFK,IAAI,EAAErB,WAAW;MACjBsB,EAAE,EAAE3B,SAAS,CAAC4B,MAAM;MACpBC,QAAQ,EAAG,GAAE5B,UAAU,CAACQ,WAAW,CAAC,CAACD,IAAI,GAAG,CAAC,CAAC,CAACsB,OAAO,CAAC,CAAC,CAAE,IAAGlB,SAAU,EAAC;MACxEmB,IAAI,EAAE;IACV;EACJ,CAAC,GACC,IAAI,EACV;IACIhB,OAAO,EAAEf,SAAS,CAAC4B,MAAM;IACzBX,IAAI,EAAE,MAAM;IACZC,aAAa,EAAE,CACX;MACIC,KAAK,EAAEd,WAAW;MAClBe,UAAU,EAAE;IAChB,CAAC,CACJ;IACDC,IAAI,EAAE;MACFW,MAAM,EAAE3B,WAAW;MACnB4B,gBAAgB,EAAE3B,SAAS;MAC3B4B,gBAAgB,EAAE3B,SAAS,CAAC,CAAC,CAAC;MAC9B4B,gBAAgB,EAAE5B,SAAS,CAAC,CAAC,CAAC;MAC9B6B,OAAO,EAAE5B,IAAI;MACb6B,SAAS,EAAExB,SAAS;MACpByB,YAAY,EAAE;IAClB;EACJ,CAAC,CACJ,CAAC;AACN,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGpC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}