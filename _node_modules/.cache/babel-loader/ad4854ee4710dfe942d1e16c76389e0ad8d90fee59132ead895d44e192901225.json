{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst DeserializationError_1 = __importDefault(require(\"../../Errors/DeserializationError\"));\nconst SerializationError_1 = __importDefault(require(\"../../Errors/SerializationError\"));\nclass FixedParser {\n  constructor(size) {\n    this.size = size;\n  }\n  deserialize(state) {\n    state.position += this.size;\n    const data = state.data.slice(state.position - this.size, state.position);\n    if (data.length !== this.size) {\n      throw new DeserializationError_1.default('FixedParser: read past end');\n    }\n    return data;\n  }\n  serialize(data) {\n    if (data.length !== this.size) {\n      throw new SerializationError_1.default(`input data does not conform fixed size`);\n    }\n    return data;\n  }\n}\nexports.default = FixedParser;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","DeserializationError_1","require","SerializationError_1","FixedParser","constructor","size","deserialize","state","position","data","slice","length","default","serialize"],"sources":["/Users/germangurov/projects/wax_bot/node_modules/atomicassets/build/Serialization/TypeParser/FixedParser.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DeserializationError_1 = __importDefault(require(\"../../Errors/DeserializationError\"));\nconst SerializationError_1 = __importDefault(require(\"../../Errors/SerializationError\"));\nclass FixedParser {\n    constructor(size) {\n        this.size = size;\n    }\n    deserialize(state) {\n        state.position += this.size;\n        const data = state.data.slice(state.position - this.size, state.position);\n        if (data.length !== this.size) {\n            throw new DeserializationError_1.default('FixedParser: read past end');\n        }\n        return data;\n    }\n    serialize(data) {\n        if (data.length !== this.size) {\n            throw new SerializationError_1.default(`input data does not conform fixed size`);\n        }\n        return data;\n    }\n}\nexports.default = FixedParser;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,sBAAsB,GAAGP,eAAe,CAACQ,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAC5F,MAAMC,oBAAoB,GAAGT,eAAe,CAACQ,OAAO,CAAC,iCAAiC,CAAC,CAAC;AACxF,MAAME,WAAW,CAAC;EACdC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;EACpB;EACAC,WAAWA,CAACC,KAAK,EAAE;IACfA,KAAK,CAACC,QAAQ,IAAI,IAAI,CAACH,IAAI;IAC3B,MAAMI,IAAI,GAAGF,KAAK,CAACE,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,QAAQ,GAAG,IAAI,CAACH,IAAI,EAAEE,KAAK,CAACC,QAAQ,CAAC;IACzE,IAAIC,IAAI,CAACE,MAAM,KAAK,IAAI,CAACN,IAAI,EAAE;MAC3B,MAAM,IAAIL,sBAAsB,CAACY,OAAO,CAAC,4BAA4B,CAAC;IAC1E;IACA,OAAOH,IAAI;EACf;EACAI,SAASA,CAACJ,IAAI,EAAE;IACZ,IAAIA,IAAI,CAACE,MAAM,KAAK,IAAI,CAACN,IAAI,EAAE;MAC3B,MAAM,IAAIH,oBAAoB,CAACU,OAAO,CAAE,wCAAuC,CAAC;IACpF;IACA,OAAOH,IAAI;EACf;AACJ;AACAX,OAAO,CAACc,OAAO,GAAGT,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}