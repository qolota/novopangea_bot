{"ast":null,"code":"const _ = require('lodash');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchWaxData = require('../../core/fetchWaxData');\nconst fetchLastClaimTime = async ({\n  accountName\n}) => {\n  const rows = await fetchWaxData({\n    code: CONTRACTS.STAKING,\n    index_position: 1,\n    json: true,\n    key_type: \"\",\n    limit: \"100\",\n    reverse: false,\n    scope: CONTRACTS.STAKING,\n    show_payer: false,\n    table: \"user\",\n    lower_bound: accountName,\n    upper_bound: accountName\n  });\n  if (rows.lenght === 0) {\n    return null;\n  }\n  const userStakingRaw = rows[0];\n  const lastClaimTime = _(userStakingRaw.data).map(data => data.last_claim).compact().sortBy(time => time).value()[0] * 1000;\n  return lastClaimTime;\n};\nmodule.exports = fetchLastClaimTime;","map":{"version":3,"names":["_","require","CONTRACTS","fetchWaxData","fetchLastClaimTime","accountName","rows","code","STAKING","index_position","json","key_type","limit","reverse","scope","show_payer","table","lower_bound","upper_bound","lenght","userStakingRaw","lastClaimTime","data","map","last_claim","compact","sortBy","time","value","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novarallywax/api/fetchLastClaimTime.js"],"sourcesContent":["const _ = require('lodash');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchWaxData = require('../../core/fetchWaxData');\n\nconst fetchLastClaimTime = async ({accountName}) => {\n    const rows = await fetchWaxData({\n        code: CONTRACTS.STAKING,\n        index_position: 1,\n        json: true,\n        key_type: \"\",\n        limit: \"100\",\n        reverse: false,\n        scope: CONTRACTS.STAKING,\n        show_payer: false,\n        table: \"user\",\n        lower_bound: accountName,\n        upper_bound: accountName,\n    });\n\n    if (rows.lenght === 0) {\n        return null;\n    }\n    const userStakingRaw = rows[0];\n    const lastClaimTime = _(userStakingRaw.data)\n        .map(data => data.last_claim)\n        .compact()\n        .sortBy(time => time)\n        .value()[0] * 1000;\n\n    return lastClaimTime;\n};\n\nmodule.exports = fetchLastClaimTime;"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAME,YAAY,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAEvD,MAAMG,kBAAkB,GAAG,MAAAA,CAAO;EAACC;AAAW,CAAC,KAAK;EAChD,MAAMC,IAAI,GAAG,MAAMH,YAAY,CAAC;IAC5BI,IAAI,EAAEL,SAAS,CAACM,OAAO;IACvBC,cAAc,EAAE,CAAC;IACjBC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAEZ,SAAS,CAACM,OAAO;IACxBO,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,MAAM;IACbC,WAAW,EAAEZ,WAAW;IACxBa,WAAW,EAAEb;EACjB,CAAC,CAAC;EAEF,IAAIC,IAAI,CAACa,MAAM,KAAK,CAAC,EAAE;IACnB,OAAO,IAAI;EACf;EACA,MAAMC,cAAc,GAAGd,IAAI,CAAC,CAAC,CAAC;EAC9B,MAAMe,aAAa,GAAGrB,CAAC,CAACoB,cAAc,CAACE,IAAI,CAAC,CACvCC,GAAG,CAACD,IAAI,IAAIA,IAAI,CAACE,UAAU,CAAC,CAC5BC,OAAO,CAAC,CAAC,CACTC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC,CACpBC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EAEtB,OAAOP,aAAa;AACxB,CAAC;AAEDQ,MAAM,CAACC,OAAO,GAAG1B,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}