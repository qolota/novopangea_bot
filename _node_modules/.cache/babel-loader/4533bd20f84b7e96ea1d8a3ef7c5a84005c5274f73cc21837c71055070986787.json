{"ast":null,"code":"import _regeneratorRuntime from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var fetchAllWaxData2=require('../../core/fetchAllWaxData2');var CONTRACTS=require('../consts/CONTRACTS');var fetchDistricts=require('./fetchDistricts');var convertAllCosts=require('../utils/convertAllCosts');var fetchExchange=require('./fetchExchange');var fetchNovoPrice=require('./fetchNovoPrice');var fetchLandConfigs=require('./fetchLandConfigs');var fetchRealms=require('./fetchRealms');var fetchLands=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref){var _ref$cache,cache,exchange,novoPrice,realms,districts,landConfigs,lands;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_ref$cache=_ref.cache,cache=_ref$cache===void 0?{}:_ref$cache;_context.t0=cache.exchange;if(_context.t0){_context.next=6;break;}_context.next=5;return fetchExchange();case 5:_context.t0=_context.sent;case 6:exchange=_context.t0;_context.t1=cache.novoPrice;if(_context.t1){_context.next=12;break;}_context.next=11;return fetchNovoPrice();case 11:_context.t1=_context.sent;case 12:novoPrice=_context.t1;_context.t2=cache.realms;if(_context.t2){_context.next=18;break;}_context.next=17;return fetchRealms();case 17:_context.t2=_context.sent;case 18:realms=_context.t2;_context.t3=cache.districts;if(_context.t3){_context.next=24;break;}_context.next=23;return fetchDistricts({cache:{realms:realms}});case 23:_context.t3=_context.sent;case 24:districts=_context.t3;_context.t4=cache.landConfigs;if(_context.t4){_context.next=30;break;}_context.next=29;return fetchLandConfigs({cache:{exchange:exchange,novoPrice:novoPrice}});case 29:_context.t4=_context.sent;case 30:landConfigs=_context.t4;_context.next=33;return fetchAllWaxData2({params:{code:CONTRACTS.GAME,scope:CONTRACTS.GAME,table:'land'},customProcessor:function customProcessor(_ref3){var row=_ref3.row;var config=landConfigs.find(function(config){return config.id===row.config_id;});var rentCost=convertAllCosts({costs:[row.rent===0?\"\".concat(row.rent,\" OBSD\"):row.rent],exchange:exchange,novoPrice:novoPrice});return{id:row.id,assetId:row.asset_id,owner:row.owner,renter:row.renter===''?null:row.renter,isOwnerOccupied:row.owner_occupied===1,isDistrictOwner:row.district_owned===1,isAvailableForRent:row.for_rent===1,lastStakeTime:row.last_stake*1000,rentExpireTime:row.rent_expire*1000,rentCost:rentCost,ownRentPriceObsd:config.plotRentAmount.obsdCost/config.rentTime,externalRentPriceObsd:rentCost.obsdCost/config.rentTime,config:config,district:districts.find(function(district){return district.id===row.district_id;})};}});case 33:lands=_context.sent;return _context.abrupt(\"return\",lands);case 35:case\"end\":return _context.stop();}},_callee);}));return function fetchLands(_x){return _ref2.apply(this,arguments);};}();module.exports=fetchLands;","map":{"version":3,"names":["fetchAllWaxData2","require","CONTRACTS","fetchDistricts","convertAllCosts","fetchExchange","fetchNovoPrice","fetchLandConfigs","fetchRealms","fetchLands","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","_ref$cache","cache","exchange","novoPrice","realms","districts","landConfigs","lands","wrap","_callee$","_context","prev","next","t0","sent","t1","t2","t3","t4","params","code","GAME","scope","table","customProcessor","_ref3","row","config","find","id","config_id","rentCost","costs","rent","concat","assetId","asset_id","owner","renter","isOwnerOccupied","owner_occupied","isDistrictOwner","district_owned","isAvailableForRent","for_rent","lastStakeTime","last_stake","rentExpireTime","rent_expire","ownRentPriceObsd","plotRentAmount","obsdCost","rentTime","externalRentPriceObsd","district","district_id","abrupt","stop","_x","apply","arguments","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novopangea/api/fetchLands.js"],"sourcesContent":["const fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchDistricts = require('./fetchDistricts');\nconst convertAllCosts = require('../utils/convertAllCosts');\nconst fetchExchange = require('./fetchExchange');\nconst fetchNovoPrice = require('./fetchNovoPrice');\nconst fetchLandConfigs = require('./fetchLandConfigs');\nconst fetchRealms = require('./fetchRealms');\n\nconst fetchLands = async ({\n    cache = {},\n}) => {\n    const exchange = cache.exchange || await fetchExchange();\n    const novoPrice = cache.novoPrice || await fetchNovoPrice();\n    const realms = cache.realms || await fetchRealms();\n    const districts = cache.districts || await fetchDistricts({\n        cache: {\n            realms,\n        },\n    });\n    const landConfigs = cache.landConfigs || await fetchLandConfigs({\n        cache: {\n            exchange,\n            novoPrice,\n        },\n    });\n    const lands = await fetchAllWaxData2({\n        params: {\n            code: CONTRACTS.GAME,\n            scope: CONTRACTS.GAME,\n            table: 'land',\n        },\n        customProcessor: ({row}) => {\n            const config = landConfigs.find(config => config.id === row.config_id);\n            const rentCost = convertAllCosts({\n                costs: [row.rent === 0 ? `${row.rent} OBSD` : row.rent],\n                exchange,\n                novoPrice,\n            });\n            return {\n                id: row.id,\n                assetId: row.asset_id,\n                owner: row.owner,\n                renter: row.renter === ''\n                    ? null\n                    : row.renter,\n                isOwnerOccupied: row.owner_occupied === 1,\n                isDistrictOwner: row.district_owned === 1,\n                isAvailableForRent: row.for_rent === 1,\n                lastStakeTime: row.last_stake * 1000,\n                rentExpireTime: row.rent_expire * 1000,\n                rentCost,\n                ownRentPriceObsd: config.plotRentAmount.obsdCost / config.rentTime,\n                externalRentPriceObsd: rentCost.obsdCost / config.rentTime,\n                config,\n                district: districts.find(district => district.id === row.district_id),\n            };\n        },\n    });\n\n    return lands;\n};\n\nmodule.exports = fetchLands;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}