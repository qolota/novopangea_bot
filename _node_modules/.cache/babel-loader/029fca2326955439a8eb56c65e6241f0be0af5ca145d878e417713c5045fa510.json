{"ast":null,"code":"const CONTRACTS = require('../consts/CONTRACTS');\nconst fetchWaxData = require('../../core/fetchWaxData');\nconst fetchMarketSellOrders = async ({\n  accountName,\n  dexId\n}) => {\n  const rows = await fetchWaxData({\n    code: CONTRACTS.DEX,\n    index_position: 3,\n    json: true,\n    key_type: \"i64\",\n    limit: 1000,\n    reverse: false,\n    scope: dexId,\n    show_payer: false,\n    table: \"sellorder\",\n    table_key: \"\",\n    lower_bound: accountName,\n    upper_bound: accountName\n  });\n  return rows;\n};\nmodule.exports = fetchMarketSellOrders;","map":{"version":3,"names":["CONTRACTS","require","fetchWaxData","fetchMarketSellOrders","accountName","dexId","rows","code","DEX","index_position","json","key_type","limit","reverse","scope","show_payer","table","table_key","lower_bound","upper_bound","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/alcor/api/fetchMarketSellOrders.js"],"sourcesContent":["const CONTRACTS = require('../consts/CONTRACTS');\nconst fetchWaxData = require('../../core/fetchWaxData');\n\nconst fetchMarketSellOrders = async ({accountName, dexId}) => {\n    const rows = await fetchWaxData({\n        code: CONTRACTS.DEX,\n        index_position: 3,\n        json: true,\n        key_type: \"i64\",\n        limit: 1000,\n        reverse: false,\n        scope: dexId,\n        show_payer: false,\n        table: \"sellorder\",\n        table_key: \"\",\n        lower_bound: accountName,\n        upper_bound: accountName,\n    });\n\n    return rows;\n};\n\nmodule.exports = fetchMarketSellOrders;"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAMC,YAAY,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAEvD,MAAME,qBAAqB,GAAG,MAAAA,CAAO;EAACC,WAAW;EAAEC;AAAK,CAAC,KAAK;EAC1D,MAAMC,IAAI,GAAG,MAAMJ,YAAY,CAAC;IAC5BK,IAAI,EAAEP,SAAS,CAACQ,GAAG;IACnBC,cAAc,EAAE,CAAC;IACjBC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAET,KAAK;IACZU,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,WAAW;IAClBC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAEd,WAAW;IACxBe,WAAW,EAAEf;EACjB,CAAC,CAAC;EAEF,OAAOE,IAAI;AACf,CAAC;AAEDc,MAAM,CAACC,OAAO,GAAGlB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}