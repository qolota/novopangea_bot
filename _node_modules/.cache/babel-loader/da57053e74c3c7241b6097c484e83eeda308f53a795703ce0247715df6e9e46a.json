{"ast":null,"code":"import _toConsumableArray from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";var _MIN_TRANSACTION_VALU;var _=require('lodash');var findResource=require('./findResource');var RESOURCES=require('../consts/RESOURSES');var sumResources=require('./sumResources');var equalizeResources=require('./equalizeResources');var exchangeTokens=require('../actions/exchangeTokens');var validateResourceLimit=require('./validateResourceLimit');var printBalances=require('./printBalances');var MIN_TRANSACTION_VALUE=(_MIN_TRANSACTION_VALU={},_defineProperty(_MIN_TRANSACTION_VALU,RESOURCES.NOVOE,65),_defineProperty(_MIN_TRANSACTION_VALU,RESOURCES.NOVOM,60),_defineProperty(_MIN_TRANSACTION_VALU,RESOURCES.NOVOF,55),_defineProperty(_MIN_TRANSACTION_VALU,RESOURCES.OBSD,3),_defineProperty(_MIN_TRANSACTION_VALU,RESOURCES.NOVO,1),_MIN_TRANSACTION_VALU);// 1. transfer all resources to OBSD\n// 2. transfer OBSD to NOVO\n// 3. calculate how much OBSD needed in total\n// 4. transfer NOVO to OBSD \n// 5. transfer OBSD to all other resources\nvar requestResources=function requestResources(_ref){var symbolFrom=_ref.symbolFrom,resources=_ref.resources,exchange=_ref.exchange;return _(resources).map(function(resource){var resourceExchange=exchange.find(function(e){return e.from===symbolFrom&&e.to===resource.symbol;});if(symbolFrom===resource.symbol){var _valueFrom=_.ceil(resource.value/MIN_TRANSACTION_VALUE[resource.symbol])*MIN_TRANSACTION_VALUE[resource.symbol];return{valueFrom:_valueFrom,symbolFrom:symbolFrom,valueTo:_valueFrom,symbolTo:resource.symbol};}var valueFrom=_.ceil(resource.value/resourceExchange.rate);return{valueFrom:valueFrom,symbolFrom:symbolFrom,valueTo:valueFrom*MIN_TRANSACTION_VALUE[resource.symbol],symbolTo:resource.symbol};}).value();};var exchangeResources=function exchangeResources(_ref2){var accountName=_ref2.accountName,exchange=_ref2.exchange,balances=_ref2.balances,maxBalances=_ref2.maxBalances,requestedResources=_ref2.requestedResources;var maxNoneNovaBalances=_([RESOURCES.NOVOE,RESOURCES.NOVOM,RESOURCES.NOVOF,RESOURCES.OBSD]).map(function(symbol){return findResource({resources:maxBalances,symbol:symbol});}).value();var requestedObsd=requestResources({symbolFrom:RESOURCES.OBSD,resources:requestedResources,exchange:exchange});var totalRequestedObsd=sumResources({resources:_(requestedObsd).map(function(resource){return{value:resource.valueFrom,symbol:resource.symbolFrom};}).value()});var requestedNovo=requestResources({symbolFrom:RESOURCES.NOVO,resources:totalRequestedObsd,exchange:exchange});var totalRequestedNovo=sumResources({resources:_(requestedNovo).map(function(resource){return{value:resource.valueFrom,symbol:resource.symbolFrom};}).value()});var insufficientNovo=equalizeResources({targetResources:totalRequestedNovo,currentResources:balances});if(insufficientNovo.length>0){console.log(\"Not enough resources: \".concat(printBalances({balances:insufficientNovo})));return{action:'stop',message:\"Not enough resources: \".concat(printBalances({balances:insufficientNovo}))};}var nextObsdBalance=sumResources({resources:[].concat(_toConsumableArray(balances),_toConsumableArray(_(totalRequestedNovo).map(function(res){return{value:-res.value,symbol:res.symbol};}).value()),_toConsumableArray(_(requestedNovo).map(function(res){return{value:res.valueTo,symbol:res.symbolTo};}).value()))});var isValidObsdBalance=validateResourceLimit({resources:nextObsdBalance,maxResources:maxNoneNovaBalances});if(!isValidObsdBalance){return{action:'stop',message:\"Requested more than maximum storage capacity. Next balance: \".concat(printBalances({balances:nextObsdBalance}),\". Max capacity: \").concat(printBalances({balances:maxNoneNovaBalances}))};}var nextOtherBalances=sumResources({resources:[].concat(_toConsumableArray(nextObsdBalance),_toConsumableArray(_(requestedObsd).map(function(res){return{value:-res.valueFrom,symbol:res.symbolFrom};}).value()),_toConsumableArray(_(requestedObsd).map(function(res){return{value:res.valueTo,symbol:res.symbolTo};}).value()))});var isValidOtherBalances=validateResourceLimit({resources:nextOtherBalances,maxResources:maxNoneNovaBalances});if(!isValidOtherBalances){return{action:'stop',message:\"Requested more than maximum storage capacity. Next balance: \".concat(printBalances({balances:nextOtherBalances}),\". Max capacity: \").concat(printBalances({balances:maxNoneNovaBalances}),\"\\n            \")};}var nextBalances=sumResources({resources:[].concat(_toConsumableArray(nextOtherBalances),_toConsumableArray(_(requestedResources).map(function(res){return{value:-res.value,symbol:res.symbol};}).value()))});var actions=[].concat(_toConsumableArray(_(requestedNovo).map(function(res){return exchangeTokens({accountName:accountName,valueFrom:res.valueFrom,symbolFrom:res.symbolFrom,symbolTo:res.symbolTo});}).value()),_toConsumableArray(_(requestedObsd).filter(function(res){return res.symbolTo!==RESOURCES.OBSD;}).map(function(res){return exchangeTokens({accountName:accountName,valueFrom:res.valueFrom,symbolFrom:res.symbolFrom,symbolTo:res.symbolTo});}).value()));return{nextBalances:nextBalances,actions:actions};};module.exports=exchangeResources;","map":{"version":3,"names":["_","require","findResource","RESOURCES","sumResources","equalizeResources","exchangeTokens","validateResourceLimit","printBalances","MIN_TRANSACTION_VALUE","_MIN_TRANSACTION_VALU","_defineProperty","NOVOE","NOVOM","NOVOF","OBSD","NOVO","requestResources","_ref","symbolFrom","resources","exchange","map","resource","resourceExchange","find","e","from","to","symbol","valueFrom","ceil","value","valueTo","symbolTo","rate","exchangeResources","_ref2","accountName","balances","maxBalances","requestedResources","maxNoneNovaBalances","requestedObsd","totalRequestedObsd","requestedNovo","totalRequestedNovo","insufficientNovo","targetResources","currentResources","length","console","log","concat","action","message","nextObsdBalance","_toConsumableArray","res","isValidObsdBalance","maxResources","nextOtherBalances","isValidOtherBalances","nextBalances","actions","filter","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novopangea/utils/exchangeResources.js"],"sourcesContent":["const _ = require('lodash');\nconst findResource = require('./findResource');\nconst RESOURCES = require('../consts/RESOURSES');\nconst sumResources = require('./sumResources');\nconst equalizeResources = require('./equalizeResources');\nconst exchangeTokens = require('../actions/exchangeTokens');\nconst validateResourceLimit = require('./validateResourceLimit');\nconst printBalances = require('./printBalances');\n\nconst MIN_TRANSACTION_VALUE = {\n    [RESOURCES.NOVOE]: 65,\n    [RESOURCES.NOVOM]: 60,\n    [RESOURCES.NOVOF]: 55,\n    [RESOURCES.OBSD]: 3,\n    [RESOURCES.NOVO]: 1,\n};\n\n// 1. transfer all resources to OBSD\n// 2. transfer OBSD to NOVO\n// 3. calculate how much OBSD needed in total\n// 4. transfer NOVO to OBSD \n// 5. transfer OBSD to all other resources\n\nconst requestResources = ({\n    symbolFrom,\n    resources,\n    exchange,\n}) => {\n    return _(resources)\n        .map(resource => {\n            const resourceExchange = exchange.find(e => e.from === symbolFrom && e.to === resource.symbol);\n\n            if (symbolFrom === resource.symbol) {\n                const valueFrom = _.ceil(resource.value / MIN_TRANSACTION_VALUE[resource.symbol]) * MIN_TRANSACTION_VALUE[resource.symbol];\n                return {\n                    valueFrom,\n                    symbolFrom,\n                    valueTo: valueFrom,\n                    symbolTo: resource.symbol,\n                };\n            }\n\n            const valueFrom = _.ceil(resource.value / resourceExchange.rate);\n\n            return {\n                valueFrom,\n                symbolFrom,\n                valueTo: valueFrom * MIN_TRANSACTION_VALUE[resource.symbol],\n                symbolTo: resource.symbol,\n            };\n        })\n        .value();\n};\n\nconst exchangeResources = ({\n    accountName,\n    exchange,\n    balances,\n    maxBalances,\n    requestedResources,\n}) => {\n    const maxNoneNovaBalances = _([\n        RESOURCES.NOVOE,\n        RESOURCES.NOVOM,\n        RESOURCES.NOVOF,\n        RESOURCES.OBSD,\n    ])\n        .map(symbol => findResource({\n            resources: maxBalances,\n            symbol,\n        }))\n        .value();\n    const requestedObsd = requestResources({\n        symbolFrom: RESOURCES.OBSD,\n        resources: requestedResources,\n        exchange,\n    });\n    const totalRequestedObsd = sumResources({\n        resources: _(requestedObsd)\n            .map(resource => ({\n                value: resource.valueFrom,\n                symbol: resource.symbolFrom,\n            }))\n            .value(),\n    });\n    const requestedNovo = requestResources({\n        symbolFrom: RESOURCES.NOVO,\n        resources: totalRequestedObsd,\n        exchange,\n    });\n    const totalRequestedNovo = sumResources({\n        resources: _(requestedNovo)\n            .map(resource => ({\n                value: resource.valueFrom,\n                symbol: resource.symbolFrom,\n            }))\n            .value(),\n    });\n\n    const insufficientNovo = equalizeResources({\n        targetResources: totalRequestedNovo,\n        currentResources: balances,\n    });\n\n    if (insufficientNovo.length > 0) {\n        console.log(`Not enough resources: ${printBalances({balances: insufficientNovo})}`);\n        return {\n            action: 'stop',\n            message: `Not enough resources: ${printBalances({balances: insufficientNovo})}`,\n        };\n    }\n\n    const nextObsdBalance = sumResources({\n        resources: [\n            ...balances,\n            // reduce NOVO\n            ..._(totalRequestedNovo)\n                .map(res => ({\n                    value: -res.value,\n                    symbol: res.symbol,\n                }))\n                .value(),\n            // add OBSD\n            ..._(requestedNovo)\n                .map(res => ({\n                    value: res.valueTo,\n                    symbol: res.symbolTo,\n                }))\n                .value(),\n        ],\n    });\n\n    const isValidObsdBalance = validateResourceLimit({\n        resources: nextObsdBalance,\n        maxResources: maxNoneNovaBalances,\n    });\n    \n    if (!isValidObsdBalance) {\n        return {\n            action: 'stop',\n            message: `Requested more than maximum storage capacity. Next balance: ${printBalances({balances: nextObsdBalance})}. Max capacity: ${printBalances({balances: maxNoneNovaBalances})}`,\n        };\n    }\n\n    const nextOtherBalances = sumResources({\n        resources: [\n            ...nextObsdBalance,\n            // reduce OBSD\n            ..._(requestedObsd)\n                .map(res => ({\n                    value: -res.valueFrom,\n                    symbol: res.symbolFrom,\n                }))\n                .value(),\n            // add other resources\n            ..._(requestedObsd)\n                .map(res => ({\n                    value: res.valueTo,\n                    symbol: res.symbolTo,\n                }))\n                .value(),\n        ],\n    });\n\n    const isValidOtherBalances = validateResourceLimit({\n        resources: nextOtherBalances,\n        maxResources: maxNoneNovaBalances,\n    });\n\n    if (!isValidOtherBalances) {\n        return {\n            action: 'stop',\n            message: `Requested more than maximum storage capacity. Next balance: ${printBalances({balances: nextOtherBalances})}. Max capacity: ${printBalances({balances: maxNoneNovaBalances})}\n            `,\n        };\n    }\n\n    const nextBalances = sumResources({\n        resources: [\n            ...nextOtherBalances,\n            // reduce costs\n            ..._(requestedResources)\n                .map(res => ({\n                    value: -res.value,\n                    symbol: res.symbol,\n                }))\n                .value(),\n        ]\n    });\n\n    const actions = [\n        ..._(requestedNovo)\n            .map(res => exchangeTokens({\n                accountName,\n                valueFrom: res.valueFrom,\n                symbolFrom: res.symbolFrom,\n                symbolTo: res.symbolTo,\n            }))\n            .value(),\n        ..._(requestedObsd)\n            .filter(res => res.symbolTo !== RESOURCES.OBSD)\n            .map(res => exchangeTokens({\n                accountName,\n                valueFrom: res.valueFrom,\n                symbolFrom: res.symbolFrom,\n                symbolTo: res.symbolTo,\n            }))\n            .value(),\n    ];\n\n    return {\n        nextBalances,\n        actions,\n    };\n};\n\nmodule.exports = exchangeResources;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}