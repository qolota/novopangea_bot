{"ast":null,"code":"const _ = require('lodash');\nconst QUALITY = require('../../../novarallywax/consts/QUALITY');\nconst RARITY = require('../../../novarallywax/consts/RARITY');\nconst validateCombinations = combinations => {\n  _.forEach(combinations, combination => {\n    if (!combination.drivers) {\n      throw new Error('Invalid combination: drivers is not defined');\n    }\n    if (!combination.vehicle) {\n      throw new Error('Invalid combination: vehicle is not defined');\n    }\n    if (!combination.vehicle.mark) {\n      throw new Error('Invalid combination: vehicle.mark is not defined');\n    }\n    if (!combination.vehicle.quality) {\n      throw new Error('Invalid combination: vehicle.quality is not defined');\n    }\n    if (!combination.vehicle.rarity) {\n      throw new Error('Invalid combination: vehicle.rarity is not defined');\n    }\n    _.forEach(combination.drivers, driver => {\n      if (!driver.name) {\n        throw new Error('Invalid combination: driver.name is not defined');\n      }\n      if (!driver.quality) {\n        throw new Error('Invalid combination: driver.quality is not defined');\n      }\n      if (!driver.rarity) {\n        throw new Error('Invalid combination: driver.rarity is not defined');\n      }\n    });\n  });\n  return combinations;\n};\nconst NR_DEATH_RALLY_COMBINATIONS = validateCombinations([{\n  drivers: [{\n    name: 'Beanpole',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }, {\n    name: 'George Square',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }],\n  vehicle: {\n    mark: 'Helios',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.CLASSIC\n  }\n}, {\n  drivers: [{\n    name: 'Scapegrace',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }, {\n    name: 'Dally',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }],\n  vehicle: {\n    mark: 'Speros',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.CLASSIC\n  }\n}, {\n  drivers: [{\n    name: 'MTV',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }, {\n    name: 'Steven',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }],\n  vehicle: {\n    mark: 'Speros',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.CLASSIC\n  }\n}, {\n  drivers: [{\n    name: 'King Earl',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }, {\n    name: 'Squatorn',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }],\n  vehicle: {\n    mark: 'Dimp',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.CLASSIC\n  }\n}, {\n  drivers: [{\n    name: 'Sammy Snake',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }, {\n    name: 'Raagman',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }],\n  vehicle: {\n    mark: 'Clunk',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.CLASSIC\n  }\n}, {\n  drivers: [{\n    name: 'MTV',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }, {\n    name: 'Optimus',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }],\n  vehicle: {\n    mark: 'Helios',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.RARE\n  }\n}, {\n  drivers: [{\n    name: 'Otis Carlton Daniels',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }, {\n    name: 'Raagman',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }],\n  vehicle: {\n    mark: 'Helios',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.RARE\n  }\n}, {\n  drivers: [{\n    name: 'Divern',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }, {\n    name: 'Steven',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.COMMON\n  }],\n  vehicle: {\n    mark: 'Helios',\n    quality: QUALITY.ROOKIE,\n    rarity: RARITY.RARE\n  }\n}]);\nmodule.exports = NR_DEATH_RALLY_COMBINATIONS;","map":{"version":3,"names":["_","require","QUALITY","RARITY","validateCombinations","combinations","forEach","combination","drivers","Error","vehicle","mark","quality","rarity","driver","name","NR_DEATH_RALLY_COMBINATIONS","ROOKIE","COMMON","CLASSIC","RARE","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/configs/accounts/5oyiw.wam/NR_DEATH_RALLY_COMBINATIONS.js"],"sourcesContent":["const _ = require('lodash');\nconst QUALITY = require('../../../novarallywax/consts/QUALITY');\nconst RARITY = require('../../../novarallywax/consts/RARITY');\n\nconst validateCombinations = (combinations) => {\n    _.forEach(combinations, (combination) => {\n        if (!combination.drivers) {\n            throw new Error('Invalid combination: drivers is not defined');\n        }\n        if (!combination.vehicle) {\n            throw new Error('Invalid combination: vehicle is not defined');\n        }\n        if (!combination.vehicle.mark) {\n            throw new Error('Invalid combination: vehicle.mark is not defined');\n        }\n        if (!combination.vehicle.quality) {\n            throw new Error('Invalid combination: vehicle.quality is not defined');\n        }\n        if (!combination.vehicle.rarity) {\n            throw new Error('Invalid combination: vehicle.rarity is not defined');\n        }\n        _.forEach(combination.drivers, (driver) => {\n            if (!driver.name) {\n                throw new Error('Invalid combination: driver.name is not defined');\n            }\n            if (!driver.quality) {\n                throw new Error('Invalid combination: driver.quality is not defined');\n            }\n            if (!driver.rarity) {\n                throw new Error('Invalid combination: driver.rarity is not defined');\n            }\n        });\n    });\n\n    return combinations;\n};\n\nconst NR_DEATH_RALLY_COMBINATIONS = validateCombinations([\n    {\n        drivers: [\n            {\n                name: 'Beanpole',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n            {\n                name: 'George Square',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n        ],\n        vehicle: {\n            mark: 'Helios',\n            quality: QUALITY.ROOKIE,\n            rarity: RARITY.CLASSIC,\n        },\n    },\n    {\n        drivers: [\n            {\n                name: 'Scapegrace',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n            {\n                name: 'Dally',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n        ],\n        vehicle: {\n            mark: 'Speros',\n            quality: QUALITY.ROOKIE,\n            rarity: RARITY.CLASSIC,\n        },\n    },\n    {\n        drivers: [\n            {\n                name: 'MTV',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n            {\n                name: 'Steven',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n        ],\n        vehicle: {\n            mark: 'Speros',\n            quality: QUALITY.ROOKIE,\n            rarity: RARITY.CLASSIC,\n        },\n    },\n    {\n        drivers: [\n            {\n                name: 'King Earl',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n            {\n                name: 'Squatorn',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n        ],\n        vehicle: {\n            mark: 'Dimp',\n            quality: QUALITY.ROOKIE,\n            rarity: RARITY.CLASSIC,\n        },\n    },\n    {\n        drivers: [\n            {\n                name: 'Sammy Snake',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n            {\n                name: 'Raagman',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n        ],\n        vehicle: {\n            mark: 'Clunk',\n            quality: QUALITY.ROOKIE,\n            rarity: RARITY.CLASSIC,\n        },\n    },\n    {\n        drivers: [\n            {\n                name: 'MTV',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n            {\n                name: 'Optimus',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n        ],\n        vehicle: {\n            mark: 'Helios',\n            quality: QUALITY.ROOKIE,\n            rarity: RARITY.RARE,\n        },\n    },\n    {\n        drivers: [\n            {\n                name: 'Otis Carlton Daniels',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n            {\n                name: 'Raagman',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n        ],\n        vehicle: {\n            mark: 'Helios',\n            quality: QUALITY.ROOKIE,\n            rarity: RARITY.RARE,\n        },\n    },\n    {\n        drivers: [\n            {\n                name: 'Divern',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n            {\n                name: 'Steven',\n                quality: QUALITY.ROOKIE,\n                rarity: RARITY.COMMON,\n            },\n        ],\n        vehicle: {\n            mark: 'Helios',\n            quality: QUALITY.ROOKIE,\n            rarity: RARITY.RARE,\n        },\n    },\n]);\n\nmodule.exports = NR_DEATH_RALLY_COMBINATIONS;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}