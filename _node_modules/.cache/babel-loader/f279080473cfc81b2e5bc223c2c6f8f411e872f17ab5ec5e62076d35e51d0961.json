{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Schema_1 = require(\"../../Schema\");\nconst Serialization_1 = require(\"../../Serialization\");\nclass RpcCollection {\n  constructor(api, name, data, cache = true) {\n    this.api = api;\n    this.name = name;\n    this._data = new Promise(async (resolve, reject) => {\n      if (data) {\n        resolve(data);\n      } else {\n        try {\n          resolve(await api.queue.fetchCollection(name, cache));\n        } catch (e) {\n          reject(e);\n        }\n      }\n    });\n  }\n  async author() {\n    return (await this._data).author;\n  }\n  async allowNotify() {\n    return (await this._data).allow_notify;\n  }\n  async authorizedAccounts() {\n    return (await this._data).authorized_accounts;\n  }\n  async notifyAccounts() {\n    return (await this._data).notify_accounts;\n  }\n  async marketFee() {\n    return Number((await this._data).market_fee);\n  }\n  async data() {\n    return (0, Serialization_1.deserialize)((await this._data).serialized_data, (0, Schema_1.ObjectSchema)((await this.api.config()).collection_format));\n  }\n  async toObject() {\n    return {\n      collection_name: this.name,\n      author: await this.author(),\n      allowNotify: await this.allowNotify(),\n      authorizedAccounts: await this.authorizedAccounts(),\n      notifyAccounts: await this.notifyAccounts(),\n      marketFee: await this.marketFee(),\n      data: await this.data()\n    };\n  }\n}\nexports.default = RpcCollection;","map":{"version":3,"names":["Object","defineProperty","exports","value","Schema_1","require","Serialization_1","RpcCollection","constructor","api","name","data","cache","_data","Promise","resolve","reject","queue","fetchCollection","e","author","allowNotify","allow_notify","authorizedAccounts","authorized_accounts","notifyAccounts","notify_accounts","marketFee","Number","market_fee","deserialize","serialized_data","ObjectSchema","config","collection_format","toObject","collection_name","default"],"sources":["/Users/germangurov/projects/wax_bot/node_modules/atomicassets/build/API/Rpc/Collection.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Schema_1 = require(\"../../Schema\");\nconst Serialization_1 = require(\"../../Serialization\");\nclass RpcCollection {\n    constructor(api, name, data, cache = true) {\n        this.api = api;\n        this.name = name;\n        this._data = new Promise(async (resolve, reject) => {\n            if (data) {\n                resolve(data);\n            }\n            else {\n                try {\n                    resolve(await api.queue.fetchCollection(name, cache));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n        });\n    }\n    async author() {\n        return (await this._data).author;\n    }\n    async allowNotify() {\n        return (await this._data).allow_notify;\n    }\n    async authorizedAccounts() {\n        return (await this._data).authorized_accounts;\n    }\n    async notifyAccounts() {\n        return (await this._data).notify_accounts;\n    }\n    async marketFee() {\n        return Number((await this._data).market_fee);\n    }\n    async data() {\n        return (0, Serialization_1.deserialize)((await this._data).serialized_data, (0, Schema_1.ObjectSchema)((await this.api.config()).collection_format));\n    }\n    async toObject() {\n        return {\n            collection_name: this.name,\n            author: await this.author(),\n            allowNotify: await this.allowNotify(),\n            authorizedAccounts: await this.authorizedAccounts(),\n            notifyAccounts: await this.notifyAccounts(),\n            marketFee: await this.marketFee(),\n            data: await this.data()\n        };\n    }\n}\nexports.default = RpcCollection;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,QAAQ,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxC,MAAMC,eAAe,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AACtD,MAAME,aAAa,CAAC;EAChBC,WAAWA,CAACC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,GAAG,IAAI,EAAE;IACvC,IAAI,CAACH,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACG,KAAK,GAAG,IAAIC,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;MAChD,IAAIL,IAAI,EAAE;QACNI,OAAO,CAACJ,IAAI,CAAC;MACjB,CAAC,MACI;QACD,IAAI;UACAI,OAAO,CAAC,MAAMN,GAAG,CAACQ,KAAK,CAACC,eAAe,CAACR,IAAI,EAAEE,KAAK,CAAC,CAAC;QACzD,CAAC,CACD,OAAOO,CAAC,EAAE;UACNH,MAAM,CAACG,CAAC,CAAC;QACb;MACJ;IACJ,CAAC,CAAC;EACN;EACA,MAAMC,MAAMA,CAAA,EAAG;IACX,OAAO,CAAC,MAAM,IAAI,CAACP,KAAK,EAAEO,MAAM;EACpC;EACA,MAAMC,WAAWA,CAAA,EAAG;IAChB,OAAO,CAAC,MAAM,IAAI,CAACR,KAAK,EAAES,YAAY;EAC1C;EACA,MAAMC,kBAAkBA,CAAA,EAAG;IACvB,OAAO,CAAC,MAAM,IAAI,CAACV,KAAK,EAAEW,mBAAmB;EACjD;EACA,MAAMC,cAAcA,CAAA,EAAG;IACnB,OAAO,CAAC,MAAM,IAAI,CAACZ,KAAK,EAAEa,eAAe;EAC7C;EACA,MAAMC,SAASA,CAAA,EAAG;IACd,OAAOC,MAAM,CAAC,CAAC,MAAM,IAAI,CAACf,KAAK,EAAEgB,UAAU,CAAC;EAChD;EACA,MAAMlB,IAAIA,CAAA,EAAG;IACT,OAAO,CAAC,CAAC,EAAEL,eAAe,CAACwB,WAAW,EAAE,CAAC,MAAM,IAAI,CAACjB,KAAK,EAAEkB,eAAe,EAAE,CAAC,CAAC,EAAE3B,QAAQ,CAAC4B,YAAY,EAAE,CAAC,MAAM,IAAI,CAACvB,GAAG,CAACwB,MAAM,CAAC,CAAC,EAAEC,iBAAiB,CAAC,CAAC;EACxJ;EACA,MAAMC,QAAQA,CAAA,EAAG;IACb,OAAO;MACHC,eAAe,EAAE,IAAI,CAAC1B,IAAI;MAC1BU,MAAM,EAAE,MAAM,IAAI,CAACA,MAAM,CAAC,CAAC;MAC3BC,WAAW,EAAE,MAAM,IAAI,CAACA,WAAW,CAAC,CAAC;MACrCE,kBAAkB,EAAE,MAAM,IAAI,CAACA,kBAAkB,CAAC,CAAC;MACnDE,cAAc,EAAE,MAAM,IAAI,CAACA,cAAc,CAAC,CAAC;MAC3CE,SAAS,EAAE,MAAM,IAAI,CAACA,SAAS,CAAC,CAAC;MACjChB,IAAI,EAAE,MAAM,IAAI,CAACA,IAAI,CAAC;IAC1B,CAAC;EACL;AACJ;AACAT,OAAO,CAACmC,OAAO,GAAG9B,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}