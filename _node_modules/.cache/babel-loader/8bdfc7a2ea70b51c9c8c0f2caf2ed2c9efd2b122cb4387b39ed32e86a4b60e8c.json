{"ast":null,"code":"import _regeneratorRuntime from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _=require('lodash');var fetchAllWaxData2=require('../../core/fetchAllWaxData2');var CONTRACTS=require('../consts/CONTRACTS');var fetchExchange=require('./fetchExchange');var fetchNovoPrice=require('./fetchNovoPrice');var fetchRealms=require('./fetchRealms');var convertAllCosts=require('../utils/convertAllCosts');var SCHEMAS=require('../consts/SCHEMAS');var fetchUpgradeConfigs=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref){var _ref$cache,cache,exchange,novoPrice,realms,upgradeConfigs,buildingUpgradeConfigs,workerUpgradeConfigs,configs;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_ref$cache=_ref.cache,cache=_ref$cache===void 0?{}:_ref$cache;_context.t0=cache.exchange;if(_context.t0){_context.next=6;break;}_context.next=5;return fetchExchange();case 5:_context.t0=_context.sent;case 6:exchange=_context.t0;_context.t1=cache.novoPrice;if(_context.t1){_context.next=12;break;}_context.next=11;return fetchNovoPrice();case 11:_context.t1=_context.sent;case 12:novoPrice=_context.t1;_context.t2=cache.realms;if(_context.t2){_context.next=18;break;}_context.next=17;return fetchRealms();case 17:_context.t2=_context.sent;case 18:realms=_context.t2;_context.next=21;return fetchAllWaxData2({params:{code:CONTRACTS.GAME,scope:CONTRACTS.GAME,table:\"upnftcfg\"},customProcessor:function customProcessor(_ref3){var row=_ref3.row;var baseLevel=Number(row.rarity.split(' ')[1]);return{id:row.id,schema:row.schema,baseLevel:baseLevel,nextLevel:baseLevel+1,resourceType:row.resource.toLowerCase(),realm:realms.find(function(r){return r.name===row.realm;}),upgradeCost:convertAllCosts({costs:row.cost,exchange:exchange,novoPrice:novoPrice})};}});case 21:upgradeConfigs=_context.sent;buildingUpgradeConfigs=_(upgradeConfigs).filter(function(c){return c.schema===SCHEMAS.BUILDING;}).groupBy(function(c){return\"\".concat(c.resourceType,\"+\").concat(c.realm.name);}).map(function(configs,key){return{key:key,configs:_(configs).map(function(config){return _objectSpread(_objectSpread({},config),{},{totalWaxUpgradeCost:_(configs).filter(function(c){return c.baseLevel<=config.baseLevel;}).sumBy(function(c){return c.upgradeCost.waxCost;})});}).sortBy(function(c){return c.baseLevel;}).value()};}).value();workerUpgradeConfigs=_(upgradeConfigs).filter(function(c){return c.schema===SCHEMAS.WORKER;}).map(function(c){return _.omit(c,['resource']);}).groupBy(function(c){return c.realm.name;}).map(function(configs,key){return{key:key,configs:_(configs).map(function(config){return _objectSpread(_objectSpread({},config),{},{totalWaxUpgradeCost:_(configs).filter(function(c){return c.baseLevel<=config.baseLevel;}).sumBy(function(c){return c.upgradeCost.waxCost;})});}).sortBy(function(c){return c.baseLevel;}).value()};}).value();configs={buildings:buildingUpgradeConfigs,workers:workerUpgradeConfigs};return _context.abrupt(\"return\",configs);case 26:case\"end\":return _context.stop();}},_callee);}));return function fetchUpgradeConfigs(_x){return _ref2.apply(this,arguments);};}();module.exports=fetchUpgradeConfigs;","map":{"version":3,"names":["_","require","fetchAllWaxData2","CONTRACTS","fetchExchange","fetchNovoPrice","fetchRealms","convertAllCosts","SCHEMAS","fetchUpgradeConfigs","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","_ref$cache","cache","exchange","novoPrice","realms","upgradeConfigs","buildingUpgradeConfigs","workerUpgradeConfigs","configs","wrap","_callee$","_context","prev","next","t0","sent","t1","t2","params","code","GAME","scope","table","customProcessor","_ref3","row","baseLevel","Number","rarity","split","id","schema","nextLevel","resourceType","resource","toLowerCase","realm","find","r","name","upgradeCost","costs","cost","filter","c","BUILDING","groupBy","concat","map","key","config","_objectSpread","totalWaxUpgradeCost","sumBy","waxCost","sortBy","value","WORKER","omit","buildings","workers","abrupt","stop","_x","apply","arguments","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novopangea/api/fetchUpgradeConfigs.js"],"sourcesContent":["const _ = require('lodash');\nconst fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchExchange = require('./fetchExchange');\nconst fetchNovoPrice = require('./fetchNovoPrice');\nconst fetchRealms = require('./fetchRealms');\nconst convertAllCosts = require('../utils/convertAllCosts');\nconst SCHEMAS = require('../consts/SCHEMAS');\n\nconst fetchUpgradeConfigs = async ({\n    cache = {}\n}) => {\n    const exchange = cache.exchange || await fetchExchange();\n    const novoPrice = cache.novoPrice || await fetchNovoPrice();\n    const realms = cache.realms || await fetchRealms();\n    const upgradeConfigs = await fetchAllWaxData2({\n        params: {\n            code: CONTRACTS.GAME,\n            scope: CONTRACTS.GAME,\n            table: \"upnftcfg\",\n        },\n        customProcessor: ({row}) => {\n            const baseLevel = Number(row.rarity.split(' ')[1]);\n\n            return {\n                id: row.id,\n                schema: row.schema,\n                baseLevel,\n                nextLevel: baseLevel + 1,\n                resourceType: row.resource.toLowerCase(),\n                realm: realms.find(r => r.name === row.realm),\n                upgradeCost: convertAllCosts({\n                    costs: row.cost,\n                    exchange,\n                    novoPrice,\n                }),\n            };\n        },\n    });\n\n    const buildingUpgradeConfigs = _(upgradeConfigs)\n        .filter(c => c.schema === SCHEMAS.BUILDING)\n        .groupBy(c => `${c.resourceType}+${c.realm.name}`)\n        .map((configs, key) => ({\n            key,\n            configs: _(configs)\n                .map(config => ({\n                    ...config,\n                    totalWaxUpgradeCost: _(configs)\n                        .filter(c => c.baseLevel <= config.baseLevel)\n                        .sumBy(c => c.upgradeCost.waxCost),\n                }))\n                .sortBy(c => c.baseLevel)\n                .value(),\n        }))\n        .value();\n    const workerUpgradeConfigs = _(upgradeConfigs)\n        .filter(c => c.schema === SCHEMAS.WORKER)\n        .map(c => _.omit(c, ['resource']))\n        .groupBy(c => c.realm.name)\n        .map((configs, key) => ({\n            key,\n            configs: _(configs)\n                .map(config => ({\n                    ...config,\n                    totalWaxUpgradeCost: _(configs)\n                        .filter(c => c.baseLevel <= config.baseLevel)\n                        .sumBy(c => c.upgradeCost.waxCost),\n                }))\n                .sortBy(c => c.baseLevel)\n                .value(),\n        }))\n        .value();\n\n    const configs = {\n        buildings: buildingUpgradeConfigs,\n        workers: workerUpgradeConfigs,\n    };\n\n    return configs;\n};\n\nmodule.exports = fetchUpgradeConfigs;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}