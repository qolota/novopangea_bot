{"ast":null,"code":"const _ = require('lodash');\nconst CONTRACTS = require('../../consts/CONTRACTS');\nconst fetchWaxData = require('../../../core/fetchWaxData');\nconst fetchAccountPlantsPower = async ({\n  accountName\n}) => {\n  const plants = await fetchWaxData({\n    code: CONTRACTS.HARVESTING,\n    index_position: 1,\n    json: true,\n    key_type: '',\n    limit: '100',\n    lower_bound: null,\n    reverse: false,\n    scope: accountName,\n    show_payer: false,\n    table: 'userpowers',\n    upper_bound: null\n  });\n  return _(plants).map(plant => ({\n    id: plant.plant_id,\n    numFruits: Number(plant.current_holding),\n    accountPower: Number(plant.power),\n    curGrowthProgress: Number(plant.progress_percent),\n    growthProgressUpdatedAt: new Date(`${plant.last_harvested}Z`)\n  })).value();\n};\nmodule.exports = fetchAccountPlantsPower;","map":{"version":3,"names":["_","require","CONTRACTS","fetchWaxData","fetchAccountPlantsPower","accountName","plants","code","HARVESTING","index_position","json","key_type","limit","lower_bound","reverse","scope","show_payer","table","upper_bound","map","plant","id","plant_id","numFruits","Number","current_holding","accountPower","power","curGrowthProgress","progress_percent","growthProgressUpdatedAt","Date","last_harvested","value","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/beastgarden/plants/api/fetchAccountPlantsPower.js"],"sourcesContent":["const _ = require('lodash');\nconst CONTRACTS = require('../../consts/CONTRACTS');\nconst fetchWaxData = require('../../../core/fetchWaxData');\n\nconst fetchAccountPlantsPower = async ({accountName}) => {\n    const plants = await fetchWaxData({\n      code: CONTRACTS.HARVESTING,\n      index_position: 1,\n      json: true,\n      key_type: '',\n      limit: '100',\n      lower_bound: null,\n      reverse: false,\n      scope: accountName,\n      show_payer: false,\n      table: 'userpowers',\n      upper_bound: null,\n  });\n\n  return _(plants)\n    .map(plant => ({\n      id: plant.plant_id,\n      numFruits: Number(plant.current_holding),\n      accountPower: Number(plant.power),\n      curGrowthProgress: Number(plant.progress_percent),\n      growthProgressUpdatedAt: new Date(`${plant.last_harvested}Z`),\n    }))\n    .value();\n};\n\nmodule.exports = fetchAccountPlantsPower;\n"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,SAAS,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AACnD,MAAME,YAAY,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAE1D,MAAMG,uBAAuB,GAAG,MAAAA,CAAO;EAACC;AAAW,CAAC,KAAK;EACrD,MAAMC,MAAM,GAAG,MAAMH,YAAY,CAAC;IAChCI,IAAI,EAAEL,SAAS,CAACM,UAAU;IAC1BC,cAAc,EAAE,CAAC;IACjBC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAEV,WAAW;IAClBW,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,OAAOlB,CAAC,CAACM,MAAM,CAAC,CACba,GAAG,CAACC,KAAK,KAAK;IACbC,EAAE,EAAED,KAAK,CAACE,QAAQ;IAClBC,SAAS,EAAEC,MAAM,CAACJ,KAAK,CAACK,eAAe,CAAC;IACxCC,YAAY,EAAEF,MAAM,CAACJ,KAAK,CAACO,KAAK,CAAC;IACjCC,iBAAiB,EAAEJ,MAAM,CAACJ,KAAK,CAACS,gBAAgB,CAAC;IACjDC,uBAAuB,EAAE,IAAIC,IAAI,CAAE,GAAEX,KAAK,CAACY,cAAe,GAAE;EAC9D,CAAC,CAAC,CAAC,CACFC,KAAK,CAAC,CAAC;AACZ,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG/B,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}