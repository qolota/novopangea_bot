{"ast":null,"code":"import _regeneratorRuntime from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var extractDomainWithProtocol=require('./extractDomainWithProtocol');var sleep=require('./sleep');var postponeRequestTime={};var fetchWithAttempts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref){var url,_ref$options,options,_ref$retries,retries,_ref$ignoreHttpErrorS,ignoreHttpErrorStatuses,domain,res,json,_json,_json2;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:url=_ref.url,_ref$options=_ref.options,options=_ref$options===void 0?{}:_ref$options,_ref$retries=_ref.retries,retries=_ref$retries===void 0?1:_ref$retries,_ref$ignoreHttpErrorS=_ref.ignoreHttpErrorStatuses,ignoreHttpErrorStatuses=_ref$ignoreHttpErrorS===void 0?[]:_ref$ignoreHttpErrorS;_context.prev=1;domain=extractDomainWithProtocol(url);_context.next=5;return fetch(url,options);case 5:res=_context.sent;if(!res.ok){_context.next=12;break;}postponeRequestTime[domain]=0;_context.next=10;return res.json();case 10:json=_context.sent;return _context.abrupt(\"return\",json);case 12:if(!ignoreHttpErrorStatuses.includes(res.status)){_context.next=19;break;}console.log(\"Ignore HTTP error status \".concat(res.status));_context.next=16;return res.json();case 16:_json=_context.sent;console.log(_json);return _context.abrupt(\"return\",{code:'ignore_http_status',status:res.status});case 19:if(!(res.status===500)){_context.next=29;break;}_context.next=22;return res.json();case 22:_json2=_context.sent;console.log(\"Internal server error\");console.log(JSON.stringify(_json2.error,null,2));postponeRequestTime[domain]=(postponeRequestTime[domain]||500)*2;console.log(\"Wait \".concat(postponeRequestTime[domain],\"ms befor making another \").concat(domain,\" request\"));_context.next=29;return sleep(postponeRequestTime[domain]);case 29:console.log(\"Loading error, attempts left \".concat(retries-1));if(!(retries>0)){_context.next=32;break;}return _context.abrupt(\"return\",fetchWithAttempts({url:url,options:options,retries:retries-1,ignoreHttpErrorStatuses:ignoreHttpErrorStatuses}));case 32:_context.next=40;break;case 34:_context.prev=34;_context.t0=_context[\"catch\"](1);console.log(_context.t0);console.log(\"Loading error, attempts left \".concat(retries-1));if(!(retries>0)){_context.next=40;break;}return _context.abrupt(\"return\",fetchWithAttempts({url:url,options:options,retries:retries-1,ignoreHttpErrorStatuses:ignoreHttpErrorStatuses}));case 40:case\"end\":return _context.stop();}},_callee,null,[[1,34]]);}));return function fetchWithAttempts(_x){return _ref2.apply(this,arguments);};}();module.exports=fetchWithAttempts;","map":{"version":3,"names":["extractDomainWithProtocol","require","sleep","postponeRequestTime","fetchWithAttempts","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","url","_ref$options","options","_ref$retries","retries","_ref$ignoreHttpErrorS","ignoreHttpErrorStatuses","domain","res","json","_json","_json2","wrap","_callee$","_context","prev","next","fetch","sent","ok","abrupt","includes","status","console","log","concat","code","JSON","stringify","error","t0","stop","_x","apply","arguments","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/utils/fetchWithAttempts.js"],"sourcesContent":["const extractDomainWithProtocol = require('./extractDomainWithProtocol');\nconst sleep = require('./sleep');\n\nconst postponeRequestTime = {};\n\nconst fetchWithAttempts = async ({\n  url,\n  options = {},\n  retries = 1,\n  ignoreHttpErrorStatuses = [],\n}) => {\n  try {\n    const domain = extractDomainWithProtocol(url);\n    const res = await fetch(url, options);\n    if (res.ok) {\n      postponeRequestTime[domain] = 0;\n      const json = await res.json();\n      return json;\n    }\n\n    if (ignoreHttpErrorStatuses.includes(res.status)) {\n      console.log(`Ignore HTTP error status ${res.status}`);\n\n      const json = await res.json();\n      console.log(json);\n\n      return {\n        code: 'ignore_http_status',\n        status: res.status,\n      };\n    }\n    \n    if (res.status === 500) {\n      const json = await res.json();\n      console.log(`Internal server error`);\n      console.log(JSON.stringify(json.error, null, 2));\n      postponeRequestTime[domain] = (postponeRequestTime[domain] || 500) * 2;\n      console.log(`Wait ${postponeRequestTime[domain]}ms befor making another ${domain} request`);\n      await sleep(postponeRequestTime[domain]);\n    }\n    \n    console.log(`Loading error, attempts left ${retries - 1}`);\n    if (retries > 0) {\n      return fetchWithAttempts({\n        url,\n        options,\n        retries: retries - 1,\n        ignoreHttpErrorStatuses,\n      });\n    }\n  } catch (err) {\n    console.log(err);\n\n    console.log(`Loading error, attempts left ${retries - 1}`);\n    if (retries > 0) {\n      return fetchWithAttempts({\n        url,\n        options,\n        retries: retries - 1,\n        ignoreHttpErrorStatuses,\n      });\n    }\n  }\n};\n\nmodule.exports = fetchWithAttempts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}