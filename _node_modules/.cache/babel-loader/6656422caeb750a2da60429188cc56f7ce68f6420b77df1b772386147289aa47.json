{"ast":null,"code":"const CONTRACTS = require('../../consts/CONTRACTS');\nconst fetchWaxData = require('../../../core/fetchWaxData');\nconst fetchLastClaimTokensTime = async ({\n  accountName\n}) => {\n  const rows = await fetchWaxData({\n    code: CONTRACTS.STAKING,\n    index_position: 1,\n    json: true,\n    key_type: \"\",\n    limit: \"100\",\n    reverse: false,\n    scope: CONTRACTS.STAKING,\n    show_payer: false,\n    table: \"user\",\n    lower_bound: accountName,\n    upper_bound: accountName\n  });\n  if (rows.length === 0) {\n    return null;\n  }\n  const stakingRaw = rows[0];\n  const springsStaking = stakingRaw.data.find(staking => staking.pool === 'springs');\n  if (springsStaking == null) {\n    return null;\n  }\n  const lastClaimTime = springsStaking.last_claim * 1000;\n  return lastClaimTime;\n};\nmodule.exports = fetchLastClaimTokensTime;","map":{"version":3,"names":["CONTRACTS","require","fetchWaxData","fetchLastClaimTokensTime","accountName","rows","code","STAKING","index_position","json","key_type","limit","reverse","scope","show_payer","table","lower_bound","upper_bound","length","stakingRaw","springsStaking","data","find","staking","pool","lastClaimTime","last_claim","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/beastgarden/tokens/api/fetchLastClaimTokensTime.js"],"sourcesContent":["const CONTRACTS = require('../../consts/CONTRACTS');\nconst fetchWaxData = require('../../../core/fetchWaxData');\n\nconst fetchLastClaimTokensTime = async ({accountName}) => {\n    const rows = await fetchWaxData({\n        code: CONTRACTS.STAKING,\n        index_position: 1,\n        json: true,\n        key_type: \"\",\n        limit: \"100\",\n        reverse: false,\n        scope: CONTRACTS.STAKING,\n        show_payer: false,\n        table: \"user\",\n        lower_bound: accountName,\n        upper_bound: accountName,\n    });\n\n    if (rows.length === 0) {\n        return null;\n    }\n\n    const stakingRaw = rows[0];\n    const springsStaking = stakingRaw.data.find(staking => staking.pool === 'springs');\n\n    if (springsStaking == null) {\n        return null;\n    }\n\n    const lastClaimTime = springsStaking.last_claim * 1000;\n\n    return lastClaimTime;\n};\n\nmodule.exports = fetchLastClaimTokensTime;"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACnD,MAAMC,YAAY,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAE1D,MAAME,wBAAwB,GAAG,MAAAA,CAAO;EAACC;AAAW,CAAC,KAAK;EACtD,MAAMC,IAAI,GAAG,MAAMH,YAAY,CAAC;IAC5BI,IAAI,EAAEN,SAAS,CAACO,OAAO;IACvBC,cAAc,EAAE,CAAC;IACjBC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAEb,SAAS,CAACO,OAAO;IACxBO,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,MAAM;IACbC,WAAW,EAAEZ,WAAW;IACxBa,WAAW,EAAEb;EACjB,CAAC,CAAC;EAEF,IAAIC,IAAI,CAACa,MAAM,KAAK,CAAC,EAAE;IACnB,OAAO,IAAI;EACf;EAEA,MAAMC,UAAU,GAAGd,IAAI,CAAC,CAAC,CAAC;EAC1B,MAAMe,cAAc,GAAGD,UAAU,CAACE,IAAI,CAACC,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAK,SAAS,CAAC;EAElF,IAAIJ,cAAc,IAAI,IAAI,EAAE;IACxB,OAAO,IAAI;EACf;EAEA,MAAMK,aAAa,GAAGL,cAAc,CAACM,UAAU,GAAG,IAAI;EAEtD,OAAOD,aAAa;AACxB,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGzB,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}