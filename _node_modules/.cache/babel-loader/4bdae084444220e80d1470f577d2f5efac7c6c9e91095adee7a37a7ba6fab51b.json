{"ast":null,"code":"const _ = require('lodash');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst fetchCollectionSchemasWaxData = require('./fetchCollectionSchemasWaxData');\nconst deserializeData = require('../utils/deserializeData');\nconst fetchCollectionTemplatesWaxData = async ({\n  collectionName,\n  cache = {}\n}) => {\n  const schemas = cache.schemas || (await fetchCollectionSchemasWaxData({\n    collectionName\n  }));\n  const templates = await fetchAllWaxData2({\n    params: {\n      code: CONTRACTS.ATOMIC_ASSETS,\n      scope: collectionName,\n      table: 'templates'\n    },\n    customProcessor: ({\n      row\n    }) => ({\n      id: row.template_id,\n      schemaName: row.schema_name,\n      isTransferable: row.transferable === 1,\n      isBurnable: row.burnable === 1,\n      maxSupply: row.max_supply,\n      issuedSupply: row.issued_supply,\n      immutableData: deserializeData({\n        schema: schemas.find(schema => schema.schemaName === row.schema_name).templateSchema,\n        serializedData: row.immutable_serialized_data\n      })\n    })\n  });\n  return templates;\n};\nmodule.exports = fetchCollectionTemplatesWaxData;","map":{"version":3,"names":["_","require","CONTRACTS","fetchAllWaxData2","fetchCollectionSchemasWaxData","deserializeData","fetchCollectionTemplatesWaxData","collectionName","cache","schemas","templates","params","code","ATOMIC_ASSETS","scope","table","customProcessor","row","id","template_id","schemaName","schema_name","isTransferable","transferable","isBurnable","burnable","maxSupply","max_supply","issuedSupply","issued_supply","immutableData","schema","find","templateSchema","serializedData","immutable_serialized_data","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/atomicassets/api/fetchCollectionTemplatesWaxData.js"],"sourcesContent":["const _ = require('lodash');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst fetchCollectionSchemasWaxData = require('./fetchCollectionSchemasWaxData');\nconst deserializeData = require('../utils/deserializeData');\n\nconst fetchCollectionTemplatesWaxData  = async ({\n    collectionName,\n    cache = {},\n}) => {\n    const schemas = cache.schemas || await fetchCollectionSchemasWaxData({\n        collectionName,\n    });\n    const templates = await fetchAllWaxData2({\n        params: {\n            code: CONTRACTS.ATOMIC_ASSETS,\n            scope: collectionName,\n            table: 'templates',\n        },\n        customProcessor: ({row}) => ({\n            id: row.template_id,\n            schemaName: row.schema_name,\n            isTransferable: row.transferable === 1,\n            isBurnable: row.burnable === 1,\n            maxSupply: row.max_supply,\n            issuedSupply: row.issued_supply,\n            immutableData: deserializeData({\n                schema: schemas\n                    .find(schema => schema.schemaName === row.schema_name)\n                    .templateSchema,\n                serializedData: row.immutable_serialized_data,\n            }),\n        }),\n    });\n    \n    return templates;\n};\n\nmodule.exports = fetchCollectionTemplatesWaxData;"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAME,gBAAgB,GAAGF,OAAO,CAAC,6BAA6B,CAAC;AAC/D,MAAMG,6BAA6B,GAAGH,OAAO,CAAC,iCAAiC,CAAC;AAChF,MAAMI,eAAe,GAAGJ,OAAO,CAAC,0BAA0B,CAAC;AAE3D,MAAMK,+BAA+B,GAAI,MAAAA,CAAO;EAC5CC,cAAc;EACdC,KAAK,GAAG,CAAC;AACb,CAAC,KAAK;EACF,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAO,KAAI,MAAML,6BAA6B,CAAC;IACjEG;EACJ,CAAC,CAAC;EACF,MAAMG,SAAS,GAAG,MAAMP,gBAAgB,CAAC;IACrCQ,MAAM,EAAE;MACJC,IAAI,EAAEV,SAAS,CAACW,aAAa;MAC7BC,KAAK,EAAEP,cAAc;MACrBQ,KAAK,EAAE;IACX,CAAC;IACDC,eAAe,EAAEA,CAAC;MAACC;IAAG,CAAC,MAAM;MACzBC,EAAE,EAAED,GAAG,CAACE,WAAW;MACnBC,UAAU,EAAEH,GAAG,CAACI,WAAW;MAC3BC,cAAc,EAAEL,GAAG,CAACM,YAAY,KAAK,CAAC;MACtCC,UAAU,EAAEP,GAAG,CAACQ,QAAQ,KAAK,CAAC;MAC9BC,SAAS,EAAET,GAAG,CAACU,UAAU;MACzBC,YAAY,EAAEX,GAAG,CAACY,aAAa;MAC/BC,aAAa,EAAEzB,eAAe,CAAC;QAC3B0B,MAAM,EAAEtB,OAAO,CACVuB,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACX,UAAU,KAAKH,GAAG,CAACI,WAAW,CAAC,CACrDY,cAAc;QACnBC,cAAc,EAAEjB,GAAG,CAACkB;MACxB,CAAC;IACL,CAAC;EACL,CAAC,CAAC;EAEF,OAAOzB,SAAS;AACpB,CAAC;AAED0B,MAAM,CAACC,OAAO,GAAG/B,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}