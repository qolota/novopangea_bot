{"ast":null,"code":"const _ = require('lodash');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\nconst fetchShares = async () => {\n  const shares = await fetchAllWaxData2({\n    params: {\n      code: CONTRACTS.SHOP,\n      scope: CONTRACTS.SHOP,\n      table: 'manufactures'\n    },\n    customProcessor: async ({\n      row\n    }) => ({\n      denominations: row.denominations,\n      manufacturer: row.manufacturer,\n      totalShares: row.total_shares\n    })\n  });\n  for (let i = 0; i < shares.length; i++) {\n    const rounds = await fetchAllWaxData2({\n      params: {\n        code: CONTRACTS.SHOP,\n        scope: shares[i].manufacturer,\n        table: 'rounds'\n      },\n      customProcessor: async ({\n        row\n      }) => ({\n        id: row.id,\n        amount: row.available,\n        price: row.price\n      })\n    });\n    shares[i].rounds = rounds;\n    shares[i].cheapestRound = _(rounds).sortBy(round => round.id).find(round => round.amount > 0);\n  }\n  return shares;\n};\nmodule.exports = fetchShares;","map":{"version":3,"names":["_","require","CONTRACTS","fetchAllWaxData2","fetchShares","shares","params","code","SHOP","scope","table","customProcessor","row","denominations","manufacturer","totalShares","total_shares","i","length","rounds","id","amount","available","price","cheapestRound","sortBy","round","find","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novarallywax/api/fetchShares.js"],"sourcesContent":["const _ = require('lodash');\nconst CONTRACTS = require('../consts/CONTRACTS');\nconst fetchAllWaxData2 = require('../../core/fetchAllWaxData2');\n\nconst fetchShares = async () => {\n    const shares = await fetchAllWaxData2({\n        params: {\n            code: CONTRACTS.SHOP,\n            scope: CONTRACTS.SHOP,\n            table: 'manufactures',\n        },\n        customProcessor: async ({row}) => ({\n            denominations: row.denominations,\n            manufacturer: row.manufacturer,\n            totalShares: row.total_shares,\n        }),\n    });\n\n    for (let i = 0; i < shares.length; i++) {\n        const rounds = await fetchAllWaxData2({\n            params: {\n                code: CONTRACTS.SHOP,\n                scope: shares[i].manufacturer,\n                table: 'rounds',\n            },\n            customProcessor: async ({row}) => ({\n                id: row.id,\n                amount: row.available,\n                price: row.price,\n            }),\n        });\n\n        shares[i].rounds = rounds;\n        shares[i].cheapestRound = _(rounds)\n            .sortBy(round => round.id)\n            .find(round => round.amount > 0);\n    }\n\n    return shares;\n};\n\nmodule.exports = fetchShares;"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAME,gBAAgB,GAAGF,OAAO,CAAC,6BAA6B,CAAC;AAE/D,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC5B,MAAMC,MAAM,GAAG,MAAMF,gBAAgB,CAAC;IAClCG,MAAM,EAAE;MACJC,IAAI,EAAEL,SAAS,CAACM,IAAI;MACpBC,KAAK,EAAEP,SAAS,CAACM,IAAI;MACrBE,KAAK,EAAE;IACX,CAAC;IACDC,eAAe,EAAE,MAAAA,CAAO;MAACC;IAAG,CAAC,MAAM;MAC/BC,aAAa,EAAED,GAAG,CAACC,aAAa;MAChCC,YAAY,EAAEF,GAAG,CAACE,YAAY;MAC9BC,WAAW,EAAEH,GAAG,CAACI;IACrB,CAAC;EACL,CAAC,CAAC;EAEF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,MAAM,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAME,MAAM,GAAG,MAAMhB,gBAAgB,CAAC;MAClCG,MAAM,EAAE;QACJC,IAAI,EAAEL,SAAS,CAACM,IAAI;QACpBC,KAAK,EAAEJ,MAAM,CAACY,CAAC,CAAC,CAACH,YAAY;QAC7BJ,KAAK,EAAE;MACX,CAAC;MACDC,eAAe,EAAE,MAAAA,CAAO;QAACC;MAAG,CAAC,MAAM;QAC/BQ,EAAE,EAAER,GAAG,CAACQ,EAAE;QACVC,MAAM,EAAET,GAAG,CAACU,SAAS;QACrBC,KAAK,EAAEX,GAAG,CAACW;MACf,CAAC;IACL,CAAC,CAAC;IAEFlB,MAAM,CAACY,CAAC,CAAC,CAACE,MAAM,GAAGA,MAAM;IACzBd,MAAM,CAACY,CAAC,CAAC,CAACO,aAAa,GAAGxB,CAAC,CAACmB,MAAM,CAAC,CAC9BM,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACN,EAAE,CAAC,CACzBO,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACL,MAAM,GAAG,CAAC,CAAC;EACxC;EAEA,OAAOhB,MAAM;AACjB,CAAC;AAEDuB,MAAM,CAACC,OAAO,GAAGzB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}