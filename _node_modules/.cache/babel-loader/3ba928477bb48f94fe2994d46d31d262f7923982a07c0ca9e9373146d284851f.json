{"ast":null,"code":"const GROWTH_PROGRESS_CAP = 1.0;\nconst calcGrowthProgress = ({\n  curGrowthProgress,\n  growthProgressUpdatedAt,\n  harvestingSettings\n}) => {\n  const growthProgressOffset = (Date.now() - growthProgressUpdatedAt.getTime()) / (harvestingSettings.realDaysTillHarvest * 24 * 60 * 60 * 1000);\n  const newGrowthProgress = curGrowthProgress / 100 + growthProgressOffset;\n  return newGrowthProgress > GROWTH_PROGRESS_CAP ? GROWTH_PROGRESS_CAP : newGrowthProgress;\n};\nmodule.exports = calcGrowthProgress;","map":{"version":3,"names":["GROWTH_PROGRESS_CAP","calcGrowthProgress","curGrowthProgress","growthProgressUpdatedAt","harvestingSettings","growthProgressOffset","Date","now","getTime","realDaysTillHarvest","newGrowthProgress","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/beastgarden/plants/utils/calcGrowthProgress.js"],"sourcesContent":["const GROWTH_PROGRESS_CAP = 1.0;\n\nconst calcGrowthProgress = ({\n  curGrowthProgress,\n  growthProgressUpdatedAt,\n  harvestingSettings,\n}) => {\n  const growthProgressOffset =\n    (Date.now() - growthProgressUpdatedAt.getTime()) /\n    (harvestingSettings.realDaysTillHarvest * 24 * 60 * 60 * 1000);\n  const newGrowthProgress = curGrowthProgress / 100 + growthProgressOffset;\n\n  return newGrowthProgress > GROWTH_PROGRESS_CAP\n    ? GROWTH_PROGRESS_CAP\n    : newGrowthProgress;\n};\n\nmodule.exports = calcGrowthProgress;\n"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,GAAG;AAE/B,MAAMC,kBAAkB,GAAGA,CAAC;EAC1BC,iBAAiB;EACjBC,uBAAuB;EACvBC;AACF,CAAC,KAAK;EACJ,MAAMC,oBAAoB,GACxB,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGJ,uBAAuB,CAACK,OAAO,CAAC,CAAC,KAC9CJ,kBAAkB,CAACK,mBAAmB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;EAChE,MAAMC,iBAAiB,GAAGR,iBAAiB,GAAG,GAAG,GAAGG,oBAAoB;EAExE,OAAOK,iBAAiB,GAAGV,mBAAmB,GAC1CA,mBAAmB,GACnBU,iBAAiB;AACvB,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGX,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}