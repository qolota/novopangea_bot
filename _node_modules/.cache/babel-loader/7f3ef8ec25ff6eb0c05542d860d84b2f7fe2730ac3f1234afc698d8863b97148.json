{"ast":null,"code":"import _regeneratorRuntime from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _=require('lodash');var fetchMarkets=require('../../alcor/api/fetchMarkets');var fetchNovoPrice=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var markets,charmMarket,pool,symbol;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetchMarkets();case 2:markets=_context.sent;charmMarket=markets['NOVO+tokens.novo'];pool=_(charmMarket.pools).find(function(pool){return _(pool.symbols).map(function(symbol){return symbol.fullTokenName;}).filter(function(symbol){return symbol==='WAX+eosio.token';}).value().length>0;});if(!(pool==null)){_context.next=7;break;}return _context.abrupt(\"return\",null);case 7:symbol=pool.symbols.find(function(symbol){return symbol.fullTokenName!=='WAX+eosio.token';});if(!(symbol==null)){_context.next=10;break;}return _context.abrupt(\"return\",null);case 10:return _context.abrupt(\"return\",symbol.price);case 11:case\"end\":return _context.stop();}},_callee);}));return function fetchNovoPrice(){return _ref.apply(this,arguments);};}();module.exports=fetchNovoPrice;","map":{"version":3,"names":["_","require","fetchMarkets","fetchNovoPrice","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","markets","charmMarket","pool","symbol","wrap","_callee$","_context","prev","next","sent","pools","find","symbols","map","fullTokenName","filter","value","length","abrupt","price","stop","apply","arguments","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/novopangea/api/fetchNovoPrice.js"],"sourcesContent":["const _ = require('lodash');\nconst fetchMarkets = require('../../alcor/api/fetchMarkets');\n\nconst fetchNovoPrice = async () => {\n    const markets = await fetchMarkets();\n    const charmMarket = markets['NOVO+tokens.novo'];\n    const pool = _(charmMarket.pools)\n        .find(pool => {\n            return _(pool.symbols)\n                .map(symbol => symbol.fullTokenName)\n                .filter(symbol => symbol === 'WAX+eosio.token')\n                .value()\n                .length > 0;\n        });\n\n    if (pool == null) {\n        return null;\n    }\n\n    const symbol = pool\n        .symbols\n        .find(symbol => symbol.fullTokenName !== 'WAX+eosio.token');\n\n    if (symbol == null) {\n        return null;\n    }\n\n    return symbol.price;\n};\n\nmodule.exports = fetchNovoPrice;"],"mappings":"kQAAA,GAAM,CAAAA,CAAC,CAAGC,OAAO,CAAC,QAAQ,CAAC,CAC3B,GAAM,CAAAC,YAAY,CAAGD,OAAO,CAAC,8BAA8B,CAAC,CAE5D,GAAM,CAAAE,cAAc,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,OAAA,CAAAC,WAAA,CAAAC,IAAA,CAAAC,MAAA,QAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACG,CAAAf,YAAY,CAAC,CAAC,QAA9BO,OAAO,CAAAM,QAAA,CAAAG,IAAA,CACPR,WAAW,CAAGD,OAAO,CAAC,kBAAkB,CAAC,CACzCE,IAAI,CAAGX,CAAC,CAACU,WAAW,CAACS,KAAK,CAAC,CAC5BC,IAAI,CAAC,SAAAT,IAAI,CAAI,CACV,MAAO,CAAAX,CAAC,CAACW,IAAI,CAACU,OAAO,CAAC,CACjBC,GAAG,CAAC,SAAAV,MAAM,QAAI,CAAAA,MAAM,CAACW,aAAa,GAAC,CACnCC,MAAM,CAAC,SAAAZ,MAAM,QAAI,CAAAA,MAAM,GAAK,iBAAiB,GAAC,CAC9Ca,KAAK,CAAC,CAAC,CACPC,MAAM,CAAG,CAAC,CACnB,CAAC,CAAC,MAEFf,IAAI,EAAI,IAAI,GAAAI,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAY,MAAA,UACL,IAAI,SAGTf,MAAM,CAAGD,IAAI,CACdU,OAAO,CACPD,IAAI,CAAC,SAAAR,MAAM,QAAI,CAAAA,MAAM,CAACW,aAAa,GAAK,iBAAiB,GAAC,MAE3DX,MAAM,EAAI,IAAI,GAAAG,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAY,MAAA,UACP,IAAI,iBAAAZ,QAAA,CAAAY,MAAA,UAGRf,MAAM,CAACgB,KAAK,2BAAAb,QAAA,CAAAc,IAAA,MAAArB,OAAA,GACtB,kBAzBK,CAAAL,cAAcA,CAAA,SAAAC,IAAA,CAAA0B,KAAA,MAAAC,SAAA,OAyBnB,CAEDC,MAAM,CAACC,OAAO,CAAG9B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}