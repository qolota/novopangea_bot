{"ast":null,"code":"import _regeneratorRuntime from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/germangurov/projects/wax_bot/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _=require('lodash');var fetchDEXs=require('./fetchDEXs');var fetchSwapPools=require('./fetchSwapPools');var fetchMarkets=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var dexs,pools,markets;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetchDEXs();case 2:dexs=_context.sent;_context.next=5;return fetchSwapPools();case 5:pools=_context.sent;markets=_([].concat(_toConsumableArray(_.keys(dexs)),_toConsumableArray(_.keys(pools)))).uniq().map(function(marketKey){return{marketKey:marketKey,dexs:dexs[marketKey]||[],pools:pools[marketKey]||[]};}).reduce(function(markets,market){markets[market.marketKey]=market;return markets;},{});return _context.abrupt(\"return\",markets);case 8:case\"end\":return _context.stop();}},_callee);}));return function fetchMarkets(){return _ref.apply(this,arguments);};}();module.exports=fetchMarkets;","map":{"version":3,"names":["_","require","fetchDEXs","fetchSwapPools","fetchMarkets","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dexs","pools","markets","wrap","_callee$","_context","prev","next","sent","concat","_toConsumableArray","keys","uniq","map","marketKey","reduce","market","abrupt","stop","apply","arguments","module","exports"],"sources":["/Users/germangurov/projects/wax_bot/src/alcor/api/fetchMarkets.js"],"sourcesContent":["const _ = require('lodash');\nconst fetchDEXs = require('./fetchDEXs');\nconst fetchSwapPools = require('./fetchSwapPools');\n\nconst fetchMarkets = async () => {\n  const dexs = await fetchDEXs();\n  const pools = await fetchSwapPools();\n\n  const markets = _([\n    ..._.keys(dexs),\n    ..._.keys(pools),\n  ])\n    .uniq()\n    .map(marketKey => ({\n      marketKey,\n      dexs: dexs[marketKey] || [],\n      pools: pools[marketKey] || [],\n    }))\n    .reduce((markets, market) => {\n      markets[market.marketKey] = market;\n      return markets;\n    }, {});\n\n  return markets;\n};\n\nmodule.exports = fetchMarkets;\n"],"mappings":"mYAAA,GAAM,CAAAA,CAAC,CAAGC,OAAO,CAAC,QAAQ,CAAC,CAC3B,GAAM,CAAAC,SAAS,CAAGD,OAAO,CAAC,aAAa,CAAC,CACxC,GAAM,CAAAE,cAAc,CAAGF,OAAO,CAAC,kBAAkB,CAAC,CAElD,GAAM,CAAAG,YAAY,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,IAAA,CAAAC,KAAA,CAAAC,OAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACA,CAAAf,SAAS,CAAC,CAAC,QAAxBQ,IAAI,CAAAK,QAAA,CAAAG,IAAA,CAAAH,QAAA,CAAAE,IAAA,SACU,CAAAd,cAAc,CAAC,CAAC,QAA9BQ,KAAK,CAAAI,QAAA,CAAAG,IAAA,CAELN,OAAO,CAAGZ,CAAC,IAAAmB,MAAA,CAAAC,kBAAA,CACZpB,CAAC,CAACqB,IAAI,CAACX,IAAI,CAAC,EAAAU,kBAAA,CACZpB,CAAC,CAACqB,IAAI,CAACV,KAAK,CAAC,EACjB,CAAC,CACCW,IAAI,CAAC,CAAC,CACNC,GAAG,CAAC,SAAAC,SAAS,QAAK,CACjBA,SAAS,CAATA,SAAS,CACTd,IAAI,CAAEA,IAAI,CAACc,SAAS,CAAC,EAAI,EAAE,CAC3Bb,KAAK,CAAEA,KAAK,CAACa,SAAS,CAAC,EAAI,EAC7B,CAAC,EAAC,CAAC,CACFC,MAAM,CAAC,SAACb,OAAO,CAAEc,MAAM,CAAK,CAC3Bd,OAAO,CAACc,MAAM,CAACF,SAAS,CAAC,CAAGE,MAAM,CAClC,MAAO,CAAAd,OAAO,CAChB,CAAC,CAAE,CAAC,CAAC,CAAC,QAAAG,QAAA,CAAAY,MAAA,UAEDf,OAAO,0BAAAG,QAAA,CAAAa,IAAA,MAAAnB,OAAA,GACf,kBApBK,CAAAL,YAAYA,CAAA,SAAAC,IAAA,CAAAwB,KAAA,MAAAC,SAAA,OAoBjB,CAEDC,MAAM,CAACC,OAAO,CAAG5B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}